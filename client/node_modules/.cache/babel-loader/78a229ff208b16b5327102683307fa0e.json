{"ast":null,"code":"import { SET_AUDIO_PLAYING, SET_AUDIO_PAUSED, AUDIO_PLAYING, AUDIO_PAUSED } from '../actions/types';\nconst initialState = {\n  playtlist: [],\n  currentTrack: {},\n  playing: false,\n  playingTime: '0: 00'\n}; // export items in current state + changes\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_AUDIO_PLAYING:\n      return { ...state,\n        currentTrack: state.items.filter(track => track.id === action.payload),\n        playing: true\n      };\n\n    case SET_AUDIO_PAUSED:\n      return { ...state,\n        playing: false\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/oscady/Documents/projects/outboard/client/src/reducers/audioReducer.js"],"names":["SET_AUDIO_PLAYING","SET_AUDIO_PAUSED","AUDIO_PLAYING","AUDIO_PAUSED","initialState","playtlist","currentTrack","playing","playingTime","state","action","type","items","filter","track","id","payload"],"mappings":"AAAA,SAASA,iBAAT,EAA4BC,gBAA5B,EAA8CC,aAA9C,EAA6DC,YAA7D,QAAiF,kBAAjF;AAEA,MAAMC,YAAY,GAAG;AACpBC,EAAAA,SAAS,EAAE,EADS;AAEpBC,EAAAA,YAAY,EAAE,EAFM;AAGpBC,EAAAA,OAAO,EAAE,KAHW;AAIpBC,EAAAA,WAAW,EAAE;AAJO,CAArB,C,CAMA;;AACA,eAAe,UAASC,KAAK,GAAGL,YAAjB,EAA+BM,MAA/B,EAAuC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACC,SAAKX,iBAAL;AACC,aAAO,EACN,GAAGS,KADG;AAENH,QAAAA,YAAY,EAAEG,KAAK,CAACG,KAAN,CAAYC,MAAZ,CAAoBC,KAAD,IAAWA,KAAK,CAACC,EAAN,KAAaL,MAAM,CAACM,OAAlD,CAFR;AAGNT,QAAAA,OAAO,EAAE;AAHH,OAAP;;AAKD,SAAKN,gBAAL;AACC,aAAO,EACN,GAAGQ,KADG;AAENF,QAAAA,OAAO,EAAE;AAFH,OAAP;;AAKD;AACC,aAAOE,KAAP;AAdF;AAgBA","sourcesContent":["import { SET_AUDIO_PLAYING, SET_AUDIO_PAUSED, AUDIO_PLAYING, AUDIO_PAUSED } from '../actions/types';\n\nconst initialState = {\n\tplaytlist: [],\n\tcurrentTrack: {},\n\tplaying: false,\n\tplayingTime: '0: 00'\n};\n// export items in current state + changes\nexport default function(state = initialState, action) {\n\tswitch (action.type) {\n\t\tcase SET_AUDIO_PLAYING:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcurrentTrack: state.items.filter((track) => track.id === action.payload),\n\t\t\t\tplaying: true\n\t\t\t};\n\t\tcase SET_AUDIO_PAUSED:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tplaying: false\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}