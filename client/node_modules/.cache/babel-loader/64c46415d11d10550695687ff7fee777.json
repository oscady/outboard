{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React, { useEffect, useRef, useCallback } from 'react';\nimport DropdownContext from './DropdownContext';\nexport default function Dropdown(_ref) {\n  var arrow = _ref.arrow,\n      isOpen = _ref.isOpen,\n      toggle = _ref.toggle,\n      dropDirection = _ref.dropDirection,\n      className = _ref.className,\n      attributes = _objectWithoutProperties(_ref, [\"arrow\", \"isOpen\", \"toggle\", \"dropDirection\", \"className\"]);\n\n  var nodeRef = useRef(null);\n  var handleDocumentClick = useCallback(function (event) {\n    // ESCAPE EVENT\n    if (event.type === \"keyup\" && event.keyCode === 27) {\n      toggle();\n      return;\n    } // CLICK EVENT\n\n\n    var container = nodeRef.current;\n    if (container.contains(event.target) && container !== event.target) return;\n    toggle();\n  }, [toggle]);\n  var addEvents = useCallback(function () {\n    [\"click\", \"keyup\"].forEach(function (event) {\n      return document.addEventListener(event, handleDocumentClick, true);\n    });\n  }, [handleDocumentClick]);\n  var removeEvents = useCallback(function () {\n    [\"click\", \"keyup\"].forEach(function (event) {\n      return document.removeEventListener(event, handleDocumentClick, true);\n    });\n  }, [handleDocumentClick]);\n  useEffect(function () {\n    if (isOpen) addEvents();else removeEvents();\n    return function () {\n      removeEvents();\n    };\n  }, [isOpen, addEvents, removeEvents]);\n  var classes = \"dropdown\";\n  if (isOpen) classes += \" show\";\n  if (arrow) classes += \" with-arrow\";\n  if (dropDirection) classes += \" drop\" + dropDirection;\n  if (className) classes += \" \" + className;\n  return /*#__PURE__*/React.createElement(DropdownContext.Provider, {\n    value: {\n      isOpen: isOpen,\n      toggle: toggle\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", Object.assign({}, attributes, {\n    ref: nodeRef,\n    className: classes\n  })));\n}","map":{"version":3,"sources":["/home/oscady/Documents/projects/outboard/client/node_modules/reacthalfmoon/dist/components/Dropdown.js"],"names":["_objectWithoutProperties","React","useEffect","useRef","useCallback","DropdownContext","Dropdown","_ref","arrow","isOpen","toggle","dropDirection","className","attributes","nodeRef","handleDocumentClick","event","type","keyCode","container","current","contains","target","addEvents","forEach","document","addEventListener","removeEvents","removeEventListener","classes","createElement","Provider","value","Object","assign","ref"],"mappings":"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","sourcesContent":["import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React, { useEffect, useRef, useCallback } from 'react';\nimport DropdownContext from './DropdownContext';\nexport default function Dropdown(_ref) {\n  var arrow = _ref.arrow,\n      isOpen = _ref.isOpen,\n      toggle = _ref.toggle,\n      dropDirection = _ref.dropDirection,\n      className = _ref.className,\n      attributes = _objectWithoutProperties(_ref, [\"arrow\", \"isOpen\", \"toggle\", \"dropDirection\", \"className\"]);\n\n  var nodeRef = useRef(null);\n  var handleDocumentClick = useCallback(function (event) {\n    // ESCAPE EVENT\n    if (event.type === \"keyup\" && event.keyCode === 27) {\n      toggle();\n      return;\n    } // CLICK EVENT\n\n\n    var container = nodeRef.current;\n    if (container.contains(event.target) && container !== event.target) return;\n    toggle();\n  }, [toggle]);\n  var addEvents = useCallback(function () {\n    [\"click\", \"keyup\"].forEach(function (event) {\n      return document.addEventListener(event, handleDocumentClick, true);\n    });\n  }, [handleDocumentClick]);\n  var removeEvents = useCallback(function () {\n    [\"click\", \"keyup\"].forEach(function (event) {\n      return document.removeEventListener(event, handleDocumentClick, true);\n    });\n  }, [handleDocumentClick]);\n  useEffect(function () {\n    if (isOpen) addEvents();else removeEvents();\n    return function () {\n      removeEvents();\n    };\n  }, [isOpen, addEvents, removeEvents]);\n  var classes = \"dropdown\";\n  if (isOpen) classes += \" show\";\n  if (arrow) classes += \" with-arrow\";\n  if (dropDirection) classes += \" drop\" + dropDirection;\n  if (className) classes += \" \" + className;\n  return /*#__PURE__*/React.createElement(DropdownContext.Provider, {\n    value: {\n      isOpen: isOpen,\n      toggle: toggle\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", Object.assign({}, attributes, {\n    ref: nodeRef,\n    className: classes\n  })));\n}"]},"metadata":{},"sourceType":"module"}