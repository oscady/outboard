{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/oscady/Documents/projects/outboard/client/src/components-back/Releases/TrackModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport Tracks from '../Tracks/Tracks';\nimport styled from 'styled-components';\nconst ItemList = styled.ul`\n\twidth: 100%;\n\theight: 100%;\n\tpadding: 20px;\n\tbackground-color: pink;\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: space-between;\n\tjustify-content: space-between;\n\n\tli {\n\t\tdisplay: flex;\n\t\tflex-direction: row;\n\t\tbackground-color: lightpink;\n\t\talign-items: space-between;\n\t\tjustify-content: space-between;\n\t\tmargin-top: 5px;\n\t}\n`;\n_c = ItemList;\n\nconst TracksModal = props => {\n  _s();\n\n  const {\n    buttonLabel,\n    className\n  } = props;\n  const [modal, setModal] = useState(false);\n\n  const toggle = () => setModal(!modal);\n\n  const addItem = id => {\n    props.setTracks([...props.tracks, id]);\n    console.log(props.tracks);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      color: \"danger\",\n      onClick: toggle,\n      children: buttonLabel\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modal,\n      toggle: toggle,\n      className: className,\n      children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n        toggle: toggle,\n        children: \"Modal title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n        children: /*#__PURE__*/_jsxDEV(ItemList, {\n          children: props.uploadedTracks.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [item.artistName, \" - ' \", item.trackName]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              onClick: () => addItem(item._id),\n              children: \"add track\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 8\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          onClick: toggle,\n          children: \"Do Something\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 6\n        }, this), ' ', /*#__PURE__*/_jsxDEV(Button, {\n          color: \"secondary\",\n          onClick: toggle,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 3\n  }, this);\n};\n\n_s(TracksModal, \"TRWSB3LiAWCiDEbPAmxZ7bLGYpg=\");\n\n_c2 = TracksModal;\nexport default TracksModal;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ItemList\");\n$RefreshReg$(_c2, \"TracksModal\");","map":{"version":3,"sources":["/home/oscady/Documents/projects/outboard/client/src/components-back/Releases/TrackModal.js"],"names":["React","useState","Button","Modal","ModalHeader","ModalBody","ModalFooter","Tracks","styled","ItemList","ul","TracksModal","props","buttonLabel","className","modal","setModal","toggle","addItem","id","setTracks","tracks","console","log","uploadedTracks","map","item","artistName","trackName","_id"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,WAAxB,EAAqCC,SAArC,EAAgDC,WAAhD,QAAmE,YAAnE;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,QAAQ,GAAGD,MAAM,CAACE,EAAG;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAlBA;KAAMD,Q;;AAoBN,MAAME,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC9B,QAAM;AAAEC,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAA6BF,KAAnC;AAEA,QAAM,CAAEG,KAAF,EAASC,QAAT,IAAsBf,QAAQ,CAAC,KAAD,CAApC;;AAEA,QAAMgB,MAAM,GAAG,MAAMD,QAAQ,CAAC,CAACD,KAAF,CAA7B;;AAEA,QAAMG,OAAO,GAAIC,EAAD,IAAQ;AACvBP,IAAAA,KAAK,CAACQ,SAAN,CAAgB,CAAE,GAAGR,KAAK,CAACS,MAAX,EAAmBF,EAAnB,CAAhB;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYX,KAAK,CAACS,MAAlB;AACA,GAHD;;AAKA,sBACC;AAAA,4BACC,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,QAAd;AAAuB,MAAA,OAAO,EAAEJ,MAAhC;AAAA,gBACEJ;AADF;AAAA;AAAA;AAAA;AAAA,YADD,eAIC,QAAC,KAAD;AAAO,MAAA,MAAM,EAAEE,KAAf;AAAsB,MAAA,MAAM,EAAEE,MAA9B;AAAsC,MAAA,SAAS,EAAEH,SAAjD;AAAA,8BACC,QAAC,WAAD;AAAa,QAAA,MAAM,EAAEG,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAEC,QAAC,SAAD;AAAA,+BACC,QAAC,QAAD;AAAA,oBACEL,KAAK,CAACY,cAAN,CAAqBC,GAArB,CAA0BC,IAAD,iBACzB;AAAA,oCACC;AAAA,yBACEA,IAAI,CAACC,UADP,WACwBD,IAAI,CAACE,SAD7B;AAAA;AAAA;AAAA;AAAA;AAAA,oBADD,eAIC;AAAG,cAAA,OAAO,EAAE,MAAMV,OAAO,CAACQ,IAAI,CAACG,GAAN,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJD;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA;AADF;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cAFD,eAcC,QAAC,WAAD;AAAA,gCACC,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,SAAd;AAAwB,UAAA,OAAO,EAAEZ,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,EAGW,GAHX,eAIC,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,WAAd;AAA0B,UAAA,OAAO,EAAEA,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJD;AAAA;AAAA;AAAA;AAAA;AAAA,cAdD;AAAA;AAAA;AAAA;AAAA;AAAA,YAJD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AA8BA,CA1CD;;GAAMN,W;;MAAAA,W;AA4CN,eAAeA,WAAf","sourcesContent":["import React, { useState } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport Tracks from '../Tracks/Tracks';\nimport styled from 'styled-components';\n\nconst ItemList = styled.ul`\n\twidth: 100%;\n\theight: 100%;\n\tpadding: 20px;\n\tbackground-color: pink;\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: space-between;\n\tjustify-content: space-between;\n\n\tli {\n\t\tdisplay: flex;\n\t\tflex-direction: row;\n\t\tbackground-color: lightpink;\n\t\talign-items: space-between;\n\t\tjustify-content: space-between;\n\t\tmargin-top: 5px;\n\t}\n`;\n\nconst TracksModal = (props) => {\n\tconst { buttonLabel, className } = props;\n\n\tconst [ modal, setModal ] = useState(false);\n\n\tconst toggle = () => setModal(!modal);\n\n\tconst addItem = (id) => {\n\t\tprops.setTracks([ ...props.tracks, id ]);\n\t\tconsole.log(props.tracks);\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<Button color='danger' onClick={toggle}>\n\t\t\t\t{buttonLabel}\n\t\t\t</Button>\n\t\t\t<Modal isOpen={modal} toggle={toggle} className={className}>\n\t\t\t\t<ModalHeader toggle={toggle}>Modal title</ModalHeader>\n\t\t\t\t<ModalBody>\n\t\t\t\t\t<ItemList>\n\t\t\t\t\t\t{props.uploadedTracks.map((item) => (\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t{item.artistName} - ' {item.trackName}\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t<p onClick={() => addItem(item._id)}>add track</p>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</ItemList>\n\t\t\t\t</ModalBody>\n\t\t\t\t<ModalFooter>\n\t\t\t\t\t<Button color='primary' onClick={toggle}>\n\t\t\t\t\t\tDo Something\n\t\t\t\t\t</Button>{' '}\n\t\t\t\t\t<Button color='secondary' onClick={toggle}>\n\t\t\t\t\t\tCancel\n\t\t\t\t\t</Button>\n\t\t\t\t</ModalFooter>\n\t\t\t</Modal>\n\t\t</div>\n\t);\n};\n\nexport default TracksModal;\n"]},"metadata":{},"sourceType":"module"}