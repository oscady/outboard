{"ast":null,"code":"import { GET_IMAGES, ADD_IMAGE, IMAGES_LOADING } from '../actions/types';\nconst initialState = {\n  images: [],\n  loading: false\n}; // export images in current state + changes\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_IMAGES:\n      return { ...state,\n        // return state of images\n        images: action.payload,\n        loading: false\n      };\n\n    case ADD_IMAGE:\n      return { ...state,\n        images: [action.payload, ...state.images],\n        // copy state and return with new image\n        loading: false\n      };\n\n    case IMAGES_LOADING:\n      return { ...state,\n        loading: true\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/oscady/Documents/projects/outboard/client/src/reducers/imageUploadReducer.js"],"names":["GET_IMAGES","ADD_IMAGE","IMAGES_LOADING","initialState","images","loading","state","action","type","payload"],"mappings":"AAAA,SACEA,UADF,EACcC,SADd,EACyBC,cADzB,QAEO,kBAFP;AAIA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE,EADW;AAEnBC,EAAAA,OAAO,EAAE;AAFU,CAArB,C,CAIA;;AACA,eAAe,UAAUC,KAAK,GAAGH,YAAlB,EAAgCI,MAAhC,EAAwC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,UAAL;AACE,aAAO,EACL,GAAGM,KADE;AACK;AACVF,QAAAA,MAAM,EAAEG,MAAM,CAACE,OAFV;AAGLJ,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKA,SAAKJ,SAAL;AACA,aAAO,EACL,GAAGK,KADE;AAELF,QAAAA,MAAM,EAAE,CACNG,MAAM,CAACE,OADD,EACU,GAAGH,KAAK,CAACF,MADnB,CAFH;AAIF;AACHC,QAAAA,OAAO,EAAE;AALJ,OAAP;;AAOF,SAAKH,cAAL;AACE,aAAO,EACL,GAAGI,KADE;AAELD,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAKF;AACE,aAAOC,KAAP;AAtBJ;AAwBD","sourcesContent":["import {\n  GET_IMAGES, ADD_IMAGE, IMAGES_LOADING\n} from '../actions/types';\n\nconst initialState = {\n  images: [],\n  loading: false\n}\n// export images in current state + changes\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_IMAGES:\n      return {\n        ...state, // return state of images\n        images: action.payload, \n        loading: false\n      };\n      case ADD_IMAGE:\n      return {\n        ...state,\n        images: [\n          action.payload, ...state.images\n        ], // copy state and return with new image\n        loading: false\n      };\n    case IMAGES_LOADING:\n      return {\n        ...state,\n        loading: true\n      }\n\n    default:\n      return state;\n  }\n}"]},"metadata":{},"sourceType":"module"}