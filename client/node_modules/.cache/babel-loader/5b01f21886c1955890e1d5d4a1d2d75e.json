{"ast":null,"code":"import { SET_AUDIO_PLAYING, SET_AUDIO_PAUSED, AUDIO_PLAYING, AUDIO_PAUSED } from './types';\nimport axios from 'axios'; // // get items action sent to reducer\n// export const getItems = () => (dispatch) => {\n// \tdispatch(setItemsLoading(console.log('items are loading...')));\n// \taxios.get('/api/items').then((res) =>\n// \t\tdispatch({\n// \t\t\ttype: GET_ITEMS,\n// \t\t\tpayload: res.data\n// \t\t})\n// \t);\n// };\n// get single project\n\nexport const getSingleTrack = id => dispatch => {\n  dispatch(setItemsLoading());\n  axios.get(`/data/playlist`).then(res => dispatch({\n    type: GET_SINGLE_ITEM,\n    payload: res.data\n  })).catch(err => console.error(\"Can't get item\", err));\n}; // // add new item sent to reducer\n// export const addItem = (item) => (dispatch) => {\n// \tdispatch(setItemsLoading(console.log('items are loading...')));\n// \taxios.post('/api/items', item).then((res) =>\n// \t\tdispatch({\n// \t\t\ttype: ADD_ITEM,\n// \t\t\tpayload: res.data\n// \t\t})\n// \t);\n// };\n// // delete item by id request sent to reducer\n// export const deleteItem = (id) => (dispatch) => {\n// \taxios.delete(`/api/items/${id}`).then((res) =>\n// \t\tdispatch({\n// \t\t\ttype: DELETE_ITEM,\n// \t\t\tpayload: id\n// \t\t})\n// \t);\n// };\n// // loading items graphic sent to reducer\n// export const setItemsLoading = (item) => {\n// \treturn {\n// \t\ttype: ITEMS_LOADING\n// \t};\n// };\n// loading items graphic sent to reducer\n\nexport const setAudioPlaying = id => {\n  return {\n    type: SET_AUDIO_PLAYING,\n    payload: id\n  };\n}; // loading items graphic sent to reducer\n\nexport const setAudioPaused = () => {\n  return {\n    type: SET_AUDIO_PAUSED\n  };\n}; // get current player time\n\nexport const getSecondsToMinutesAndSeconds = time => {\n  if (time === 0) {\n    return '0 : 00';\n  }\n\n  const minutes = Math.floor(time / 60);\n  const seconds = time - minutes * 60;\n  return `${minutes} : 0${seconds}`;\n};","map":{"version":3,"sources":["/home/oscady/Documents/projects/outboard/client/src/actions/audioActions.js"],"names":["SET_AUDIO_PLAYING","SET_AUDIO_PAUSED","AUDIO_PLAYING","AUDIO_PAUSED","axios","getSingleTrack","id","dispatch","setItemsLoading","get","then","res","type","GET_SINGLE_ITEM","payload","data","catch","err","console","error","setAudioPlaying","setAudioPaused","getSecondsToMinutesAndSeconds","time","minutes","Math","floor","seconds"],"mappings":"AAAA,SAASA,iBAAT,EAA4BC,gBAA5B,EAA8CC,aAA9C,EAA6DC,YAA7D,QAAiF,SAAjF;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA,OAAO,MAAMC,cAAc,GAAIC,EAAD,IAASC,QAAD,IAAc;AACnDA,EAAAA,QAAQ,CAACC,eAAe,EAAhB,CAAR;AACAJ,EAAAA,KAAK,CACHK,GADF,CACO,gBADP,EAEEC,IAFF,CAEQC,GAAD,IAASJ,QAAQ,CAAC;AAAEK,IAAAA,IAAI,EAAEC,eAAR;AAAyBC,IAAAA,OAAO,EAAEH,GAAG,CAACI;AAAtC,GAAD,CAFxB,EAGEC,KAHF,CAGSC,GAAD,IAASC,OAAO,CAACC,KAAR,CAAc,gBAAd,EAAgCF,GAAhC,CAHjB;AAIA,CANM,C,CAQP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA,OAAO,MAAMG,eAAe,GAAId,EAAD,IAAQ;AACtC,SAAO;AACNM,IAAAA,IAAI,EAAEZ,iBADA;AAENc,IAAAA,OAAO,EAAER;AAFH,GAAP;AAIA,CALM,C,CAOP;;AACA,OAAO,MAAMe,cAAc,GAAG,MAAM;AACnC,SAAO;AACNT,IAAAA,IAAI,EAAEX;AADA,GAAP;AAGA,CAJM,C,CAMP;;AACA,OAAO,MAAMqB,6BAA6B,GAAIC,IAAD,IAAU;AACtD,MAAIA,IAAI,KAAK,CAAb,EAAgB;AACf,WAAO,QAAP;AACA;;AACD,QAAMC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWH,IAAI,GAAG,EAAlB,CAAhB;AACA,QAAMI,OAAO,GAAGJ,IAAI,GAAGC,OAAO,GAAG,EAAjC;AACA,SAAQ,GAAEA,OAAQ,OAAMG,OAAQ,EAAhC;AACA,CAPM","sourcesContent":["import { SET_AUDIO_PLAYING, SET_AUDIO_PAUSED, AUDIO_PLAYING, AUDIO_PAUSED } from './types';\nimport axios from 'axios';\n\n// // get items action sent to reducer\n// export const getItems = () => (dispatch) => {\n// \tdispatch(setItemsLoading(console.log('items are loading...')));\n// \taxios.get('/api/items').then((res) =>\n// \t\tdispatch({\n// \t\t\ttype: GET_ITEMS,\n// \t\t\tpayload: res.data\n// \t\t})\n// \t);\n// };\n\n// get single project\nexport const getSingleTrack = (id) => (dispatch) => {\n\tdispatch(setItemsLoading());\n\taxios\n\t\t.get(`/data/playlist`)\n\t\t.then((res) => dispatch({ type: GET_SINGLE_ITEM, payload: res.data }))\n\t\t.catch((err) => console.error(\"Can't get item\", err));\n};\n\n// // add new item sent to reducer\n// export const addItem = (item) => (dispatch) => {\n// \tdispatch(setItemsLoading(console.log('items are loading...')));\n// \taxios.post('/api/items', item).then((res) =>\n// \t\tdispatch({\n// \t\t\ttype: ADD_ITEM,\n// \t\t\tpayload: res.data\n// \t\t})\n// \t);\n// };\n\n// // delete item by id request sent to reducer\n// export const deleteItem = (id) => (dispatch) => {\n// \taxios.delete(`/api/items/${id}`).then((res) =>\n// \t\tdispatch({\n// \t\t\ttype: DELETE_ITEM,\n// \t\t\tpayload: id\n// \t\t})\n// \t);\n// };\n\n// // loading items graphic sent to reducer\n// export const setItemsLoading = (item) => {\n// \treturn {\n// \t\ttype: ITEMS_LOADING\n// \t};\n// };\n\n// loading items graphic sent to reducer\nexport const setAudioPlaying = (id) => {\n\treturn {\n\t\ttype: SET_AUDIO_PLAYING,\n\t\tpayload: id\n\t};\n};\n\n// loading items graphic sent to reducer\nexport const setAudioPaused = () => {\n\treturn {\n\t\ttype: SET_AUDIO_PAUSED\n\t};\n};\n\n// get current player time\nexport const getSecondsToMinutesAndSeconds = (time) => {\n\tif (time === 0) {\n\t\treturn '0 : 00';\n\t}\n\tconst minutes = Math.floor(time / 60);\n\tconst seconds = time - minutes * 60;\n\treturn `${minutes} : 0${seconds}`;\n};\n"]},"metadata":{},"sourceType":"module"}