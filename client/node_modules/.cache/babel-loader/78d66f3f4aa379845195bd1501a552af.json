{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/oscady/Documents/projects/outboard/client/src/components-back/Releases/UploadRelease.js\";\nimport React, { Component } from 'react';\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\nimport Styled from 'styled-components';\nimport { addRelease, getReleases } from '../../actions/releaseActions';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { artists } from '../../data/artists';\nconst ButtonContainer = Styled.div`\n  height: 150px;\n  width: 100%;\n  position:absolute;\n  bottom: 0;\n  left:0;\n  right: 0;\n\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  align-items: center;\n`;\n_c = ButtonContainer;\nconst FormContainer = Styled.div`\nposition: relative;\n  height: 100%\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  align-items: flex-start;\n  justify-content: space-between;\n  flex-wrap: wrap;\n  padding: 100px;\n`;\n_c2 = FormContainer;\nexport class UploadRelease extends Component {\n  constructor(props) {\n    super(props);\n\n    this.selectItem = item => {\n      this.setState({\n        id: item._id,\n        name: item.name,\n        artists: item.artists,\n        tracks: item.tracks,\n        artwork: item.artwork\n      });\n    };\n\n    this.toggle = () => {\n      this.setState({\n        modal: !this.state.modal\n      });\n    };\n\n    this.clearForm = () => {\n      this.setState({\n        id: null,\n        name: '',\n        artists: [],\n        artwork: '',\n        tracks: []\n      });\n    };\n\n    this.onChange = e => {\n      switch (e.target.name) {\n        // case 'favourite':\n        // \tthis.setState({\n        // \t\tfavourite: !this.state.favourite // flip boolean value\n        // \t});\n        // \tbreak;\n        case 'artists':\n          this.setState({\n            artists: [...artists, e.target.value]\n          });\n          break;\n\n        case 'tracks':\n          this.setState({\n            tracks: [...tracks, e.target.value]\n          });\n          break;\n\n        default:\n          this.setState({\n            [e.target.name]: e.target.value\n          });\n      }\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      const {\n        name,\n        artists,\n        tracks,\n        artwork\n      } = this.state; // this.composeGalleryArray(gallery);\n      // const galleryLen = gallery.length;\n\n      let formData = new FormData();\n      formData.append('name', name);\n      formData.append('artists', artists);\n      formData.append('tracks', tracks);\n      formData.append('artwork', artwork); // for (var y = 0; y < galleryLen; y++) {\n      //   formData.append(\"gallery[]\", gallery[y]);\n      // }\n      // close modal.\n\n      this.toggle();\n      this.props.addRelease(formData);\n      this.clearForm();\n    };\n\n    this.state = {\n      id: null,\n      name: '',\n      modal: false,\n      artists: [],\n      tracks: [],\n      artwork: ''\n    };\n  }\n\n  componentDidMount() {\n    this.clearForm();\n  }\n\n  render() {\n    const {\n      name,\n      artists,\n      tracks,\n      artwork\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: this.onSubmit,\n      action: \"/cms\",\n      style: {\n        height: '100%',\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(FormContainer, {\n        children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            style: {\n              padding: '5px',\n              fontSize: '2rem',\n              textAlign: 'left',\n              color: 'white'\n            },\n            htmlFor: \"name\",\n            children: \"Artist Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            name: \"name\",\n            value: name,\n            onChange: this.onChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            style: {\n              padding: '5px',\n              fontSize: '2rem',\n              textAlign: 'left',\n              color: 'white'\n            },\n            htmlFor: \"artists\",\n            children: \"Track Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            name: \"artists\",\n            value: artists,\n            onChange: this.onChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            style: {\n              padding: '5px',\n              fontSize: '2rem',\n              textAlign: 'left',\n              color: 'white'\n            },\n            htmlFor: \"tracks\",\n            children: \"tracks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            name: \"tracks\",\n            value: tracks,\n            onChange: this.onChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            style: {\n              padding: '5px',\n              fontSize: '2rem',\n              textAlign: 'left',\n              color: 'white'\n            },\n            htmlFor: \"artwork\",\n            children: \"Artwork\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            name: \"artwork\",\n            value: artwork,\n            onChange: this.onChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(ButtonContainer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          className: \"btn-lg\",\n          style: {\n            margin: '20px'\n          },\n          type: \"submit\",\n          children: \"add item\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"btn-lg\",\n          style: {\n            margin: '20px'\n          },\n          onClick: this.clearForm,\n          children: \"Clear Form\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 4\n    }, this);\n  }\n\n}\nUploadRelease.propTypes = {\n  setAudioPlaing: PropTypes.func,\n  setAudioPaused: PropTypes.func,\n  getReleases: PropTypes.func,\n  addRelease: PropTypes.func,\n  playing: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  release: state.release\n});\n\nexport default connect(mapStateToProps, {\n  addRelease,\n  getReleases\n})(UploadRelease);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ButtonContainer\");\n$RefreshReg$(_c2, \"FormContainer\");","map":{"version":3,"sources":["/home/oscady/Documents/projects/outboard/client/src/components-back/Releases/UploadRelease.js"],"names":["React","Component","Button","Form","FormGroup","Label","Input","Styled","addRelease","getReleases","PropTypes","connect","artists","ButtonContainer","div","FormContainer","UploadRelease","constructor","props","selectItem","item","setState","id","_id","name","tracks","artwork","toggle","modal","state","clearForm","onChange","e","target","value","onSubmit","preventDefault","formData","FormData","append","componentDidMount","render","height","width","padding","fontSize","textAlign","color","margin","propTypes","setAudioPlaing","func","setAudioPaused","playing","bool","mapStateToProps","release"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\nimport Styled from 'styled-components';\nimport { addRelease, getReleases } from '../../actions/releaseActions';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { artists } from '../../data/artists';\n\nconst ButtonContainer = Styled.div`\n  height: 150px;\n  width: 100%;\n  position:absolute;\n  bottom: 0;\n  left:0;\n  right: 0;\n\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  align-items: center;\n`;\n\nconst FormContainer = Styled.div`\nposition: relative;\n  height: 100%\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  align-items: flex-start;\n  justify-content: space-between;\n  flex-wrap: wrap;\n  padding: 100px;\n`;\n\nexport class UploadRelease extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tid: null,\n\t\t\tname: '',\n\t\t\tmodal: false,\n\t\t\tartists: [],\n\t\t\ttracks: [],\n\t\t\tartwork: ''\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.clearForm();\n\t}\n\n\tselectItem = (item) => {\n\t\tthis.setState({\n\t\t\tid: item._id,\n\t\t\tname: item.name,\n\t\t\tartists: item.artists,\n\t\t\ttracks: item.tracks,\n\t\t\tartwork: item.artwork\n\t\t});\n\t};\n\ttoggle = () => {\n\t\tthis.setState({\n\t\t\tmodal: !this.state.modal\n\t\t});\n\t};\n\n\t// clear form function actioned when clear form button selected and on form\n\t// submit\n\tclearForm = () => {\n\t\tthis.setState({\n\t\t\tid: null,\n\t\t\tname: '',\n\t\t\tartists: [],\n\t\t\tartwork: '',\n\t\t\ttracks: []\n\t\t});\n\t};\n\n\tonChange = (e) => {\n\t\tswitch (e.target.name) {\n\t\t\t// case 'favourite':\n\t\t\t// \tthis.setState({\n\t\t\t// \t\tfavourite: !this.state.favourite // flip boolean value\n\t\t\t// \t});\n\t\t\t// \tbreak;\n\t\t\tcase 'artists':\n\t\t\t\tthis.setState({\n\t\t\t\t\tartists: [ ...artists, e.target.value ]\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase 'tracks':\n\t\t\t\tthis.setState({\n\t\t\t\t\ttracks: [ ...tracks, e.target.value ]\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthis.setState({\n\t\t\t\t\t[e.target.name]: e.target.value\n\t\t\t\t});\n\t\t}\n\t};\n\n\tonSubmit = (e) => {\n\t\te.preventDefault();\n\t\tconst { name, artists, tracks, artwork } = this.state;\n\n\t\t// this.composeGalleryArray(gallery);\n\t\t// const galleryLen = gallery.length;\n\n\t\tlet formData = new FormData();\n\n\t\tformData.append('name', name);\n\t\tformData.append('artists', artists);\n\t\tformData.append('tracks', tracks);\n\t\tformData.append('artwork', artwork);\n\n\t\t// for (var y = 0; y < galleryLen; y++) {\n\t\t//   formData.append(\"gallery[]\", gallery[y]);\n\t\t// }\n\n\t\t// close modal.\n\t\tthis.toggle();\n\n\t\tthis.props.addRelease(formData);\n\n\t\tthis.clearForm();\n\t};\n\n\trender() {\n\t\tconst { name, artists, tracks, artwork } = this.state;\n\t\treturn (\n\t\t\t<Form onSubmit={this.onSubmit} action='/cms' style={{ height: '100%', width: '100%' }}>\n\t\t\t\t<FormContainer>\n\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t<Label\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tpadding: '5px',\n\t\t\t\t\t\t\t\tfontSize: '2rem',\n\t\t\t\t\t\t\t\ttextAlign: 'left',\n\t\t\t\t\t\t\t\tcolor: 'white'\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\thtmlFor='name'>\n\t\t\t\t\t\t\tArtist Name\n\t\t\t\t\t\t</Label>\n\t\t\t\t\t\t<Input type='text' name='name' value={name} onChange={this.onChange} />\n\t\t\t\t\t</FormGroup>\n\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t<Label\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tpadding: '5px',\n\t\t\t\t\t\t\t\tfontSize: '2rem',\n\t\t\t\t\t\t\t\ttextAlign: 'left',\n\t\t\t\t\t\t\t\tcolor: 'white'\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\thtmlFor='artists'>\n\t\t\t\t\t\t\tTrack Name\n\t\t\t\t\t\t</Label>\n\t\t\t\t\t\t<Input type='text' name='artists' value={artists} onChange={this.onChange} />\n\t\t\t\t\t</FormGroup>\n\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t<Label\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tpadding: '5px',\n\t\t\t\t\t\t\t\tfontSize: '2rem',\n\t\t\t\t\t\t\t\ttextAlign: 'left',\n\t\t\t\t\t\t\t\tcolor: 'white'\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\thtmlFor='tracks'>\n\t\t\t\t\t\t\ttracks\n\t\t\t\t\t\t</Label>\n\t\t\t\t\t\t<Input type='text' name='tracks' value={tracks} onChange={this.onChange} />\n\t\t\t\t\t</FormGroup>\n\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t<Label\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tpadding: '5px',\n\t\t\t\t\t\t\t\tfontSize: '2rem',\n\t\t\t\t\t\t\t\ttextAlign: 'left',\n\t\t\t\t\t\t\t\tcolor: 'white'\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\thtmlFor='artwork'>\n\t\t\t\t\t\t\tArtwork\n\t\t\t\t\t\t</Label>\n\t\t\t\t\t\t<Input type='text' name='artwork' value={artwork} onChange={this.onChange} />\n\t\t\t\t\t</FormGroup>\n\t\t\t\t</FormContainer>\n\n\t\t\t\t<ButtonContainer>\n\t\t\t\t\t<Button className='btn-lg' style={{ margin: '20px' }} type='submit'>\n\t\t\t\t\t\tadd item\n\t\t\t\t\t</Button>\n\n\t\t\t\t\t<Button className='btn-lg' style={{ margin: '20px' }} onClick={this.clearForm}>\n\t\t\t\t\t\tClear Form\n\t\t\t\t\t</Button>\n\t\t\t\t</ButtonContainer>\n\t\t\t</Form>\n\t\t);\n\t}\n}\n\nUploadRelease.propTypes = {\n\tsetAudioPlaing: PropTypes.func,\n\tsetAudioPaused: PropTypes.func,\n\tgetReleases: PropTypes.func,\n\taddRelease: PropTypes.func,\n\tplaying: PropTypes.bool\n};\n\nconst mapStateToProps = (state) => ({ release: state.release });\n\nexport default connect(mapStateToProps, { addRelease, getReleases })(UploadRelease);\n"]},"metadata":{},"sourceType":"module"}