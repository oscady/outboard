{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/oscady/Documents/projects/outboard/client/src/components/Player/Player.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { Playlist } from './Playlist';\nimport { Top } from './Top';\nimport { fetchPlaylist, PlaylistContext } from '../../data/playlist';\nexport function Player() {\n  _s();\n\n  const [playlist, setPlaylist] = useState([]);\n  const [currentTrack, setCurrentTrack] = useState(0);\n  const Container = styled.div`\n\t\tposition: fixed;\n\t\tleft: 0;\n\t\tright: 0;\n\t\tbottom: 0;\n\t\twidth: 100vw;\n\t\theight: 80px;\n\t\tmargin: 0 auto;\n\t\tborder-radius: 5px;\n\t\tbox-shadow: 0px 0px 15px -5px rgba(0, 0, 0, 0.75);\n\t`;\n  const Loading = styled.div`\n\t\tposition: absolute;\n\t\ttop: 50%;\n\t\tleft: 50%;\n\t\ttransform: translate(-50%, -50%);\n\t`;\n\n  const handleChangeTrack = id => {\n    setCurrentTrack(id);\n  };\n\n  const handleNextTrack = () => {\n    if (currentTrack === playlist.length - 1) {\n      setCurrentTrack(0);\n      return;\n    }\n\n    setCurrentTrack(currentTrack + 1);\n  };\n\n  const handlePrevTrack = () => {\n    if (currentTrack === 0) {\n      setCurrentTrack(playlist.length - 1);\n      return;\n    }\n\n    setCurrentTrack(currentTrack - 1);\n  };\n\n  const handleFetchData = async () => {\n    const playlist = await fetchPlaylist();\n    setPlaylist(playlist);\n  };\n\n  useEffect(() => {\n    handleFetchData();\n  }, []);\n\n  if (playlist.length === 0) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Loading, {\n        children: \"loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 4\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(PlaylistContext.Provider, {\n      value: {\n        handleNextTrack,\n        handlePrevTrack\n      },\n      children: [/*#__PURE__*/_jsxDEV(Top, {\n        track: playlist[currentTrack]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Playlist, {\n        onChangeTrack: handleChangeTrack,\n        playlist: playlist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Player, \"1P5DuGAPLnzeFla7tA4r3pDdDME=\");\n\n_c = Player;\n\nvar _c;\n\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"sources":["/home/oscady/Documents/projects/outboard/client/src/components/Player/Player.js"],"names":["React","useState","useEffect","styled","Playlist","Top","fetchPlaylist","PlaylistContext","Player","playlist","setPlaylist","currentTrack","setCurrentTrack","Container","div","Loading","handleChangeTrack","id","handleNextTrack","length","handlePrevTrack","handleFetchData"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,SAASC,GAAT,QAAoB,OAApB;AACA,SAASC,aAAT,EAAwBC,eAAxB,QAA+C,qBAA/C;AAEA,OAAO,SAASC,MAAT,GAAkB;AAAA;;AACxB,QAAM,CAAEC,QAAF,EAAYC,WAAZ,IAA4BT,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAAEU,YAAF,EAAgBC,eAAhB,IAAoCX,QAAQ,CAAC,CAAD,CAAlD;AAEA,QAAMY,SAAS,GAAGV,MAAM,CAACW,GAAI;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAVC;AAYA,QAAMC,OAAO,GAAGZ,MAAM,CAACW,GAAI;AAC5B;AACA;AACA;AACA;AACA,EALC;;AAOA,QAAME,iBAAiB,GAAIC,EAAD,IAAQ;AACjCL,IAAAA,eAAe,CAACK,EAAD,CAAf;AACA,GAFD;;AAIA,QAAMC,eAAe,GAAG,MAAM;AAC7B,QAAIP,YAAY,KAAKF,QAAQ,CAACU,MAAT,GAAkB,CAAvC,EAA0C;AACzCP,MAAAA,eAAe,CAAC,CAAD,CAAf;AACA;AACA;;AACDA,IAAAA,eAAe,CAACD,YAAY,GAAG,CAAhB,CAAf;AACA,GAND;;AAQA,QAAMS,eAAe,GAAG,MAAM;AAC7B,QAAIT,YAAY,KAAK,CAArB,EAAwB;AACvBC,MAAAA,eAAe,CAACH,QAAQ,CAACU,MAAT,GAAkB,CAAnB,CAAf;AACA;AACA;;AACDP,IAAAA,eAAe,CAACD,YAAY,GAAG,CAAhB,CAAf;AACA,GAND;;AAQA,QAAMU,eAAe,GAAG,YAAY;AACnC,UAAMZ,QAAQ,GAAG,MAAMH,aAAa,EAApC;AACAI,IAAAA,WAAW,CAACD,QAAD,CAAX;AACA,GAHD;;AAKAP,EAAAA,SAAS,CAAC,MAAM;AACfmB,IAAAA,eAAe;AACf,GAFQ,EAEN,EAFM,CAAT;;AAIA,MAAIZ,QAAQ,CAACU,MAAT,KAAoB,CAAxB,EAA2B;AAC1B,wBACC,QAAC,SAAD;AAAA,6BACC,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YADD;AAKA;;AAED,sBACC,QAAC,SAAD;AAAA,2BACC,QAAC,eAAD,CAAiB,QAAjB;AAA0B,MAAA,KAAK,EAAE;AAAED,QAAAA,eAAF;AAAmBE,QAAAA;AAAnB,OAAjC;AAAA,8BACC,QAAC,GAAD;AAAK,QAAA,KAAK,EAAEX,QAAQ,CAACE,YAAD;AAApB;AAAA;AAAA;AAAA;AAAA,cADD,eAEC,QAAC,QAAD;AAAU,QAAA,aAAa,EAAEK,iBAAzB;AAA4C,QAAA,QAAQ,EAAEP;AAAtD;AAAA;AAAA;AAAA;AAAA,cAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AAQA;;GApEeD,M;;KAAAA,M","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { Playlist } from './Playlist';\nimport { Top } from './Top';\nimport { fetchPlaylist, PlaylistContext } from '../../data/playlist';\n\nexport function Player() {\n\tconst [ playlist, setPlaylist ] = useState([]);\n\tconst [ currentTrack, setCurrentTrack ] = useState(0);\n\n\tconst Container = styled.div`\n\t\tposition: fixed;\n\t\tleft: 0;\n\t\tright: 0;\n\t\tbottom: 0;\n\t\twidth: 100vw;\n\t\theight: 80px;\n\t\tmargin: 0 auto;\n\t\tborder-radius: 5px;\n\t\tbox-shadow: 0px 0px 15px -5px rgba(0, 0, 0, 0.75);\n\t`;\n\n\tconst Loading = styled.div`\n\t\tposition: absolute;\n\t\ttop: 50%;\n\t\tleft: 50%;\n\t\ttransform: translate(-50%, -50%);\n\t`;\n\n\tconst handleChangeTrack = (id) => {\n\t\tsetCurrentTrack(id);\n\t};\n\n\tconst handleNextTrack = () => {\n\t\tif (currentTrack === playlist.length - 1) {\n\t\t\tsetCurrentTrack(0);\n\t\t\treturn;\n\t\t}\n\t\tsetCurrentTrack(currentTrack + 1);\n\t};\n\n\tconst handlePrevTrack = () => {\n\t\tif (currentTrack === 0) {\n\t\t\tsetCurrentTrack(playlist.length - 1);\n\t\t\treturn;\n\t\t}\n\t\tsetCurrentTrack(currentTrack - 1);\n\t};\n\n\tconst handleFetchData = async () => {\n\t\tconst playlist = await fetchPlaylist();\n\t\tsetPlaylist(playlist);\n\t};\n\n\tuseEffect(() => {\n\t\thandleFetchData();\n\t}, []);\n\n\tif (playlist.length === 0) {\n\t\treturn (\n\t\t\t<Container>\n\t\t\t\t<Loading>loading...</Loading>\n\t\t\t</Container>\n\t\t);\n\t}\n\n\treturn (\n\t\t<Container>\n\t\t\t<PlaylistContext.Provider value={{ handleNextTrack, handlePrevTrack }}>\n\t\t\t\t<Top track={playlist[currentTrack]} />\n\t\t\t\t<Playlist onChangeTrack={handleChangeTrack} playlist={playlist} />\n\t\t\t</PlaylistContext.Provider>\n\t\t</Container>\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}