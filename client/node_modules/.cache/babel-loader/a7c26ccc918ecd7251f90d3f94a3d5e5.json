{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/oscady/Documents/projects/outboard/client/src/components-back/Releases/UploadRelease.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { Button, Form, FormGroup, Label, Input, Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nimport Styled from 'styled-components';\nimport { addRelease, getReleases } from '../../actions/releaseActions';\nimport { getTracks } from '../../actions/trackUploadActions';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { artists } from '../../data/artists';\nconst ButtonContainer = Styled.div`\n  height: 150px;\n  width: 100%;\n  position:absolute;\n  bottom: 0;\n  left:0;\n  right: 0;\n\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  align-items: center;\n`;\n_c = ButtonContainer;\nconst FormContainer = Styled.div`\nposition: relative;\n  height: 50%%\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  align-items: flex-start;\n  justify-content: space-between;\n  flex-wrap: wrap;\n  padding: 100px;\n`;\n_c2 = FormContainer;\nconst Container = Styled.div`\nposition: relative;\n  height: calc(100vh - 100px);\n  width: 100%;\n\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: space-between;\n  flex-wrap: nowrap;\n`;\n_c3 = Container;\nconst Preview = Styled.div`\n\tposition: relative;\n\theight: 50%;\n\twidth: 100%;\n\tbackground-color: red;\n`;\n_c4 = Preview;\n\nconst UploadRelease = props => {\n  _s();\n\n  const [name, setName] = useState('');\n  const [artists, setArtists] = useState([]);\n  const [tracks, setTracks] = useState([]);\n  const [artwork, setArtwork] = useState('');\n  const [uploadedTracks, setUploadedTracks] = useState([]);\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n\n  const toggle = () => setDropdownOpen(prevState => !prevState);\n\n  useEffect(() => {\n    clearForm();\n    props.getTracks();\n    setUploadedTracks(props.track.tracks);\n  }, []);\n  useEffect(() => {\n    console.log(tracks);\n  }, [name]);\n\n  const clearForm = () => {\n    setName('');\n    setArtists([]);\n    setTracks([]);\n    setArtwork('');\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    let formData = new FormData();\n    formData.append('name', name);\n    formData.append('artists', artists);\n    formData.append('tracks', tracks);\n    formData.append('artwork', artwork);\n    props.addRelease(formData);\n    clearForm();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: onSubmit,\n      action: \"/cms\",\n      style: {\n        height: '100%',\n        width: '100%'\n      },\n      children: /*#__PURE__*/_jsxDEV(FormContainer, {\n        children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            style: {\n              padding: '5px',\n              fontSize: '2rem',\n              textAlign: 'left',\n              color: 'white'\n            },\n            htmlFor: \"name\",\n            children: \"Release Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            name: \"name\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            style: {\n              padding: '5px',\n              fontSize: '2rem',\n              textAlign: 'left',\n              color: 'white'\n            },\n            htmlFor: \"artists\",\n            children: \"artists\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            name: \"artists\",\n            value: artists,\n            onChange: e => setArtists(...artists, e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 7\n          }, this), artists ? artists.map(artist => {\n            /*#__PURE__*/\n            _jsxDEV(\"p\", {\n              children: \"artist.name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 9\n            }, this);\n          }) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            style: {\n              padding: '5px',\n              fontSize: '2rem',\n              textAlign: 'left',\n              color: 'white'\n            },\n            htmlFor: \"tracks\",\n            children: \"tracks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n            isOpen: dropdownOpen,\n            toggle: toggle,\n            children: [/*#__PURE__*/_jsxDEV(DropdownToggle, {\n              caret: true,\n              children: \"Dropdown\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(DropdownMenu, {\n              name: \"tracks\",\n              children: [/*#__PURE__*/_jsxDEV(DropdownItem, {\n                header: true,\n                children: \"tracks\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 9\n              }, this), uploadedTracks ? uploadedTracks.map(track => /*#__PURE__*/_jsxDEV(DropdownItem, {\n                value: track.trackName,\n                onClick: e => setTracks(...tracks, e.target.value),\n                children: track.trackName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 11\n              }, this)) : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            style: {\n              padding: '5px',\n              fontSize: '2rem',\n              textAlign: 'left',\n              color: 'white'\n            },\n            htmlFor: \"artwork\",\n            children: \"Artwork\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            name: \"artwork\",\n            value: artwork,\n            onChange: e => setArtwork(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Preview, {\n      children: /*#__PURE__*/_jsxDEV(ButtonContainer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          className: \"btn-lg\",\n          style: {\n            margin: '20px'\n          },\n          type: \"submit\",\n          children: \"add item\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"btn-lg\",\n          style: {\n            margin: '20px'\n          },\n          onClick: clearForm,\n          children: \"Clear Form\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 3\n  }, this);\n};\n\n_s(UploadRelease, \"kxY3P18y1Tpa/HIyLRI0lenVV7I=\");\n\n_c5 = UploadRelease;\nUploadRelease.propTypes = {\n  setAudioPlaing: PropTypes.func,\n  setAudioPaused: PropTypes.func,\n  getReleases: PropTypes.func,\n  addRelease: PropTypes.func,\n  playing: PropTypes.bool,\n  tracks: PropTypes.object,\n  release: PropTypes.object,\n  getTracks: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  release: state.release,\n  track: state.track\n});\n\nexport default connect(mapStateToProps, {\n  addRelease,\n  getReleases,\n  getTracks\n})(UploadRelease);\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"ButtonContainer\");\n$RefreshReg$(_c2, \"FormContainer\");\n$RefreshReg$(_c3, \"Container\");\n$RefreshReg$(_c4, \"Preview\");\n$RefreshReg$(_c5, \"UploadRelease\");","map":{"version":3,"sources":["/home/oscady/Documents/projects/outboard/client/src/components-back/Releases/UploadRelease.js"],"names":["useEffect","useState","Button","Form","FormGroup","Label","Input","Dropdown","DropdownToggle","DropdownMenu","DropdownItem","Styled","addRelease","getReleases","getTracks","PropTypes","connect","artists","ButtonContainer","div","FormContainer","Container","Preview","UploadRelease","props","name","setName","setArtists","tracks","setTracks","artwork","setArtwork","uploadedTracks","setUploadedTracks","dropdownOpen","setDropdownOpen","toggle","prevState","clearForm","track","console","log","onSubmit","e","preventDefault","formData","FormData","append","height","width","padding","fontSize","textAlign","color","target","value","map","artist","trackName","margin","propTypes","setAudioPlaing","func","setAudioPaused","playing","bool","object","release","mapStateToProps","state"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\nimport {\n\tButton,\n\tForm,\n\tFormGroup,\n\tLabel,\n\tInput,\n\tDropdown,\n\tDropdownToggle,\n\tDropdownMenu,\n\tDropdownItem\n} from 'reactstrap';\nimport Styled from 'styled-components';\nimport { addRelease, getReleases } from '../../actions/releaseActions';\nimport { getTracks } from '../../actions/trackUploadActions';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { artists } from '../../data/artists';\n\nconst ButtonContainer = Styled.div`\n  height: 150px;\n  width: 100%;\n  position:absolute;\n  bottom: 0;\n  left:0;\n  right: 0;\n\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  align-items: center;\n`;\n\nconst FormContainer = Styled.div`\nposition: relative;\n  height: 50%%\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  align-items: flex-start;\n  justify-content: space-between;\n  flex-wrap: wrap;\n  padding: 100px;\n`;\nconst Container = Styled.div`\nposition: relative;\n  height: calc(100vh - 100px);\n  width: 100%;\n\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: space-between;\n  flex-wrap: nowrap;\n`;\n\nconst Preview = Styled.div`\n\tposition: relative;\n\theight: 50%;\n\twidth: 100%;\n\tbackground-color: red;\n`;\n\nconst UploadRelease = (props) => {\n\tconst [ name, setName ] = useState('');\n\tconst [ artists, setArtists ] = useState([]);\n\tconst [ tracks, setTracks ] = useState([]);\n\tconst [ artwork, setArtwork ] = useState('');\n\tconst [ uploadedTracks, setUploadedTracks ] = useState([]);\n\tconst [ dropdownOpen, setDropdownOpen ] = useState(false);\n\n\tconst toggle = () => setDropdownOpen((prevState) => !prevState);\n\n\tuseEffect(() => {\n\t\tclearForm();\n\t\tprops.getTracks();\n\t\tsetUploadedTracks(props.track.tracks);\n\t}, []);\n\n\tuseEffect(\n\t\t() => {\n\t\t\tconsole.log(tracks);\n\t\t},\n\t\t[ name ]\n\t);\n\n\tconst clearForm = () => {\n\t\tsetName('');\n\t\tsetArtists([]);\n\t\tsetTracks([]);\n\t\tsetArtwork('');\n\t};\n\n\tconst onSubmit = (e) => {\n\t\te.preventDefault();\n\n\t\tlet formData = new FormData();\n\n\t\tformData.append('name', name);\n\t\tformData.append('artists', artists);\n\t\tformData.append('tracks', tracks);\n\t\tformData.append('artwork', artwork);\n\n\t\tprops.addRelease(formData);\n\n\t\tclearForm();\n\t};\n\n\treturn (\n\t\t<Container>\n\t\t\t<Form onSubmit={onSubmit} action='/cms' style={{ height: '100%', width: '100%' }}>\n\t\t\t\t<FormContainer>\n\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t<Label\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tpadding: '5px',\n\t\t\t\t\t\t\t\tfontSize: '2rem',\n\t\t\t\t\t\t\t\ttextAlign: 'left',\n\t\t\t\t\t\t\t\tcolor: 'white'\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\thtmlFor='name'>\n\t\t\t\t\t\t\tRelease Title\n\t\t\t\t\t\t</Label>\n\t\t\t\t\t\t<Input type='text' name='name' value={name} onChange={(e) => setName(e.target.value)} />\n\t\t\t\t\t</FormGroup>\n\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t<Label\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tpadding: '5px',\n\t\t\t\t\t\t\t\tfontSize: '2rem',\n\t\t\t\t\t\t\t\ttextAlign: 'left',\n\t\t\t\t\t\t\t\tcolor: 'white'\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\thtmlFor='artists'>\n\t\t\t\t\t\t\tartists\n\t\t\t\t\t\t</Label>\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\tname='artists'\n\t\t\t\t\t\t\tvalue={artists}\n\t\t\t\t\t\t\tonChange={(e) => setArtists(...artists, e.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{artists ? (\n\t\t\t\t\t\t\tartists.map((artist) => {\n\t\t\t\t\t\t\t\t<p>artist.name</p>;\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t) : null}\n\t\t\t\t\t</FormGroup>\n\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t<Label\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tpadding: '5px',\n\t\t\t\t\t\t\t\tfontSize: '2rem',\n\t\t\t\t\t\t\t\ttextAlign: 'left',\n\t\t\t\t\t\t\t\tcolor: 'white'\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\thtmlFor='tracks'>\n\t\t\t\t\t\t\ttracks\n\t\t\t\t\t\t</Label>\n\t\t\t\t\t\t<Dropdown isOpen={dropdownOpen} toggle={toggle}>\n\t\t\t\t\t\t\t<DropdownToggle caret>Dropdown</DropdownToggle>\n\t\t\t\t\t\t\t<DropdownMenu name='tracks'>\n\t\t\t\t\t\t\t\t<DropdownItem header>tracks</DropdownItem>\n\t\t\t\t\t\t\t\t{uploadedTracks ? (\n\t\t\t\t\t\t\t\t\tuploadedTracks.map((track) => (\n\t\t\t\t\t\t\t\t\t\t<DropdownItem\n\t\t\t\t\t\t\t\t\t\t\tvalue={track.trackName}\n\t\t\t\t\t\t\t\t\t\t\tonClick={(e) => setTracks(...tracks, e.target.value)}>\n\t\t\t\t\t\t\t\t\t\t\t{track.trackName}\n\t\t\t\t\t\t\t\t\t\t</DropdownItem>\n\t\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t</DropdownMenu>\n\t\t\t\t\t\t</Dropdown>\n\t\t\t\t\t\t{/* <Input\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tname='tracks'\n\t\t\t\t\t\tvalue={tracks}\n\t\t\t\t\t\tonChange={(e) => setTracks(...tracks, e.target.value)}\n\t\t\t\t\t/> */}\n\t\t\t\t\t</FormGroup>\n\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t<Label\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tpadding: '5px',\n\t\t\t\t\t\t\t\tfontSize: '2rem',\n\t\t\t\t\t\t\t\ttextAlign: 'left',\n\t\t\t\t\t\t\t\tcolor: 'white'\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\thtmlFor='artwork'>\n\t\t\t\t\t\t\tArtwork\n\t\t\t\t\t\t</Label>\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\tname='artwork'\n\t\t\t\t\t\t\tvalue={artwork}\n\t\t\t\t\t\t\tonChange={(e) => setArtwork(e.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</FormGroup>\n\t\t\t\t</FormContainer>\n\t\t\t</Form>\n\t\t\t<Preview>\n\t\t\t\t<ButtonContainer>\n\t\t\t\t\t<Button className='btn-lg' style={{ margin: '20px' }} type='submit'>\n\t\t\t\t\t\tadd item\n\t\t\t\t\t</Button>\n\n\t\t\t\t\t<Button className='btn-lg' style={{ margin: '20px' }} onClick={clearForm}>\n\t\t\t\t\t\tClear Form\n\t\t\t\t\t</Button>\n\t\t\t\t</ButtonContainer>\n\t\t\t</Preview>\n\t\t</Container>\n\t);\n};\n\nUploadRelease.propTypes = {\n\tsetAudioPlaing: PropTypes.func,\n\tsetAudioPaused: PropTypes.func,\n\tgetReleases: PropTypes.func,\n\taddRelease: PropTypes.func,\n\tplaying: PropTypes.bool,\n\ttracks: PropTypes.object,\n\trelease: PropTypes.object,\n\tgetTracks: PropTypes.func\n};\n\nconst mapStateToProps = (state) => ({ release: state.release, track: state.track });\n\nexport default connect(mapStateToProps, { addRelease, getReleases, getTracks })(UploadRelease);\n"]},"metadata":{},"sourceType":"module"}