{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/oscady/Documents/projects/outboard/client/src/components/Player/ProgressBar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { motion, useSpring, useMotionValue, animate } from 'framer-motion';\nconst Container = styled.div`\n\tposition: relative;\n\theight: 100%;\n\twidth: 100%;\n\tbackground-color: black;\n\tborder-radius: 5px;\n\tz-index: 100;\n\n\th3 {\n\t\tposition: relative;\n\t\tcolor: white;\n\t\twidth: fit-content;\n\t\twhite-space: nowrap;\n\t\tleft: 100px;\n\t}\n`;\n_c = Container;\nconst Point = styled(motion.div)`\n\t\tposition: absolute;\n\t\tleft: ${props => props.progressPercent};\n\t\ttop: 50%;\n\t\ttransform: translate(-50%, -50%);\n\t\tbottom: 10px;\n\t\theight: 100%;\n\t\twidth: 8px;\n\t\tbackground-color: black;\n\t\tborder-radius: 50%;\n\t`;\nconst Progress = styled(motion.div)`\n\t\tposition: absolute;\n\t\tleft: 0;\n\t\ttop: 0;\n\t\tbottom: 10px;\n\t\theight: inherit;\n\t\twidth: 0%;\n\t\tbackground-color: whitesmoke;\n\t\toverflow:hidden;\n\t\tz-index: 101;\n\n\t\th3 {\n\t\t\tposition: relative;\n\t\t\twidth: fit-content;\n\t\t\twhite-space:nowrap;\n\t\t\tleft: 100px;\n\t\t\tcolor: black;\n\t\t}\n\t`;\n_c2 = Progress;\nexport function ProgressBar({\n  progressPercent,\n  duration\n}) {\n  _s();\n\n  const x = useMotionValue(0);\n  useEffect(() => {\n    const controls = animate(x, 100, {\n      type: 'spring',\n      stiffness: 2000,\n      onComplete: v => {}\n    });\n    return controls.stop;\n  });\n  useEffect(() => {});\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [console.log(duration), console.log(290), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"TRANSIENT BEING - TRACK 4 (DUB MIX)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Progress, {\n      progressPercent: progressPercent,\n      initial: {\n        width: '0%'\n      },\n      animate: {\n        width: '100%'\n      },\n      transition: {\n        duration: 290\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"TRANSIENT BEING - TRACK 4 (DUB MIX)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 3\n  }, this);\n}\n\n_s(ProgressBar, \"C2UF8j0YlR1fi6AKav788IVnbUU=\", false, function () {\n  return [useMotionValue];\n});\n\n_c3 = ProgressBar;\nProgressBar.propTypes = {\n  progressPercent: PropTypes.string,\n  duration: PropTypes.number.isRequired,\n  width: PropTypes.string\n};\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Progress\");\n$RefreshReg$(_c3, \"ProgressBar\");","map":{"version":3,"sources":["/home/oscady/Documents/projects/outboard/client/src/components/Player/ProgressBar.js"],"names":["React","useEffect","PropTypes","styled","motion","useSpring","useMotionValue","animate","Container","div","Point","props","progressPercent","Progress","ProgressBar","duration","x","controls","type","stiffness","onComplete","v","stop","console","log","width","propTypes","string","number","isRequired"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,MAAT,EAAiBC,SAAjB,EAA4BC,cAA5B,EAA4CC,OAA5C,QAA2D,eAA3D;AAEA,MAAMC,SAAS,GAAGL,MAAM,CAACM,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAfA;KAAMD,S;AAiBN,MAAME,KAAK,GAAGP,MAAM,CAACC,MAAM,CAACK,GAAR,CAAa;AACjC;AACA,UAAWE,KAAD,IAAWA,KAAK,CAACC,eAAgB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAVA;AAWA,MAAMC,QAAQ,GAAGV,MAAM,CAACC,MAAM,CAACK,GAAR,CAAa;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAlBA;MAAMI,Q;AAoBN,OAAO,SAASC,WAAT,CAAqB;AAAEF,EAAAA,eAAF;AAAmBG,EAAAA;AAAnB,CAArB,EAAoD;AAAA;;AAC1D,QAAMC,CAAC,GAAGV,cAAc,CAAC,CAAD,CAAxB;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACf,UAAMgB,QAAQ,GAAGV,OAAO,CAACS,CAAD,EAAI,GAAJ,EAAS;AAChCE,MAAAA,IAAI,EAAE,QAD0B;AAEhCC,MAAAA,SAAS,EAAE,IAFqB;AAGhCC,MAAAA,UAAU,EAAGC,CAAD,IAAO,CAAE;AAHW,KAAT,CAAxB;AAMA,WAAOJ,QAAQ,CAACK,IAAhB;AACA,GARQ,CAAT;AASArB,EAAAA,SAAS,CAAC,MAAM,CAAE,CAAT,CAAT;AACA,sBACC,QAAC,SAAD;AAAA,eACEsB,OAAO,CAACC,GAAR,CAAYT,QAAZ,CADF,EAEEQ,OAAO,CAACC,GAAR,CAAY,GAAZ,CAFF,eAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHD,eAIC,QAAC,QAAD;AACC,MAAA,eAAe,EAAEZ,eADlB;AAEC,MAAA,OAAO,EAAE;AAAEa,QAAAA,KAAK,EAAE;AAAT,OAFV;AAGC,MAAA,OAAO,EAAE;AAAEA,QAAAA,KAAK,EAAE;AAAT,OAHV;AAIC,MAAA,UAAU,EAAE;AAAEV,QAAAA,QAAQ,EAAE;AAAZ,OAJb;AAAA,6BAKC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALD;AAAA;AAAA;AAAA;AAAA,YAJD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAcA;;GA3BeD,W;UACLR,c;;;MADKQ,W;AA6BhBA,WAAW,CAACY,SAAZ,GAAwB;AACvBd,EAAAA,eAAe,EAAEV,SAAS,CAACyB,MADJ;AAEvBZ,EAAAA,QAAQ,EAAEb,SAAS,CAAC0B,MAAV,CAAiBC,UAFJ;AAGvBJ,EAAAA,KAAK,EAAEvB,SAAS,CAACyB;AAHM,CAAxB","sourcesContent":["import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { motion, useSpring, useMotionValue, animate } from 'framer-motion';\n\nconst Container = styled.div`\n\tposition: relative;\n\theight: 100%;\n\twidth: 100%;\n\tbackground-color: black;\n\tborder-radius: 5px;\n\tz-index: 100;\n\n\th3 {\n\t\tposition: relative;\n\t\tcolor: white;\n\t\twidth: fit-content;\n\t\twhite-space: nowrap;\n\t\tleft: 100px;\n\t}\n`;\n\nconst Point = styled(motion.div)`\n\t\tposition: absolute;\n\t\tleft: ${(props) => props.progressPercent};\n\t\ttop: 50%;\n\t\ttransform: translate(-50%, -50%);\n\t\tbottom: 10px;\n\t\theight: 100%;\n\t\twidth: 8px;\n\t\tbackground-color: black;\n\t\tborder-radius: 50%;\n\t`;\nconst Progress = styled(motion.div)`\n\t\tposition: absolute;\n\t\tleft: 0;\n\t\ttop: 0;\n\t\tbottom: 10px;\n\t\theight: inherit;\n\t\twidth: 0%;\n\t\tbackground-color: whitesmoke;\n\t\toverflow:hidden;\n\t\tz-index: 101;\n\n\t\th3 {\n\t\t\tposition: relative;\n\t\t\twidth: fit-content;\n\t\t\twhite-space:nowrap;\n\t\t\tleft: 100px;\n\t\t\tcolor: black;\n\t\t}\n\t`;\n\nexport function ProgressBar({ progressPercent, duration }) {\n\tconst x = useMotionValue(0);\n\n\tuseEffect(() => {\n\t\tconst controls = animate(x, 100, {\n\t\t\ttype: 'spring',\n\t\t\tstiffness: 2000,\n\t\t\tonComplete: (v) => {}\n\t\t});\n\n\t\treturn controls.stop;\n\t});\n\tuseEffect(() => {});\n\treturn (\n\t\t<Container>\n\t\t\t{console.log(duration)}\n\t\t\t{console.log(290)}\n\t\t\t<h3>TRANSIENT BEING - TRACK 4 (DUB MIX)</h3>\n\t\t\t<Progress\n\t\t\t\tprogressPercent={progressPercent}\n\t\t\t\tinitial={{ width: '0%' }}\n\t\t\t\tanimate={{ width: '100%' }}\n\t\t\t\ttransition={{ duration: 290 }}>\n\t\t\t\t<h3>TRANSIENT BEING - TRACK 4 (DUB MIX)</h3>\n\t\t\t</Progress>\n\t\t</Container>\n\t);\n}\n\nProgressBar.propTypes = {\n\tprogressPercent: PropTypes.string,\n\tduration: PropTypes.number.isRequired,\n\twidth: PropTypes.string\n};\n"]},"metadata":{},"sourceType":"module"}