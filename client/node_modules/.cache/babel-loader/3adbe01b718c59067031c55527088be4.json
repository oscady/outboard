{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/oscady/Documents/projects/outboard/client/src/components/Player/Audio.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useLayoutEffect } from 'react';\nimport styled from 'styled-components';\nimport { Icon } from 'react-icons-kit';\nimport { ic_play_arrow, ic_pause, ic_stop, ic_skip_next, ic_skip_previous } from 'react-icons-kit/md/';\nimport { setAudioPlaying, setAudioPaused, setCurrentTrackDuration, setCurrentTrackMoment } from '../../actions/audioActions';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ProgressBar from './ProgressBar';\nimport { PlaylistContext } from '../../data/playlist';\n\nconst getSecondsToMinutesAndSeconds = time => {\n  if (time === 0) {\n    return '0:00';\n  }\n\n  const minutes = Math.floor(time / 60);\n  const seconds = time - minutes * 60;\n  const actual = seconds < 10 ? '0' + seconds : seconds;\n  return `${minutes}:${actual}`;\n};\n\nconst iconStyles = {\n  display: 'flex',\n  cursor: 'pointer',\n  color: 'white',\n  width: '60px',\n  height: '100%',\n  alignItems: 'center',\n  justifyContent: 'center',\n  backgroundColor: 'black'\n};\nconst Counter = styled.p`\n\tfont-size: 1rem;\n\twidth: 100px;\n\tcolor: white;\n\tfont-weight: bold;\n\tbackground-color: black;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\tmargin: 0;\n\tpadding: 0;\n`;\n_c = Counter;\nconst Container = styled.div`\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: space-between;\n\theight: 100%;\n\twidth: 100%;\n`;\n_c2 = Container;\nconst ButtonContainer = styled.div`\n\theight: 100%;\n\twidth: auto;\n`;\n_c3 = ButtonContainer;\nconst BuyButton = styled.div`\n\theight: 100%;\n\twidth: 130px;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\n\tcolor: white;\n\ta {\n\t\tfont-weight: bold;\n\t\tfont-size: 1rem;\n\t}\n`;\n_c4 = BuyButton;\n\nfunction Audio(props) {\n  _s();\n\n  let audioPlayer;\n  const [currentTrackDuration, setCurrentTrackDuration] = useState(0);\n  const [currentTrackMoment, setCurrentTrackMoment] = useState(0);\n  const [progressBarWidth, setProgressBarWidth] = useState('0');\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [progress, setProgress] = useState(0);\n\n  const initPlayer = () => {\n    audioPlayer = document.getElementById('audioPlayer');\n  };\n\n  const handleStop = () => {\n    audioPlayer.pause();\n    audioPlayer.currentTime = 0.0;\n    setIsPlaying(false);\n    setCurrentTrackMoment(0);\n  };\n\n  const handlePlay = () => {\n    if (props.audio.playing) {\n      props.setAudioPaused();\n    } else {\n      props.setAudioPlaying();\n    }\n  };\n\n  const handleMetadata = () => {\n    const duration = Math.floor(audioPlayer.duration);\n    setProgress(Math.floor(audioPlayer.duration));\n    props.setCurrentTrackDuration(getSecondsToMinutesAndSeconds(duration));\n  };\n\n  const handleTimeupdate = playNext => {\n    props.setCurrentTrackMoment(Math.floor(audioPlayer.currentTime));\n    setProgressBarWidth(Math.abs(audioPlayer.currentTime / audioPlayer.duration * 100) + '%');\n  };\n\n  useEffect(() => {\n    props.setCurrentTrackDuration(0);\n    props.setCurrentTrackMoment(0);\n    setProgressBarWidth('0');\n  }, []);\n  useEffect(() => {\n    props.setCurrentTrackMoment(currentTrackMoment);\n  }, [currentTrackMoment]);\n  useEffect(() => {\n    if (!props.audio.playing) {\n      audioPlayer.pause();\n    } else {\n      audioPlayer.play();\n    }\n  }, [props.audio.playing]);\n  useLayoutEffect(() => {\n    initPlayer();\n  });\n  return /*#__PURE__*/_jsxDEV(PlaylistContext.Consumer, {\n    children: value => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '100%',\n        height: '100%',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n        id: \"audioPlayer\",\n        preload: \"metadata\",\n        onLoadedMetadata: handleMetadata,\n        onTimeUpdate: () => handleTimeupdate(value.handleNextTrack),\n        children: [/*#__PURE__*/_jsxDEV(\"source\", {\n          src: props.url,\n          type: \"audio/mp3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 7\n        }, this), \"Ooops, your browser is sooo old.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(ButtonContainer, {\n          onClick: handlePlay,\n          children: /*#__PURE__*/_jsxDEV(Icon, {\n            style: iconStyles,\n            icon: props.playing ? ic_pause : ic_play_arrow,\n            size: 30\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n          progress: progressBarWidth,\n          track: props.url,\n          width: '100%'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Counter, {\n          children: props.currentTrackDuration || '0 : 00'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(BuyButton, {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            children: \"BUY\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 6\n      }, this)]\n    }, props.url, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Audio, \"6EtS9DG7l+SiHoFvd7OFhxFwg7U=\");\n\n_c5 = Audio;\nAudio.propTypes = {\n  setAudioPlaying: PropTypes.func,\n  setAudioPaused: PropTypes.func,\n  setCurrentTrackDuration: PropTypes.func,\n  setCurrentTrackMoment: PropTypes.func,\n  playing: PropTypes.bool,\n  currentTrackMoment: PropTypes.number,\n  currentTrackDuration: PropTypes.number\n};\n\nconst mapStateToProps = state => ({\n  audio: state.audio,\n  playing: state.audio.playing,\n  currentTrackDuration: state.audio.currentTrackDuration,\n  currentTrackMoment: state.audio.currentTrackMoment\n});\n\nexport default connect(mapStateToProps, {\n  setAudioPlaying,\n  setAudioPaused,\n  setCurrentTrackDuration,\n  setCurrentTrackMoment\n})(Audio);\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Counter\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"ButtonContainer\");\n$RefreshReg$(_c4, \"BuyButton\");\n$RefreshReg$(_c5, \"Audio\");","map":{"version":3,"sources":["/home/oscady/Documents/projects/outboard/client/src/components/Player/Audio.js"],"names":["React","useState","useEffect","useLayoutEffect","styled","Icon","ic_play_arrow","ic_pause","ic_stop","ic_skip_next","ic_skip_previous","setAudioPlaying","setAudioPaused","setCurrentTrackDuration","setCurrentTrackMoment","PropTypes","connect","ProgressBar","PlaylistContext","getSecondsToMinutesAndSeconds","time","minutes","Math","floor","seconds","actual","iconStyles","display","cursor","color","width","height","alignItems","justifyContent","backgroundColor","Counter","p","Container","div","ButtonContainer","BuyButton","Audio","props","audioPlayer","currentTrackDuration","currentTrackMoment","progressBarWidth","setProgressBarWidth","isPlaying","setIsPlaying","progress","setProgress","initPlayer","document","getElementById","handleStop","pause","currentTime","handlePlay","audio","playing","handleMetadata","duration","handleTimeupdate","playNext","abs","play","value","handleNextTrack","url","propTypes","func","bool","number","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useLayoutEffect } from 'react';\nimport styled from 'styled-components';\nimport { Icon } from 'react-icons-kit';\nimport { ic_play_arrow, ic_pause, ic_stop, ic_skip_next, ic_skip_previous } from 'react-icons-kit/md/';\nimport {\n\tsetAudioPlaying,\n\tsetAudioPaused,\n\tsetCurrentTrackDuration,\n\tsetCurrentTrackMoment\n} from '../../actions/audioActions';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport ProgressBar from './ProgressBar';\nimport { PlaylistContext } from '../../data/playlist';\n\nconst getSecondsToMinutesAndSeconds = (time) => {\n\tif (time === 0) {\n\t\treturn '0:00';\n\t}\n\tconst minutes = Math.floor(time / 60);\n\tconst seconds = time - minutes * 60;\n\tconst actual = seconds < 10 ? '0' + seconds : seconds;\n\treturn `${minutes}:${actual}`;\n};\n\nconst iconStyles = {\n\tdisplay: 'flex',\n\tcursor: 'pointer',\n\tcolor: 'white',\n\twidth: '60px',\n\theight: '100%',\n\talignItems: 'center',\n\tjustifyContent: 'center',\n\tbackgroundColor: 'black'\n};\n\nconst Counter = styled.p`\n\tfont-size: 1rem;\n\twidth: 100px;\n\tcolor: white;\n\tfont-weight: bold;\n\tbackground-color: black;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\tmargin: 0;\n\tpadding: 0;\n`;\n\nconst Container = styled.div`\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: space-between;\n\theight: 100%;\n\twidth: 100%;\n`;\n\nconst ButtonContainer = styled.div`\n\theight: 100%;\n\twidth: auto;\n`;\n\nconst BuyButton = styled.div`\n\theight: 100%;\n\twidth: 130px;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\n\tcolor: white;\n\ta {\n\t\tfont-weight: bold;\n\t\tfont-size: 1rem;\n\t}\n`;\n\nfunction Audio(props) {\n\tlet audioPlayer;\n\n\tconst [ currentTrackDuration, setCurrentTrackDuration ] = useState(0);\n\tconst [ currentTrackMoment, setCurrentTrackMoment ] = useState(0);\n\tconst [ progressBarWidth, setProgressBarWidth ] = useState('0');\n\tconst [ isPlaying, setIsPlaying ] = useState(false);\n\tconst [ progress, setProgress ] = useState(0);\n\n\tconst initPlayer = () => {\n\t\taudioPlayer = document.getElementById('audioPlayer');\n\t};\n\n\tconst handleStop = () => {\n\t\taudioPlayer.pause();\n\t\taudioPlayer.currentTime = 0.0;\n\t\tsetIsPlaying(false);\n\t\tsetCurrentTrackMoment(0);\n\t};\n\n\tconst handlePlay = () => {\n\t\tif (props.audio.playing) {\n\t\t\tprops.setAudioPaused();\n\t\t} else {\n\t\t\tprops.setAudioPlaying();\n\t\t}\n\t};\n\n\tconst handleMetadata = () => {\n\t\tconst duration = Math.floor(audioPlayer.duration);\n\t\tsetProgress(Math.floor(audioPlayer.duration));\n\t\tprops.setCurrentTrackDuration(getSecondsToMinutesAndSeconds(duration));\n\t};\n\n\tconst handleTimeupdate = (playNext) => {\n\t\tprops.setCurrentTrackMoment(Math.floor(audioPlayer.currentTime));\n\t\tsetProgressBarWidth(Math.abs(audioPlayer.currentTime / audioPlayer.duration * 100) + '%');\n\t};\n\n\tuseEffect(() => {\n\t\tprops.setCurrentTrackDuration(0);\n\t\tprops.setCurrentTrackMoment(0);\n\t\tsetProgressBarWidth('0');\n\t}, []);\n\n\tuseEffect(\n\t\t() => {\n\t\t\tprops.setCurrentTrackMoment(currentTrackMoment);\n\t\t},\n\t\t[ currentTrackMoment ]\n\t);\n\n\tuseEffect(\n\t\t() => {\n\t\t\tif (!props.audio.playing) {\n\t\t\t\taudioPlayer.pause();\n\t\t\t} else {\n\t\t\t\taudioPlayer.play();\n\t\t\t}\n\t\t},\n\t\t[ props.audio.playing ]\n\t);\n\n\tuseLayoutEffect(() => {\n\t\tinitPlayer();\n\t});\n\n\treturn (\n\t\t<PlaylistContext.Consumer>\n\t\t\t{(value) => (\n\t\t\t\t<div\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\twidth: '100%',\n\t\t\t\t\t\theight: '100%',\n\t\t\t\t\t\talignItems: 'center'\n\t\t\t\t\t}}\n\t\t\t\t\tkey={props.url}>\n\t\t\t\t\t<audio\n\t\t\t\t\t\tid='audioPlayer'\n\t\t\t\t\t\tpreload='metadata'\n\t\t\t\t\t\tonLoadedMetadata={handleMetadata}\n\t\t\t\t\t\tonTimeUpdate={() => handleTimeupdate(value.handleNextTrack)}>\n\t\t\t\t\t\t<source src={props.url} type='audio/mp3' />\n\t\t\t\t\t\tOoops, your browser is sooo old.\n\t\t\t\t\t</audio>\n\t\t\t\t\t<Container>\n\t\t\t\t\t\t{/* <Icon style={iconStyles} icon={ic_skip_previous} onClick={value.handlePrevTrack} size={30} /> */}\n\t\t\t\t\t\t<ButtonContainer onClick={handlePlay}>\n\t\t\t\t\t\t\t<Icon style={iconStyles} icon={props.playing ? ic_pause : ic_play_arrow} size={30} />\n\t\t\t\t\t\t</ButtonContainer>\n\t\t\t\t\t\t{/* <Icon size={30} style={iconStyles} icon={ic_stop} onClick={handleStop} />\n\t\t\t\t\t\t<Icon style={iconStyles} icon={ic_skip_next} onClick={value.handleNextTrack} size={30} /> */}\n\t\t\t\t\t\t{/* <Counter>{getSecondsToMinutesAndSeconds(currentTrackMoment)}</Counter> */}\n\t\t\t\t\t\t<ProgressBar progress={progressBarWidth} track={props.url} width={'100%'} />\n\t\t\t\t\t\t<Counter>{props.currentTrackDuration || '0 : 00'}</Counter>\n\t\t\t\t\t\t<BuyButton>\n\t\t\t\t\t\t\t<a>BUY</a>\n\t\t\t\t\t\t</BuyButton>\n\t\t\t\t\t</Container>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</PlaylistContext.Consumer>\n\t);\n}\n\nAudio.propTypes = {\n\tsetAudioPlaying: PropTypes.func,\n\tsetAudioPaused: PropTypes.func,\n\tsetCurrentTrackDuration: PropTypes.func,\n\tsetCurrentTrackMoment: PropTypes.func,\n\tplaying: PropTypes.bool,\n\tcurrentTrackMoment: PropTypes.number,\n\tcurrentTrackDuration: PropTypes.number\n};\n\nconst mapStateToProps = (state) => ({\n\taudio: state.audio,\n\tplaying: state.audio.playing,\n\tcurrentTrackDuration: state.audio.currentTrackDuration,\n\tcurrentTrackMoment: state.audio.currentTrackMoment\n});\n\nexport default connect(mapStateToProps, {\n\tsetAudioPlaying,\n\tsetAudioPaused,\n\tsetCurrentTrackDuration,\n\tsetCurrentTrackMoment\n})(Audio);\n"]},"metadata":{},"sourceType":"module"}