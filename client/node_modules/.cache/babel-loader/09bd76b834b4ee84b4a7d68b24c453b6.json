{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/oscady/Documents/projects/outboard/client/src/components-back/Releases/UploadRelease.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { Button, Form, FormGroup, Label, Input, Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nimport Styled from 'styled-components';\nimport { addRelease, getReleases } from '../../actions/releaseActions';\nimport { getTracks } from '../../actions/trackUploadActions';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { artists } from '../../data/artists';\nimport TracksModal from './TrackModal';\nconst ButtonContainer = Styled.div`\n  height: 150px;\n  width: 100%;\n  position:absolute;\n  bottom: 0;\n  left:0;\n  right: 0;\n\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  align-items: center;\n`;\n_c = ButtonContainer;\nconst FormContainer = Styled.div`\nposition: relative;\n  height: 50%%\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  align-items: flex-start;\n  justify-content: space-between;\n  flex-wrap: wrap;\n  padding: 100px;\n`;\n_c2 = FormContainer;\nconst Container = Styled.div`\nposition: relative;\n  height: calc(100vh - 100px);\n  width: 100%;\n\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: space-between;\n  flex-wrap: nowrap;\n`;\n_c3 = Container;\nconst Preview = Styled.div`\n\tposition: relative;\n\theight: 50%;\n\twidth: 100%;\n\tbackground-color: red;\n\tdisplay: flex;\n\tflex-direction: row;\n\tflex-wrap: nowrap;\n\talign-items: space-between;\n\tjustify-content: center;\n`;\n_c4 = Preview;\nconst Image = Styled.div`\n\theight: 300px;\n\twidth: 300px;\n\talign-items: center;\n\tjustify-content: center;\n\n\timg {\n\t\theight: 100%;\n\t\twidth: 100%;\n\t}\n`;\n_c5 = Image;\nconst Tracks = Styled.div`\n\theight: 200px;\n\twidth: 400px;\n\talign-items: center;\n\tjustify-content: center;\n\tbackground-color: green;\n\n\tli {\n\t\tfont-size: 2rem;\n\t\ttext-align: left;\n\t\tcolor:black;\n\t}\n\t`;\n_c6 = Tracks;\n\nconst UploadRelease = props => {\n  _s();\n\n  const [name, setName] = useState('');\n  const [artists, setArtists] = useState([]);\n  const [items, setItems] = useState([]);\n  const [artwork, setArtwork] = useState('');\n  const [uploadedTracks, setUploadedTracks] = useState([]);\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n\n  const toggle = () => setDropdownOpen(prevState => !prevState);\n\n  useEffect(() => {\n    props.getTracks();\n    setUploadedTracks(props.track.tracks);\n    console.log(items);\n  }, [name]);\n  useEffect(() => {\n    items.map(track => console.log(track));\n  }, [name, items]);\n\n  const clearForm = () => {\n    setName('');\n    setArtists([]);\n    setItems([]);\n    setArtwork('');\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    let formData = new FormData();\n    formData.append('name', name);\n    formData.append('artists', artists); //formData.append('tracks', items);\n\n    formData.append('artwork', artwork);\n\n    for (var y = 0; y <= 5; y++) {\n      formData.append('tracks[]', items[y]);\n    }\n\n    console.log(items);\n    console.log(formData);\n    props.addRelease(formData);\n    clearForm();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: onSubmit,\n      action: \"/cms\",\n      style: {\n        height: '50%',\n        width: '100%'\n      },\n      children: /*#__PURE__*/_jsxDEV(FormContainer, {\n        children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            style: {\n              padding: '5px',\n              fontSize: '2rem',\n              textAlign: 'left',\n              color: 'white'\n            },\n            htmlFor: \"name\",\n            children: \"Release Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            name: \"name\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            style: {\n              padding: '5px',\n              fontSize: '2rem',\n              textAlign: 'left',\n              color: 'white'\n            },\n            htmlFor: \"artists\",\n            children: \"artists\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            name: \"artists\",\n            value: artists,\n            onChange: e => setArtists(...artists, e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            style: {\n              padding: '5px',\n              fontSize: '2rem',\n              textAlign: 'left',\n              color: 'white'\n            },\n            htmlFor: \"tracks\",\n            children: \"tracks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(TracksModal, {\n            buttonLabel: \"Add Tracks\",\n            className: \"modal-lg\",\n            items: items,\n            setItems: setItems,\n            uploadedTracks: props.track.tracks\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            style: {\n              padding: '5px',\n              fontSize: '2rem',\n              textAlign: 'left',\n              color: 'white'\n            },\n            htmlFor: \"artwork\",\n            children: \"Artwork\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            name: \"artwork\",\n            value: artwork,\n            onChange: e => setArtwork(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Preview, {\n      children: [/*#__PURE__*/_jsxDEV(Image, {\n        children: artwork ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: artwork\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 23\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Tracks, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: items ? items.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: item.trackName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 39\n          }, this)) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(ButtonContainer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          className: \"btn-lg\",\n          style: {\n            margin: '20px'\n          },\n          type: \"submit\",\n          onClick: onSubmit,\n          children: \"add item\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"btn-lg\",\n          style: {\n            margin: '20px'\n          },\n          onClick: clearForm,\n          children: \"Clear Form\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 3\n  }, this);\n};\n\n_s(UploadRelease, \"VXn7oE/Nr2HEYBBOnTpFOh1S9z8=\");\n\n_c7 = UploadRelease;\nUploadRelease.propTypes = {\n  setAudioPlaing: PropTypes.func,\n  setAudioPaused: PropTypes.func,\n  getReleases: PropTypes.func,\n  addRelease: PropTypes.func,\n  playing: PropTypes.bool,\n  tracks: PropTypes.object,\n  release: PropTypes.object,\n  getTracks: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  release: state.release,\n  track: state.track\n});\n\nexport default connect(mapStateToProps, {\n  addRelease,\n  getReleases,\n  getTracks\n})(UploadRelease);\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"ButtonContainer\");\n$RefreshReg$(_c2, \"FormContainer\");\n$RefreshReg$(_c3, \"Container\");\n$RefreshReg$(_c4, \"Preview\");\n$RefreshReg$(_c5, \"Image\");\n$RefreshReg$(_c6, \"Tracks\");\n$RefreshReg$(_c7, \"UploadRelease\");","map":{"version":3,"sources":["/home/oscady/Documents/projects/outboard/client/src/components-back/Releases/UploadRelease.js"],"names":["useEffect","useState","Button","Form","FormGroup","Label","Input","Dropdown","DropdownToggle","DropdownMenu","DropdownItem","Styled","addRelease","getReleases","getTracks","PropTypes","connect","artists","TracksModal","ButtonContainer","div","FormContainer","Container","Preview","Image","Tracks","UploadRelease","props","name","setName","setArtists","items","setItems","artwork","setArtwork","uploadedTracks","setUploadedTracks","dropdownOpen","setDropdownOpen","toggle","prevState","track","tracks","console","log","map","clearForm","onSubmit","e","preventDefault","formData","FormData","append","y","height","width","padding","fontSize","textAlign","color","target","value","item","trackName","margin","propTypes","setAudioPlaing","func","setAudioPaused","playing","bool","object","release","mapStateToProps","state"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\nimport {\n\tButton,\n\tForm,\n\tFormGroup,\n\tLabel,\n\tInput,\n\tDropdown,\n\tDropdownToggle,\n\tDropdownMenu,\n\tDropdownItem\n} from 'reactstrap';\nimport Styled from 'styled-components';\nimport { addRelease, getReleases } from '../../actions/releaseActions';\nimport { getTracks } from '../../actions/trackUploadActions';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { artists } from '../../data/artists';\nimport TracksModal from './TrackModal';\n\nconst ButtonContainer = Styled.div`\n  height: 150px;\n  width: 100%;\n  position:absolute;\n  bottom: 0;\n  left:0;\n  right: 0;\n\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  align-items: center;\n`;\n\nconst FormContainer = Styled.div`\nposition: relative;\n  height: 50%%\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  align-items: flex-start;\n  justify-content: space-between;\n  flex-wrap: wrap;\n  padding: 100px;\n`;\nconst Container = Styled.div`\nposition: relative;\n  height: calc(100vh - 100px);\n  width: 100%;\n\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: space-between;\n  flex-wrap: nowrap;\n`;\n\nconst Preview = Styled.div`\n\tposition: relative;\n\theight: 50%;\n\twidth: 100%;\n\tbackground-color: red;\n\tdisplay: flex;\n\tflex-direction: row;\n\tflex-wrap: nowrap;\n\talign-items: space-between;\n\tjustify-content: center;\n`;\n\nconst Image = Styled.div`\n\theight: 300px;\n\twidth: 300px;\n\talign-items: center;\n\tjustify-content: center;\n\n\timg {\n\t\theight: 100%;\n\t\twidth: 100%;\n\t}\n`;\n\nconst Tracks = Styled.div`\n\theight: 200px;\n\twidth: 400px;\n\talign-items: center;\n\tjustify-content: center;\n\tbackground-color: green;\n\n\tli {\n\t\tfont-size: 2rem;\n\t\ttext-align: left;\n\t\tcolor:black;\n\t}\n\t`;\n\nconst UploadRelease = (props) => {\n\tconst [ name, setName ] = useState('');\n\tconst [ artists, setArtists ] = useState([]);\n\tconst [ items, setItems ] = useState([]);\n\tconst [ artwork, setArtwork ] = useState('');\n\tconst [ uploadedTracks, setUploadedTracks ] = useState([]);\n\tconst [ dropdownOpen, setDropdownOpen ] = useState(false);\n\n\tconst toggle = () => setDropdownOpen((prevState) => !prevState);\n\n\tuseEffect(\n\t\t() => {\n\t\t\tprops.getTracks();\n\t\t\tsetUploadedTracks(props.track.tracks);\n\t\t\tconsole.log(items);\n\t\t},\n\t\t[ name ]\n\t);\n\n\tuseEffect(\n\t\t() => {\n\t\t\titems.map((track) => console.log(track));\n\t\t},\n\t\t[ name, items ]\n\t);\n\n\tconst clearForm = () => {\n\t\tsetName('');\n\t\tsetArtists([]);\n\t\tsetItems([]);\n\t\tsetArtwork('');\n\t};\n\n\tconst onSubmit = (e) => {\n\t\te.preventDefault();\n\n\t\tlet formData = new FormData();\n\n\t\tformData.append('name', name);\n\t\tformData.append('artists', artists);\n\t\t//formData.append('tracks', items);\n\t\tformData.append('artwork', artwork);\n\n\t\tfor (var y = 0; y <= 5; y++) {\n\t\t\tformData.append('tracks[]', items[y]);\n\t\t}\n\t\tconsole.log(items);\n\t\tconsole.log(formData);\n\t\tprops.addRelease(formData);\n\n\t\tclearForm();\n\t};\n\n\treturn (\n\t\t<Container>\n\t\t\t<Form onSubmit={onSubmit} action='/cms' style={{ height: '50%', width: '100%' }}>\n\t\t\t\t<FormContainer>\n\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t<Label\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tpadding: '5px',\n\t\t\t\t\t\t\t\tfontSize: '2rem',\n\t\t\t\t\t\t\t\ttextAlign: 'left',\n\t\t\t\t\t\t\t\tcolor: 'white'\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\thtmlFor='name'>\n\t\t\t\t\t\t\tRelease Title\n\t\t\t\t\t\t</Label>\n\t\t\t\t\t\t<Input type='text' name='name' value={name} onChange={(e) => setName(e.target.value)} />\n\t\t\t\t\t</FormGroup>\n\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t<Label\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tpadding: '5px',\n\t\t\t\t\t\t\t\tfontSize: '2rem',\n\t\t\t\t\t\t\t\ttextAlign: 'left',\n\t\t\t\t\t\t\t\tcolor: 'white'\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\thtmlFor='artists'>\n\t\t\t\t\t\t\tartists\n\t\t\t\t\t\t</Label>\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\tname='artists'\n\t\t\t\t\t\t\tvalue={artists}\n\t\t\t\t\t\t\tonChange={(e) => setArtists(...artists, e.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</FormGroup>\n\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t<Label\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tpadding: '5px',\n\t\t\t\t\t\t\t\tfontSize: '2rem',\n\t\t\t\t\t\t\t\ttextAlign: 'left',\n\t\t\t\t\t\t\t\tcolor: 'white'\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\thtmlFor='tracks'>\n\t\t\t\t\t\t\ttracks\n\t\t\t\t\t\t</Label>\n\t\t\t\t\t\t<TracksModal\n\t\t\t\t\t\t\tbuttonLabel='Add Tracks'\n\t\t\t\t\t\t\tclassName='modal-lg'\n\t\t\t\t\t\t\titems={items}\n\t\t\t\t\t\t\tsetItems={setItems}\n\t\t\t\t\t\t\tuploadedTracks={props.track.tracks}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{/* <Input\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tname='tracks'\n\t\t\t\t\t\tvalue={tracks}\n\t\t\t\t\t\tonChange={(e) => setItems(...tracks, e.target.value)}\n\t\t\t\t\t/> */}\n\t\t\t\t\t</FormGroup>\n\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t<Label\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tpadding: '5px',\n\t\t\t\t\t\t\t\tfontSize: '2rem',\n\t\t\t\t\t\t\t\ttextAlign: 'left',\n\t\t\t\t\t\t\t\tcolor: 'white'\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\thtmlFor='artwork'>\n\t\t\t\t\t\t\tArtwork\n\t\t\t\t\t\t</Label>\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\tname='artwork'\n\t\t\t\t\t\t\tvalue={artwork}\n\t\t\t\t\t\t\tonChange={(e) => setArtwork(e.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</FormGroup>\n\t\t\t\t</FormContainer>\n\t\t\t</Form>\n\t\t\t<Preview>\n\t\t\t\t<Image>{artwork ? <img src={artwork} /> : null}</Image>\n\t\t\t\t<Tracks>\n\t\t\t\t\t<h1>{name}</h1>\n\t\t\t\t\t<ul>{items ? items.map((item) => <li>{item.trackName}</li>) : null}</ul>\n\t\t\t\t</Tracks>\n\t\t\t\t<ButtonContainer>\n\t\t\t\t\t<Button className='btn-lg' style={{ margin: '20px' }} type='submit' onClick={onSubmit}>\n\t\t\t\t\t\tadd item\n\t\t\t\t\t</Button>\n\n\t\t\t\t\t<Button className='btn-lg' style={{ margin: '20px' }} onClick={clearForm}>\n\t\t\t\t\t\tClear Form\n\t\t\t\t\t</Button>\n\t\t\t\t</ButtonContainer>\n\t\t\t</Preview>\n\t\t</Container>\n\t);\n};\n\nUploadRelease.propTypes = {\n\tsetAudioPlaing: PropTypes.func,\n\tsetAudioPaused: PropTypes.func,\n\tgetReleases: PropTypes.func,\n\taddRelease: PropTypes.func,\n\tplaying: PropTypes.bool,\n\ttracks: PropTypes.object,\n\trelease: PropTypes.object,\n\tgetTracks: PropTypes.func\n};\n\nconst mapStateToProps = (state) => ({ release: state.release, track: state.track });\n\nexport default connect(mapStateToProps, { addRelease, getReleases, getTracks })(UploadRelease);\n"]},"metadata":{},"sourceType":"module"}