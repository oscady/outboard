{"ast":null,"code":"import { GET_RELEASES, ADD_RELEASE, SET_RELEASES_LOADING, SET_RELEASES_LOADED, SET_RELEASE_PLAYLIST } from '../actions/types';\nconst initialState = {\n  releases: [],\n  playlist: [],\n  loading: false\n}; // export tracks in current state + changes\n\nconst releaseReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_RELEASES:\n      return { ...state,\n        // return state of tracks\n        releases: action.payload\n      };\n\n    case SET_RELEASE_PLAYLIST:\n      return { ...state,\n        playlist: action.payload\n      };\n\n    case ADD_RELEASE:\n      return { ...state,\n        releases: [action.payload, ...state.tracks] // copy state and return with new image\n\n      };\n\n    case SET_RELEASES_LOADING:\n      return { ...state,\n        loading: true\n      };\n\n    case SET_RELEASES_LOADED:\n      return { ...state,\n        loading: false\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default releaseReducer;","map":{"version":3,"sources":["/home/oscady/Documents/projects/outboard/client/src/reducers/releaseReducer.js"],"names":["GET_RELEASES","ADD_RELEASE","SET_RELEASES_LOADING","SET_RELEASES_LOADED","SET_RELEASE_PLAYLIST","initialState","releases","playlist","loading","releaseReducer","state","action","type","payload","tracks"],"mappings":"AAAA,SACCA,YADD,EAECC,WAFD,EAGCC,oBAHD,EAICC,mBAJD,EAKCC,oBALD,QAMO,kBANP;AAQA,MAAMC,YAAY,GAAG;AACpBC,EAAAA,QAAQ,EAAE,EADU;AAEpBC,EAAAA,QAAQ,EAAE,EAFU;AAGpBC,EAAAA,OAAO,EAAE;AAHW,CAArB,C,CAKA;;AACA,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AACxD,UAAQA,MAAM,CAACC,IAAf;AACC,SAAKZ,YAAL;AACC,aAAO,EACN,GAAGU,KADG;AACI;AACVJ,QAAAA,QAAQ,EAAEK,MAAM,CAACE;AAFX,OAAP;;AAID,SAAKT,oBAAL;AACC,aAAO,EACN,GAAGM,KADG;AAENH,QAAAA,QAAQ,EAAEI,MAAM,CAACE;AAFX,OAAP;;AAID,SAAKZ,WAAL;AACC,aAAO,EACN,GAAGS,KADG;AAENJ,QAAAA,QAAQ,EAAE,CAAEK,MAAM,CAACE,OAAT,EAAkB,GAAGH,KAAK,CAACI,MAA3B,CAFJ,CAEwC;;AAFxC,OAAP;;AAID,SAAKZ,oBAAL;AACC,aAAO,EACN,GAAGQ,KADG;AAENF,QAAAA,OAAO,EAAE;AAFH,OAAP;;AAID,SAAKL,mBAAL;AACC,aAAO,EACN,GAAGO,KADG;AAENF,QAAAA,OAAO,EAAE;AAFH,OAAP;;AAID;AACC,aAAOE,KAAP;AA3BF;AA6BA,CA9BD;;AAgCA,eAAeD,cAAf","sourcesContent":["import {\n\tGET_RELEASES,\n\tADD_RELEASE,\n\tSET_RELEASES_LOADING,\n\tSET_RELEASES_LOADED,\n\tSET_RELEASE_PLAYLIST\n} from '../actions/types';\n\nconst initialState = {\n\treleases: [],\n\tplaylist: [],\n\tloading: false\n};\n// export tracks in current state + changes\nconst releaseReducer = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase GET_RELEASES:\n\t\t\treturn {\n\t\t\t\t...state, // return state of tracks\n\t\t\t\treleases: action.payload\n\t\t\t};\n\t\tcase SET_RELEASE_PLAYLIST:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tplaylist: action.payload\n\t\t\t};\n\t\tcase ADD_RELEASE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\treleases: [ action.payload, ...state.tracks ] // copy state and return with new image\n\t\t\t};\n\t\tcase SET_RELEASES_LOADING:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloading: true\n\t\t\t};\n\t\tcase SET_RELEASES_LOADED:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloading: false\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default releaseReducer;\n"]},"metadata":{},"sourceType":"module"}