{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/oscady/Documents/projects/outboard/client/src/components/Player/Audio.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useLayoutEffect } from 'react';\nimport styled from 'styled-components';\nimport { Icon } from 'react-icons-kit';\nimport { ic_play_arrow, ic_pause, ic_stop, ic_skip_next, ic_skip_previous } from 'react-icons-kit/md/';\nimport { ProgressBar } from './ProgressBar';\nimport { PlaylistContext } from '../../data/playlist';\n\nconst getSecondsToMinutesAndSeconds = time => {\n  if (time === 0) {\n    return '0 : 00';\n  }\n\n  const minutes = Math.floor(time / 60);\n  const seconds = time - minutes * 60;\n  return `${minutes} : 0${seconds}`;\n};\n\nconst iconStyles = {\n  cursor: 'pointer',\n  color: '#472F90'\n};\nexport function Audio(props) {\n  _s();\n\n  let audioPlayer;\n  const [currentTrackDuration, setCurrentTrackDuration] = useState(0);\n  const [currentTrackMoment, setCurrentTrackMoment] = useState(0);\n  const [progressBarWidth, setProgressBarWidth] = useState('0');\n  const [isPlaying, setIsPlaying] = useState(false);\n  const Counter = styled.p`\n\t\tfont-size: 0.65rem;\n\n\t\tcolor: #472f90;\n\t`;\n  const Container = styled.div`\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: space-between;\n\t`;\n\n  const initPlayer = () => {\n    audioPlayer = document.getElementById('audioPlayer');\n  };\n\n  const handleStop = () => {\n    audioPlayer.pause();\n    audioPlayer.currentTime = 0.0;\n    setIsPlaying(false);\n    setCurrentTrackMoment(0);\n  };\n\n  const handlePlay = () => {\n    if (audioPlayer.paused || audioPlayer.ended) {\n      audioPlayer.play();\n      setIsPlaying(true);\n    } else {\n      audioPlayer.pause();\n      setIsPlaying(false);\n    }\n  };\n\n  const handleMetadata = () => {\n    const duration = Math.floor(audioPlayer.duration);\n    setCurrentTrackDuration(getSecondsToMinutesAndSeconds(duration));\n  };\n\n  const handleTimeupdate = playNext => {\n    setCurrentTrackMoment(Math.floor(audioPlayer.currentTime));\n    setProgressBarWidth(Math.floor(audioPlayer.currentTime / audioPlayer.duration * 100) + '%');\n\n    if (audioPlayer.currentTime === audioPlayer.duration) {\n      playNext();\n    }\n  };\n\n  useEffect(() => {\n    setCurrentTrackDuration(0);\n    setCurrentTrackMoment(0);\n    setProgressBarWidth('0');\n    handlePlay();\n  }, [props.url]);\n  useLayoutEffect(() => {\n    initPlayer();\n  });\n  return /*#__PURE__*/_jsxDEV(PlaylistContext.Consumer, {\n    children: value => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n        id: \"audioPlayer\",\n        preload: \"metadata\",\n        onLoadedMetadata: handleMetadata,\n        onTimeUpdate: () => handleTimeupdate(value.handleNextTrack),\n        children: [/*#__PURE__*/_jsxDEV(\"source\", {\n          src: props.url,\n          type: \"audio/ogg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 7\n        }, this), \"Ooops, your browser is sooo old.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(Icon, {\n          style: iconStyles,\n          icon: isPlaying ? ic_pause : ic_play_arrow,\n          onClick: handlePlay,\n          size: 30\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Counter, {\n          children: getSecondsToMinutesAndSeconds(currentTrackMoment)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n          progressPercent: progressBarWidth,\n          width: '200px'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Counter, {\n          children: currentTrackDuration || '0 : 00'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 6\n      }, this)]\n    }, props.url, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Audio, \"3exRBKyhNh98CeGz4odfh+FSv8E=\");\n\n_c = Audio;\n\nvar _c;\n\n$RefreshReg$(_c, \"Audio\");","map":{"version":3,"sources":["/home/oscady/Documents/projects/outboard/client/src/components/Player/Audio.js"],"names":["React","useState","useEffect","useLayoutEffect","styled","Icon","ic_play_arrow","ic_pause","ic_stop","ic_skip_next","ic_skip_previous","ProgressBar","PlaylistContext","getSecondsToMinutesAndSeconds","time","minutes","Math","floor","seconds","iconStyles","cursor","color","Audio","props","audioPlayer","currentTrackDuration","setCurrentTrackDuration","currentTrackMoment","setCurrentTrackMoment","progressBarWidth","setProgressBarWidth","isPlaying","setIsPlaying","Counter","p","Container","div","initPlayer","document","getElementById","handleStop","pause","currentTime","handlePlay","paused","ended","play","handleMetadata","duration","handleTimeupdate","playNext","url","value","handleNextTrack"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useLayoutEffect } from 'react';\nimport styled from 'styled-components';\nimport { Icon } from 'react-icons-kit';\nimport { ic_play_arrow, ic_pause, ic_stop, ic_skip_next, ic_skip_previous } from 'react-icons-kit/md/';\n\nimport { ProgressBar } from './ProgressBar';\nimport { PlaylistContext } from '../../data/playlist';\n\nconst getSecondsToMinutesAndSeconds = (time) => {\n\tif (time === 0) {\n\t\treturn '0 : 00';\n\t}\n\tconst minutes = Math.floor(time / 60);\n\tconst seconds = time - minutes * 60;\n\treturn `${minutes} : 0${seconds}`;\n};\n\nconst iconStyles = {\n\tcursor: 'pointer',\n\tcolor: '#472F90'\n};\n\nexport function Audio(props) {\n\tlet audioPlayer;\n\n\tconst [ currentTrackDuration, setCurrentTrackDuration ] = useState(0);\n\tconst [ currentTrackMoment, setCurrentTrackMoment ] = useState(0);\n\tconst [ progressBarWidth, setProgressBarWidth ] = useState('0');\n\tconst [ isPlaying, setIsPlaying ] = useState(false);\n\n\tconst Counter = styled.p`\n\t\tfont-size: 0.65rem;\n\n\t\tcolor: #472f90;\n\t`;\n\n\tconst Container = styled.div`\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: space-between;\n\t`;\n\n\tconst initPlayer = () => {\n\t\taudioPlayer = document.getElementById('audioPlayer');\n\t};\n\n\tconst handleStop = () => {\n\t\taudioPlayer.pause();\n\t\taudioPlayer.currentTime = 0.0;\n\t\tsetIsPlaying(false);\n\t\tsetCurrentTrackMoment(0);\n\t};\n\n\tconst handlePlay = () => {\n\t\tif (audioPlayer.paused || audioPlayer.ended) {\n\t\t\taudioPlayer.play();\n\t\t\tsetIsPlaying(true);\n\t\t} else {\n\t\t\taudioPlayer.pause();\n\t\t\tsetIsPlaying(false);\n\t\t}\n\t};\n\n\tconst handleMetadata = () => {\n\t\tconst duration = Math.floor(audioPlayer.duration);\n\t\tsetCurrentTrackDuration(getSecondsToMinutesAndSeconds(duration));\n\t};\n\n\tconst handleTimeupdate = (playNext) => {\n\t\tsetCurrentTrackMoment(Math.floor(audioPlayer.currentTime));\n\t\tsetProgressBarWidth(Math.floor(audioPlayer.currentTime / audioPlayer.duration * 100) + '%');\n\t\tif (audioPlayer.currentTime === audioPlayer.duration) {\n\t\t\tplayNext();\n\t\t}\n\t};\n\n\tuseEffect(\n\t\t() => {\n\t\t\tsetCurrentTrackDuration(0);\n\t\t\tsetCurrentTrackMoment(0);\n\t\t\tsetProgressBarWidth('0');\n\t\t\thandlePlay();\n\t\t},\n\t\t[ props.url ]\n\t);\n\n\tuseLayoutEffect(() => {\n\t\tinitPlayer();\n\t});\n\n\treturn (\n\t\t<PlaylistContext.Consumer>\n\t\t\t{(value) => (\n\t\t\t\t<div key={props.url}>\n\t\t\t\t\t<audio\n\t\t\t\t\t\tid='audioPlayer'\n\t\t\t\t\t\tpreload='metadata'\n\t\t\t\t\t\tonLoadedMetadata={handleMetadata}\n\t\t\t\t\t\tonTimeUpdate={() => handleTimeupdate(value.handleNextTrack)}>\n\t\t\t\t\t\t<source src={props.url} type='audio/ogg' />\n\t\t\t\t\t\tOoops, your browser is sooo old.\n\t\t\t\t\t</audio>\n\t\t\t\t\t<Container>\n\t\t\t\t\t\t{/* <Icon style={iconStyles} icon={ic_skip_previous} onClick={value.handlePrevTrack} size={30} /> */}\n\t\t\t\t\t\t<Icon\n\t\t\t\t\t\t\tstyle={iconStyles}\n\t\t\t\t\t\t\ticon={isPlaying ? ic_pause : ic_play_arrow}\n\t\t\t\t\t\t\tonClick={handlePlay}\n\t\t\t\t\t\t\tsize={30}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{/* <Icon size={30} style={iconStyles} icon={ic_stop} onClick={handleStop} />\n\t\t\t\t\t\t<Icon style={iconStyles} icon={ic_skip_next} onClick={value.handleNextTrack} size={30} /> */}\n\t\t\t\t\t\t<Counter>{getSecondsToMinutesAndSeconds(currentTrackMoment)}</Counter>\n\t\t\t\t\t\t<ProgressBar progressPercent={progressBarWidth} width={'200px'} />\n\t\t\t\t\t\t<Counter>{currentTrackDuration || '0 : 00'}</Counter>\n\t\t\t\t\t</Container>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</PlaylistContext.Consumer>\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}