{"ast":null,"code":"import { SET_AUDIO_PLAYING, SET_AUDIO_PAUSED, AUDIO_PLAYING, AUDIO_PAUSED, TRACKS_LOADING, GET_TRACKS } from './types';\nimport axios from 'axios'; // get items action sent to reducer\n\nexport const getTracks = () => dispatch => {\n  dispatch(setTracksLoading(console.log('items are loading...')));\n  axios.get('/api/playlists').then(res => dispatch({\n    type: GET_TRACKS,\n    payload: res.data\n  }));\n}; // get single project\n// export const getSingleTrack = (id) => (dispatch) => {\n// \tdispatch(setItemsLoading());\n// \taxios\n// \t\t.get(`/data/playlist`)\n// \t\t.then((res) => dispatch({ type: GET_SINGLE_ITEM, payload: res.data }))\n// \t\t.catch((err) => console.error(\"Can't get item\", err));\n// };\n// // add new item sent to reducer\n// export const addItem = (item) => (dispatch) => {\n// \tdispatch(setItemsLoading(console.log('items are loading...')));\n// \taxios.post('/api/items', item).then((res) =>\n// \t\tdispatch({\n// \t\t\ttype: ADD_ITEM,\n// \t\t\tpayload: res.data\n// \t\t})\n// \t);\n// };\n// // delete item by id request sent to reducer\n// export const deleteItem = (id) => (dispatch) => {\n// \taxios.delete(`/api/items/${id}`).then((res) =>\n// \t\tdispatch({\n// \t\t\ttype: DELETE_ITEM,\n// \t\t\tpayload: id\n// \t\t})\n// \t);\n// };\n// loading items graphic sent to reducer\n\nexport const setTracksLoading = item => {\n  return {\n    type: TRACKS_LOADING\n  };\n}; // loading items graphic sent to reducer\n\nexport const setAudioPlaying = id => {\n  return {\n    type: SET_AUDIO_PLAYING,\n    payload: id\n  };\n}; // loading items graphic sent to reducer\n\nexport const setAudioPaused = () => {\n  return {\n    type: SET_AUDIO_PAUSED\n  };\n}; // get current player time\n\nexport const getSecondsToMinutesAndSeconds = time => {\n  if (time === 0) {\n    return '0 : 00';\n  }\n\n  const minutes = Math.floor(time / 60);\n  const seconds = time - minutes * 60;\n  return `${minutes} : 0${seconds}`;\n};","map":{"version":3,"sources":["/home/oscady/Documents/projects/outboard/client/src/actions/audioActions.js"],"names":["SET_AUDIO_PLAYING","SET_AUDIO_PAUSED","AUDIO_PLAYING","AUDIO_PAUSED","TRACKS_LOADING","GET_TRACKS","axios","getTracks","dispatch","setTracksLoading","console","log","get","then","res","type","payload","data","item","setAudioPlaying","id","setAudioPaused","getSecondsToMinutesAndSeconds","time","minutes","Math","floor","seconds"],"mappings":"AAAA,SAASA,iBAAT,EAA4BC,gBAA5B,EAA8CC,aAA9C,EAA6DC,YAA7D,EAA2EC,cAA3E,EAA2FC,UAA3F,QAA6G,SAA7G;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,OAAO,MAAMC,SAAS,GAAG,MAAOC,QAAD,IAAc;AAC5CA,EAAAA,QAAQ,CAACC,gBAAgB,CAACC,OAAO,CAACC,GAAR,CAAY,sBAAZ,CAAD,CAAjB,CAAR;AACAL,EAAAA,KAAK,CAACM,GAAN,CAAU,gBAAV,EAA4BC,IAA5B,CAAkCC,GAAD,IAChCN,QAAQ,CAAC;AACRO,IAAAA,IAAI,EAAEV,UADE;AAERW,IAAAA,OAAO,EAAEF,GAAG,CAACG;AAFL,GAAD,CADT;AAMA,CARM,C,CAUP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA,OAAO,MAAMR,gBAAgB,GAAIS,IAAD,IAAU;AACzC,SAAO;AACNH,IAAAA,IAAI,EAAEX;AADA,GAAP;AAGA,CAJM,C,CAMP;;AACA,OAAO,MAAMe,eAAe,GAAIC,EAAD,IAAQ;AACtC,SAAO;AACNL,IAAAA,IAAI,EAAEf,iBADA;AAENgB,IAAAA,OAAO,EAAEI;AAFH,GAAP;AAIA,CALM,C,CAOP;;AACA,OAAO,MAAMC,cAAc,GAAG,MAAM;AACnC,SAAO;AACNN,IAAAA,IAAI,EAAEd;AADA,GAAP;AAGA,CAJM,C,CAMP;;AACA,OAAO,MAAMqB,6BAA6B,GAAIC,IAAD,IAAU;AACtD,MAAIA,IAAI,KAAK,CAAb,EAAgB;AACf,WAAO,QAAP;AACA;;AACD,QAAMC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWH,IAAI,GAAG,EAAlB,CAAhB;AACA,QAAMI,OAAO,GAAGJ,IAAI,GAAGC,OAAO,GAAG,EAAjC;AACA,SAAQ,GAAEA,OAAQ,OAAMG,OAAQ,EAAhC;AACA,CAPM","sourcesContent":["import { SET_AUDIO_PLAYING, SET_AUDIO_PAUSED, AUDIO_PLAYING, AUDIO_PAUSED, TRACKS_LOADING, GET_TRACKS } from './types';\nimport axios from 'axios';\n\n// get items action sent to reducer\nexport const getTracks = () => (dispatch) => {\n\tdispatch(setTracksLoading(console.log('items are loading...')));\n\taxios.get('/api/playlists').then((res) =>\n\t\tdispatch({\n\t\t\ttype: GET_TRACKS,\n\t\t\tpayload: res.data\n\t\t})\n\t);\n};\n\n// get single project\n// export const getSingleTrack = (id) => (dispatch) => {\n// \tdispatch(setItemsLoading());\n// \taxios\n// \t\t.get(`/data/playlist`)\n// \t\t.then((res) => dispatch({ type: GET_SINGLE_ITEM, payload: res.data }))\n// \t\t.catch((err) => console.error(\"Can't get item\", err));\n// };\n\n// // add new item sent to reducer\n// export const addItem = (item) => (dispatch) => {\n// \tdispatch(setItemsLoading(console.log('items are loading...')));\n// \taxios.post('/api/items', item).then((res) =>\n// \t\tdispatch({\n// \t\t\ttype: ADD_ITEM,\n// \t\t\tpayload: res.data\n// \t\t})\n// \t);\n// };\n\n// // delete item by id request sent to reducer\n// export const deleteItem = (id) => (dispatch) => {\n// \taxios.delete(`/api/items/${id}`).then((res) =>\n// \t\tdispatch({\n// \t\t\ttype: DELETE_ITEM,\n// \t\t\tpayload: id\n// \t\t})\n// \t);\n// };\n\n// loading items graphic sent to reducer\nexport const setTracksLoading = (item) => {\n\treturn {\n\t\ttype: TRACKS_LOADING\n\t};\n};\n\n// loading items graphic sent to reducer\nexport const setAudioPlaying = (id) => {\n\treturn {\n\t\ttype: SET_AUDIO_PLAYING,\n\t\tpayload: id\n\t};\n};\n\n// loading items graphic sent to reducer\nexport const setAudioPaused = () => {\n\treturn {\n\t\ttype: SET_AUDIO_PAUSED\n\t};\n};\n\n// get current player time\nexport const getSecondsToMinutesAndSeconds = (time) => {\n\tif (time === 0) {\n\t\treturn '0 : 00';\n\t}\n\tconst minutes = Math.floor(time / 60);\n\tconst seconds = time - minutes * 60;\n\treturn `${minutes} : 0${seconds}`;\n};\n"]},"metadata":{},"sourceType":"module"}