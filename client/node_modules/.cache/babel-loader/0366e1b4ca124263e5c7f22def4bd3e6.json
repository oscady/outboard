{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/oscady/Documents/projects/outboard/client/src/pages/Music/TrackList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { TracklistContainer } from './TrackList.styled';\nimport { FaPlay, FaPause } from 'react-icons/fa';\nimport { setAudioPlaying, setAudioPaused, setCurrentTrack } from '../../actions/audioActions';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchPlaylist, PlaylistContext } from '../../data/playlist';\nimport styled from 'styled-components';\nimport { getTracks } from '../../actions/trackUploadActions';\nimport { getReleases } from '../../actions/releaseActions';\nconst Loading = styled.div`\n\tposition: absolute;\n\ttop: 50%;\n\tleft: 50%;\n\ttransform: translate(-50%, -50%);\n`;\n\nconst Tracklist = props => {\n  _s();\n\n  const [currentList, setCurrentList] = useState([]); // const handleFetchData = () => {\n  // \tprops.getReleases();\n  // \tconst tracks = props.release.releases;\n  // };\n  // send current track id to audio reducer\n\n  const handleChangeTrack = id => {\n    props.setCurrentTrack(id);\n    props.setAudioPlaying();\n  };\n\n  const handleNextTrack = () => {\n    if (props.currentTrack === currentList.length - 1) {\n      props.setCurrentTrack(0);\n      return;\n    }\n\n    props.setCurrentTrack(props.currentTrack + 1);\n  };\n\n  const handlePrevTrack = () => {\n    if (props.currentTrack === 0) {\n      props.setCurrentTrack(currentList.length - 1);\n      return;\n    }\n\n    props.setCurrentTrack(props.currentTrack - 1);\n  };\n\n  useEffect(() => {\n    setCurrentList(props.playlist.tracks);\n  }, [props.playlist]);\n  return /*#__PURE__*/_jsxDEV(PlaylistContext.Provider, {\n    children: /*#__PURE__*/_jsxDEV(TracklistContainer, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: props.playlist.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"feb 2020\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"featured tracks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: currentList ? currentList.map((track, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [track._id === props.currentTrack._id ? /*#__PURE__*/_jsxDEV(FaPause, {\n            onClick: () => props.setAudioPaused() && !props.playing\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 10\n          }, this) : /*#__PURE__*/_jsxDEV(FaPlay, {\n            onClick: () => handleChangeTrack(track._id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 10\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [track.artistName, \" - \", track.trackName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            children: \" BUY\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 9\n          }, this)]\n        }, track._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 8\n        }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \" cunt\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Tracklist, \"5sHMYDlCuu4EikkIE6h6grOLsXE=\");\n\n_c = Tracklist;\nTracklist.propTypes = {\n  setAudioPlaing: PropTypes.func,\n  setAudioPaused: PropTypes.func,\n  setCurrentTrack: PropTypes.func.isRequired,\n  track: PropTypes.object,\n  getReleases: PropTypes.func.isRequired,\n  release: PropTypes.object,\n  audio: PropTypes.object,\n  playing: PropTypes.bool,\n  currentTrack: PropTypes.array\n};\n\nconst mapStateToProps = state => ({\n  audio: state.audio,\n  playing: state.audio.playing,\n  track: state.track,\n  release: state.release,\n  currentTrack: state.audio.currentTrack\n});\n\nexport default connect(mapStateToProps, {\n  setAudioPlaying,\n  setAudioPaused,\n  getReleases,\n  getTracks,\n  setCurrentTrack\n})(Tracklist);\n\nvar _c;\n\n$RefreshReg$(_c, \"Tracklist\");","map":{"version":3,"sources":["/home/oscady/Documents/projects/outboard/client/src/pages/Music/TrackList.js"],"names":["React","useEffect","useState","TracklistContainer","FaPlay","FaPause","setAudioPlaying","setAudioPaused","setCurrentTrack","PropTypes","connect","fetchPlaylist","PlaylistContext","styled","getTracks","getReleases","Loading","div","Tracklist","props","currentList","setCurrentList","handleChangeTrack","id","handleNextTrack","currentTrack","length","handlePrevTrack","playlist","tracks","name","map","track","index","_id","playing","artistName","trackName","propTypes","setAudioPlaing","func","isRequired","object","release","audio","bool","array","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { TracklistContainer } from './TrackList.styled';\nimport { FaPlay, FaPause } from 'react-icons/fa';\nimport { setAudioPlaying, setAudioPaused, setCurrentTrack } from '../../actions/audioActions';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchPlaylist, PlaylistContext } from '../../data/playlist';\nimport styled from 'styled-components';\nimport { getTracks } from '../../actions/trackUploadActions';\nimport { getReleases } from '../../actions/releaseActions';\n\nconst Loading = styled.div`\n\tposition: absolute;\n\ttop: 50%;\n\tleft: 50%;\n\ttransform: translate(-50%, -50%);\n`;\n\nconst Tracklist = (props) => {\n\tconst [ currentList, setCurrentList ] = useState([]);\n\n\t// const handleFetchData = () => {\n\t// \tprops.getReleases();\n\t// \tconst tracks = props.release.releases;\n\t// };\n\n\t// send current track id to audio reducer\n\tconst handleChangeTrack = (id) => {\n\t\tprops.setCurrentTrack(id);\n\t\tprops.setAudioPlaying();\n\t};\n\n\tconst handleNextTrack = () => {\n\t\tif (props.currentTrack === currentList.length - 1) {\n\t\t\tprops.setCurrentTrack(0);\n\t\t\treturn;\n\t\t}\n\t\tprops.setCurrentTrack(props.currentTrack + 1);\n\t};\n\n\tconst handlePrevTrack = () => {\n\t\tif (props.currentTrack === 0) {\n\t\t\tprops.setCurrentTrack(currentList.length - 1);\n\t\t\treturn;\n\t\t}\n\t\tprops.setCurrentTrack(props.currentTrack - 1);\n\t};\n\n\tuseEffect(\n\t\t() => {\n\t\t\tsetCurrentList(props.playlist.tracks);\n\t\t},\n\t\t[ props.playlist ]\n\t);\n\n\treturn (\n\t\t<PlaylistContext.Provider>\n\t\t\t<TracklistContainer>\n\t\t\t\t<h1>{props.playlist.name}</h1>\n\t\t\t\t<h2>feb 2020</h2>\n\t\t\t\t<h3>featured tracks</h3>\n\t\t\t\t<ul>\n\t\t\t\t\t{currentList ? (\n\t\t\t\t\t\tcurrentList.map((track, index) => (\n\t\t\t\t\t\t\t<li key={track._id}>\n\t\t\t\t\t\t\t\t{track._id === props.currentTrack._id ? (\n\t\t\t\t\t\t\t\t\t<FaPause onClick={() => props.setAudioPaused() && !props.playing} />\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<FaPlay onClick={() => handleChangeTrack(track._id)} />\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t{track.artistName} - {track.trackName}\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t<a> BUY</a>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t))\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<div> cunt</div>\n\t\t\t\t\t)}\n\t\t\t\t</ul>\n\t\t\t</TracklistContainer>\n\t\t</PlaylistContext.Provider>\n\t);\n};\n\nTracklist.propTypes = {\n\tsetAudioPlaing: PropTypes.func,\n\tsetAudioPaused: PropTypes.func,\n\tsetCurrentTrack: PropTypes.func.isRequired,\n\ttrack: PropTypes.object,\n\tgetReleases: PropTypes.func.isRequired,\n\trelease: PropTypes.object,\n\taudio: PropTypes.object,\n\tplaying: PropTypes.bool,\n\tcurrentTrack: PropTypes.array\n};\n\nconst mapStateToProps = (state) => ({\n\taudio: state.audio,\n\tplaying: state.audio.playing,\n\ttrack: state.track,\n\trelease: state.release,\n\tcurrentTrack: state.audio.currentTrack\n});\n\nexport default connect(mapStateToProps, { setAudioPlaying, setAudioPaused, getReleases, getTracks, setCurrentTrack })(\n\tTracklist\n);\n"]},"metadata":{},"sourceType":"module"}