{"ast":null,"code":"import { SET_AUDIO_PLAYING, SET_AUDIO_PAUSED, AUDIO_PLAYING, AUDIO_PAUSED, TRACKS_LOADING, TRACKS_LOADED, GET_PLAYLIST, NEXT_TRACK, PREV_TRACK, SET_CURRENT_TRACK, SET_CURRENT_TRACK_MOMENT, SET_CURRENT_TRACK_DURATION, SET_PLAYLIST_LOADING, SET_PLAYLIST_LOADED } from './types';\nimport axios from 'axios'; // get items action sent to reducer\n\nexport const getPlaylist = id => async dispatch => {\n  dispatch(setPlaylistLoading(console.log('playlist is loading...')));\n  await axios.get(`/api/release/${id}`).then(res => dispatch({\n    type: GET_PLAYLIST,\n    payload: res.data\n  })).catch(err => console.error(\"Can't get playlist\", err));\n}; // set current track duration\n\nexport const setCurrentTrackDuration = duration => dispatch => {\n  dispatch({\n    type: SET_CURRENT_TRACK_DURATION,\n    payload: duration\n  });\n}; // set time elapsed on current track\n\nexport const setCurrentTrackMoment = elapsed => dispatch => {\n  dispatch({\n    type: SET_CURRENT_TRACK_MOMENT,\n    payload: elapsed\n  });\n}; //get curren track\n\nexport const setCurrentTrack = id => async dispatch => {\n  dispatch(setTracksLoading());\n  await axios.get(`/api/tracks/${id}`).then(res => dispatch({\n    type: SET_CURRENT_TRACK,\n    payload: res.data\n  })).catch(err => console.error(\"Can't get current track - \", err));\n  setTracksLoaded();\n}; // get single project\n// export const getSingleTrack = (id) => (dispatch) => {\n// \tdispatch(setItemsLoading());\n// \taxios\n// \t\t.get(`/data/playlist`)\n// \t\t.then((res) => dispatch({ type: GET_SINGLE_ITEM, payload: res.data }))\n// \t\t.catch((err) => console.error(\"Can't get item\", err));\n// };\n// // add new item sent to reducer\n// export const addItem = (item) => (dispatch) => {\n// \tdispatch(setItemsLoading(console.log('items are loading...')));\n// \taxios.post('/api/items', item).then((res) =>\n// \t\tdispatch({\n// \t\t\ttype: ADD_ITEM,\n// \t\t\tpayload: res.data\n// \t\t})\n// \t);\n// };\n// // delete item by id request sent to reducer\n// export const deleteItem = (id) => (dispatch) => {\n// \taxios.delete(`/api/items/${id}`).then((res) =>\n// \t\tdispatch({\n// \t\t\ttype: DELETE_ITEM,\n// \t\t\tpayload: id\n// \t\t})\n// \t);\n// };\n// loading items graphic sent to reducer\n\nexport const setPlaylistLoading = () => {\n  return {\n    type: SET_PLAYLIST_LOADING\n  };\n}; // loading items graphic sent to reducer\n\nexport const setPlaylistLoaded = () => {\n  return {\n    type: SET_PLAYLIST_LOADED\n  };\n}; // loading items graphic sent to reducer\n\nexport const setAudioPlaying = () => {\n  return {\n    type: SET_AUDIO_PLAYING\n  };\n}; // loading items graphic sent to reducer\n\nexport const setAudioPaused = () => {\n  return {\n    type: SET_AUDIO_PAUSED\n  };\n}; // loading images graphic sent to reducer\n\nexport const setTracksLoading = () => {\n  return {\n    type: TRACKS_LOADING\n  };\n}; // loading images graphic sent to reducer\n\nexport const setTracksLoaded = () => {\n  return {\n    type: TRACKS_LOADED\n  };\n};","map":{"version":3,"sources":["/home/oscady/Documents/projects/outboard/client/src/actions/audioActions.js"],"names":["SET_AUDIO_PLAYING","SET_AUDIO_PAUSED","AUDIO_PLAYING","AUDIO_PAUSED","TRACKS_LOADING","TRACKS_LOADED","GET_PLAYLIST","NEXT_TRACK","PREV_TRACK","SET_CURRENT_TRACK","SET_CURRENT_TRACK_MOMENT","SET_CURRENT_TRACK_DURATION","SET_PLAYLIST_LOADING","SET_PLAYLIST_LOADED","axios","getPlaylist","id","dispatch","setPlaylistLoading","console","log","get","then","res","type","payload","data","catch","err","error","setCurrentTrackDuration","duration","setCurrentTrackMoment","elapsed","setCurrentTrack","setTracksLoading","setTracksLoaded","setPlaylistLoaded","setAudioPlaying","setAudioPaused"],"mappings":"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","sourcesContent":["import {\n\tSET_AUDIO_PLAYING,\n\tSET_AUDIO_PAUSED,\n\tAUDIO_PLAYING,\n\tAUDIO_PAUSED,\n\tTRACKS_LOADING,\n\tTRACKS_LOADED,\n\tGET_PLAYLIST,\n\tNEXT_TRACK,\n\tPREV_TRACK,\n\tSET_CURRENT_TRACK,\n\tSET_CURRENT_TRACK_MOMENT,\n\tSET_CURRENT_TRACK_DURATION,\n\tSET_PLAYLIST_LOADING,\n\tSET_PLAYLIST_LOADED\n} from './types';\nimport axios from 'axios';\n\n// get items action sent to reducer\nexport const getPlaylist = (id) => async (dispatch) => {\n\tdispatch(setPlaylistLoading(console.log('playlist is loading...')));\n\tawait axios\n\t\t.get(`/api/release/${id}`)\n\t\t.then((res) =>\n\t\t\tdispatch({\n\t\t\t\ttype: GET_PLAYLIST,\n\t\t\t\tpayload: res.data\n\t\t\t})\n\t\t)\n\t\t.catch((err) => console.error(\"Can't get playlist\", err));\n};\n\n// set current track duration\nexport const setCurrentTrackDuration = (duration) => (dispatch) => {\n\tdispatch({\n\t\ttype: SET_CURRENT_TRACK_DURATION,\n\t\tpayload: duration\n\t});\n};\n\n// set time elapsed on current track\nexport const setCurrentTrackMoment = (elapsed) => (dispatch) => {\n\tdispatch({\n\t\ttype: SET_CURRENT_TRACK_MOMENT,\n\t\tpayload: elapsed\n\t});\n};\n\n//get curren track\nexport const setCurrentTrack = (id) => async (dispatch) => {\n\tdispatch(setTracksLoading());\n\tawait axios\n\t\t.get(`/api/tracks/${id}`)\n\t\t.then((res) =>\n\t\t\tdispatch({\n\t\t\t\ttype: SET_CURRENT_TRACK,\n\t\t\t\tpayload: res.data\n\t\t\t})\n\t\t)\n\t\t.catch((err) => console.error(\"Can't get current track - \", err));\n\tsetTracksLoaded();\n};\n\n// get single project\n// export const getSingleTrack = (id) => (dispatch) => {\n// \tdispatch(setItemsLoading());\n// \taxios\n// \t\t.get(`/data/playlist`)\n// \t\t.then((res) => dispatch({ type: GET_SINGLE_ITEM, payload: res.data }))\n// \t\t.catch((err) => console.error(\"Can't get item\", err));\n// };\n\n// // add new item sent to reducer\n// export const addItem = (item) => (dispatch) => {\n// \tdispatch(setItemsLoading(console.log('items are loading...')));\n// \taxios.post('/api/items', item).then((res) =>\n// \t\tdispatch({\n// \t\t\ttype: ADD_ITEM,\n// \t\t\tpayload: res.data\n// \t\t})\n// \t);\n// };\n\n// // delete item by id request sent to reducer\n// export const deleteItem = (id) => (dispatch) => {\n// \taxios.delete(`/api/items/${id}`).then((res) =>\n// \t\tdispatch({\n// \t\t\ttype: DELETE_ITEM,\n// \t\t\tpayload: id\n// \t\t})\n// \t);\n// };\n\n// loading items graphic sent to reducer\nexport const setPlaylistLoading = () => {\n\treturn {\n\t\ttype: SET_PLAYLIST_LOADING\n\t};\n};\n\n// loading items graphic sent to reducer\nexport const setPlaylistLoaded = () => {\n\treturn {\n\t\ttype: SET_PLAYLIST_LOADED\n\t};\n};\n\n// loading items graphic sent to reducer\nexport const setAudioPlaying = () => {\n\treturn {\n\t\ttype: SET_AUDIO_PLAYING\n\t};\n};\n\n// loading items graphic sent to reducer\nexport const setAudioPaused = () => {\n\treturn {\n\t\ttype: SET_AUDIO_PAUSED\n\t};\n};\n\n// loading images graphic sent to reducer\nexport const setTracksLoading = () => {\n\treturn {\n\t\ttype: TRACKS_LOADING\n\t};\n};\n\n// loading images graphic sent to reducer\nexport const setTracksLoaded = () => {\n\treturn {\n\t\ttype: TRACKS_LOADED\n\t};\n};\n"]},"metadata":{},"sourceType":"module"}