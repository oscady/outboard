{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/oscady/Documents/projects/outboard/client/src/components/Player/ProgressBar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { motion, AnimatePresence, useSpring, useMotionValue, animate } from 'framer-motion';\nconst Container = styled.div`\n\tposition: relative;\n\theight: 100%;\n\twidth: 100%;\n\tbackground-color: black;\n\tborder-radius: 5px;\n\tz-index: 100;\n\n\th3 {\n\t\tposition: relative;\n\t\tcolor: white;\n\t\twidth: fit-content;\n\t\twhite-space: nowrap;\n\t\tleft: 100px;\n\t}\n`;\n_c = Container;\nconst Point = styled(motion.div)`\n\t\tposition: absolute;\n\t\tleft: ${props => props.progressPercent};\n\t\ttop: 50%;\n\t\ttransform: translate(-50%, -50%);\n\t\tbottom: 10px;\n\t\theight: 100%;\n\t\twidth: 8px;\n\t\tbackground-color: black;\n\t\tborder-radius: 50%;\n\t`;\nconst Progress = styled(motion.div)`\n\t\tposition: absolute;\n\t\tleft: 0;\n\t\ttop: 0;\n\t\tbottom: 10px;\n\t\theight: inherit;\n\t\tbackground-color: whitesmoke;\n\t\toverflow:hidden;\n\t\tz-index: 101;\n\n\t\th3 {\n\t\t\tposition: relative;\n\t\t\twidth: fit-content;\n\t\t\twhite-space:nowrap;\n\t\t\tleft: 100px;\n\t\t\tcolor: black;\n\t\t}\n\t`;\n_c2 = Progress;\nexport function ProgressBar(props) {\n  _s();\n\n  const [progressValue, setProgressValue] = useState(0);\n  useEffect(() => {\n    setProgressValue(props.duration);\n  }, [props.duration]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [console.log((props.duration / 1000 * props.currentTrackMoment).toFixed(2)), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"TRANSIENT BEING - TRACK 4 (DUB MIX)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(AnimatePresence, {\n      children: /*#__PURE__*/_jsxDEV(Progress, {\n        progressPercent: props.progressPercent,\n        initial: {\n          width: '0%'\n        },\n        animate: {\n          width: props.currentTrackMoment / 100 * props.duration.toFixed(1) + '%'\n        },\n        exit: {\n          width: '0%'\n        },\n        transition: {\n          stiffness: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"TRANSIENT BEING - TRACK 4 (DUB MIX)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 3\n  }, this);\n}\n\n_s(ProgressBar, \"w/59kiQcd2loNjkPmN4ZTWEhqXU=\");\n\n_c3 = ProgressBar;\nProgressBar.propTypes = {\n  progressPercent: PropTypes.string,\n  duration: PropTypes.number.isRequired,\n  width: PropTypes.string\n};\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Progress\");\n$RefreshReg$(_c3, \"ProgressBar\");","map":{"version":3,"sources":["/home/oscady/Documents/projects/outboard/client/src/components/Player/ProgressBar.js"],"names":["React","useState","useEffect","PropTypes","styled","motion","AnimatePresence","useSpring","useMotionValue","animate","Container","div","Point","props","progressPercent","Progress","ProgressBar","progressValue","setProgressValue","duration","console","log","currentTrackMoment","toFixed","width","stiffness","propTypes","string","number","isRequired"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,MAAT,EAAiBC,eAAjB,EAAkCC,SAAlC,EAA6CC,cAA7C,EAA6DC,OAA7D,QAA4E,eAA5E;AAEA,MAAMC,SAAS,GAAGN,MAAM,CAACO,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAfA;KAAMD,S;AAiBN,MAAME,KAAK,GAAGR,MAAM,CAACC,MAAM,CAACM,GAAR,CAAa;AACjC;AACA,UAAWE,KAAD,IAAWA,KAAK,CAACC,eAAgB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAVA;AAWA,MAAMC,QAAQ,GAAGX,MAAM,CAACC,MAAM,CAACM,GAAR,CAAa;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAjBA;MAAMI,Q;AAmBN,OAAO,SAASC,WAAT,CAAqBH,KAArB,EAA4B;AAAA;;AAClC,QAAM,CAAEI,aAAF,EAAiBC,gBAAjB,IAAsCjB,QAAQ,CAAC,CAAD,CAApD;AAEAC,EAAAA,SAAS,CACR,MAAM;AACLgB,IAAAA,gBAAgB,CAACL,KAAK,CAACM,QAAP,CAAhB;AACA,GAHO,EAIR,CAAEN,KAAK,CAACM,QAAR,CAJQ,CAAT;AAMA,sBACC,QAAC,SAAD;AAAA,eACEC,OAAO,CAACC,GAAR,CAAY,CAACR,KAAK,CAACM,QAAN,GAAiB,IAAjB,GAAwBN,KAAK,CAACS,kBAA/B,EAAmDC,OAAnD,CAA2D,CAA3D,CAAZ,CADF,eAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFD,eAGC,QAAC,eAAD;AAAA,6BACC,QAAC,QAAD;AACC,QAAA,eAAe,EAAEV,KAAK,CAACC,eADxB;AAEC,QAAA,OAAO,EAAE;AAAEU,UAAAA,KAAK,EAAE;AAAT,SAFV;AAGC,QAAA,OAAO,EAAE;AAAEA,UAAAA,KAAK,EAAEX,KAAK,CAACS,kBAAN,GAA2B,GAA3B,GAAiCT,KAAK,CAACM,QAAN,CAAeI,OAAf,CAAuB,CAAvB,CAAjC,GAA6D;AAAtE,SAHV;AAIC,QAAA,IAAI,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT,SAJP;AAKC,QAAA,UAAU,EAAE;AAAEC,UAAAA,SAAS,EAAE;AAAb,SALb;AAAA,+BAMC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAND;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YAHD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAgBA;;GAzBeT,W;;MAAAA,W;AA2BhBA,WAAW,CAACU,SAAZ,GAAwB;AACvBZ,EAAAA,eAAe,EAAEX,SAAS,CAACwB,MADJ;AAEvBR,EAAAA,QAAQ,EAAEhB,SAAS,CAACyB,MAAV,CAAiBC,UAFJ;AAGvBL,EAAAA,KAAK,EAAErB,SAAS,CAACwB;AAHM,CAAxB","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { motion, AnimatePresence, useSpring, useMotionValue, animate } from 'framer-motion';\n\nconst Container = styled.div`\n\tposition: relative;\n\theight: 100%;\n\twidth: 100%;\n\tbackground-color: black;\n\tborder-radius: 5px;\n\tz-index: 100;\n\n\th3 {\n\t\tposition: relative;\n\t\tcolor: white;\n\t\twidth: fit-content;\n\t\twhite-space: nowrap;\n\t\tleft: 100px;\n\t}\n`;\n\nconst Point = styled(motion.div)`\n\t\tposition: absolute;\n\t\tleft: ${(props) => props.progressPercent};\n\t\ttop: 50%;\n\t\ttransform: translate(-50%, -50%);\n\t\tbottom: 10px;\n\t\theight: 100%;\n\t\twidth: 8px;\n\t\tbackground-color: black;\n\t\tborder-radius: 50%;\n\t`;\nconst Progress = styled(motion.div)`\n\t\tposition: absolute;\n\t\tleft: 0;\n\t\ttop: 0;\n\t\tbottom: 10px;\n\t\theight: inherit;\n\t\tbackground-color: whitesmoke;\n\t\toverflow:hidden;\n\t\tz-index: 101;\n\n\t\th3 {\n\t\t\tposition: relative;\n\t\t\twidth: fit-content;\n\t\t\twhite-space:nowrap;\n\t\t\tleft: 100px;\n\t\t\tcolor: black;\n\t\t}\n\t`;\n\nexport function ProgressBar(props) {\n\tconst [ progressValue, setProgressValue ] = useState(0);\n\n\tuseEffect(\n\t\t() => {\n\t\t\tsetProgressValue(props.duration);\n\t\t},\n\t\t[ props.duration ]\n\t);\n\treturn (\n\t\t<Container>\n\t\t\t{console.log((props.duration / 1000 * props.currentTrackMoment).toFixed(2))}\n\t\t\t<h3>TRANSIENT BEING - TRACK 4 (DUB MIX)</h3>\n\t\t\t<AnimatePresence>\n\t\t\t\t<Progress\n\t\t\t\t\tprogressPercent={props.progressPercent}\n\t\t\t\t\tinitial={{ width: '0%' }}\n\t\t\t\t\tanimate={{ width: props.currentTrackMoment / 100 * props.duration.toFixed(1) + '%' }}\n\t\t\t\t\texit={{ width: '0%' }}\n\t\t\t\t\ttransition={{ stiffness: 1 }}>\n\t\t\t\t\t<h3>TRANSIENT BEING - TRACK 4 (DUB MIX)</h3>\n\t\t\t\t</Progress>\n\t\t\t</AnimatePresence>\n\t\t</Container>\n\t);\n}\n\nProgressBar.propTypes = {\n\tprogressPercent: PropTypes.string,\n\tduration: PropTypes.number.isRequired,\n\twidth: PropTypes.string\n};\n"]},"metadata":{},"sourceType":"module"}