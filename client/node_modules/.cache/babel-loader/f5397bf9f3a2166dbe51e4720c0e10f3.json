{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/oscady/Documents/projects/outboard/client/src/pages/Music/SingleMusicItemContainer.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { SingleMusicContainerStyled } from './SingleMusicItem.styled';\nimport Tracklist from './TrackList';\nimport { Container } from './SingleMusicItem.styled';\nimport PropTypes from 'prop-types';\nimport { withRouter, useParams } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { setReleasePlaylist, getReleases } from '../../actions/releaseActions'; // const variants = {\n// \topen: {\n// \t\topacity: 1,\n// \t\tx: 0,\n// \t\ttransition: {\n// \t\t\ttype: 'tween',\n// \t\t\tstiffness: 0,\n// \t\t\trestDelta: 10,\n// \t\t\tmass: 0.5\n// \t\t}\n// \t},\n// \tclosed: {\n// \t\topacity: 0,\n// \t\tx: '100%',\n// \t\ttransition: {\n// \t\t\tx: { type: 'spring', stiffness: 100 },\n// \t\t\tdamping: 10,\n// \t\t\tmass: 0.1,\n// \t\t\twhen: 'beforeChildren'\n// \t\t}\n// \t}\n// };\n\nconst SingleMusicItemContainer = props => {\n  _s();\n\n  const [open, setOpen] = useState(false);\n  const [currentPlaylist, setCurrentPlaylist] = useState([]);\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    props.getReleases();\n    props.setReleasePlaylist(id);\n  }, [id]);\n  useEffect(() => {\n    setCurrentPlaylist(props.release.playlist);\n    console.log(currentPlaylist);\n  }, [props.release.playlist]);\n  return /*#__PURE__*/_jsxDEV(SingleMusicContainerStyled, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      onClick: () => setOpen(false),\n      children: \"back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 4\n    }, this), currentPlaylist ? /*#__PURE__*/_jsxDEV(Container, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 3\n  }, this);\n};\n\n_s(SingleMusicItemContainer, \"fhgVWxXI+mzz1lgwdr+vqdcCb3Y=\", false, function () {\n  return [useParams];\n});\n\n_c = SingleMusicItemContainer;\nSingleMusicItemContainer.propTypes = {\n  setReleasePlaylist: PropTypes.func.isRequired,\n  getReleases: PropTypes.func.isRequired,\n  release: PropTypes.object\n};\n\nconst mapStateToProps = state => ({\n  release: state.release\n});\n\nexport default withRouter(connect(mapStateToProps, {\n  getReleases,\n  setReleasePlaylist\n})(SingleMusicItemContainer));\n\nvar _c;\n\n$RefreshReg$(_c, \"SingleMusicItemContainer\");","map":{"version":3,"sources":["/home/oscady/Documents/projects/outboard/client/src/pages/Music/SingleMusicItemContainer.js"],"names":["useState","useEffect","SingleMusicContainerStyled","Tracklist","Container","PropTypes","withRouter","useParams","connect","setReleasePlaylist","getReleases","SingleMusicItemContainer","props","open","setOpen","currentPlaylist","setCurrentPlaylist","id","release","playlist","console","log","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,0BAAT,QAA2C,0BAA3C;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,SAAT,QAA0B,0BAA1B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,kBAAtC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,EAA6BC,WAA7B,QAAgD,8BAAhD,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,wBAAwB,GAAIC,KAAD,IAAW;AAAA;;AAC3C,QAAM,CAAEC,IAAF,EAAQC,OAAR,IAAoBd,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAAEe,eAAF,EAAmBC,kBAAnB,IAA0ChB,QAAQ,CAAC,EAAD,CAAxD;AAEA,QAAM;AAAEiB,IAAAA;AAAF,MAASV,SAAS,EAAxB;AAEAN,EAAAA,SAAS,CACR,MAAM;AACLW,IAAAA,KAAK,CAACF,WAAN;AACAE,IAAAA,KAAK,CAACH,kBAAN,CAAyBQ,EAAzB;AACA,GAJO,EAKR,CAAEA,EAAF,CALQ,CAAT;AAQAhB,EAAAA,SAAS,CACR,MAAM;AACLe,IAAAA,kBAAkB,CAACJ,KAAK,CAACM,OAAN,CAAcC,QAAf,CAAlB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYN,eAAZ;AACA,GAJO,EAKR,CAAEH,KAAK,CAACM,OAAN,CAAcC,QAAhB,CALQ,CAAT;AAOA,sBACC,QAAC,0BAAD;AAAA,4BACC;AAAI,MAAA,OAAO,EAAE,MAAML,OAAO,CAAC,KAAD,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,EAGEC,eAAe,gBACf,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YADe,gBAMf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAcA,CAnCD;;GAAMJ,wB;UAIUJ,S;;;KAJVI,wB;AAqCNA,wBAAwB,CAACW,SAAzB,GAAqC;AACpCb,EAAAA,kBAAkB,EAAEJ,SAAS,CAACkB,IAAV,CAAeC,UADC;AAEpCd,EAAAA,WAAW,EAAEL,SAAS,CAACkB,IAAV,CAAeC,UAFQ;AAIpCN,EAAAA,OAAO,EAAEb,SAAS,CAACoB;AAJiB,CAArC;;AAOA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAAET,EAAAA,OAAO,EAAES,KAAK,CAACT;AAAjB,CAAZ,CAAxB;;AAEA,eAAeZ,UAAU,CAACE,OAAO,CAACkB,eAAD,EAAkB;AAAEhB,EAAAA,WAAF;AAAeD,EAAAA;AAAf,CAAlB,CAAP,CAA8DE,wBAA9D,CAAD,CAAzB","sourcesContent":["import { useState, useEffect } from 'react';\nimport { SingleMusicContainerStyled } from './SingleMusicItem.styled';\nimport Tracklist from './TrackList';\nimport { Container } from './SingleMusicItem.styled';\nimport PropTypes from 'prop-types';\nimport { withRouter, useParams } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { setReleasePlaylist, getReleases } from '../../actions/releaseActions';\n\n// const variants = {\n// \topen: {\n// \t\topacity: 1,\n// \t\tx: 0,\n// \t\ttransition: {\n// \t\t\ttype: 'tween',\n// \t\t\tstiffness: 0,\n// \t\t\trestDelta: 10,\n// \t\t\tmass: 0.5\n// \t\t}\n// \t},\n// \tclosed: {\n// \t\topacity: 0,\n// \t\tx: '100%',\n// \t\ttransition: {\n// \t\t\tx: { type: 'spring', stiffness: 100 },\n// \t\t\tdamping: 10,\n// \t\t\tmass: 0.1,\n// \t\t\twhen: 'beforeChildren'\n// \t\t}\n// \t}\n// };\n\nconst SingleMusicItemContainer = (props) => {\n\tconst [ open, setOpen ] = useState(false);\n\tconst [ currentPlaylist, setCurrentPlaylist ] = useState([]);\n\n\tconst { id } = useParams();\n\n\tuseEffect(\n\t\t() => {\n\t\t\tprops.getReleases();\n\t\t\tprops.setReleasePlaylist(id);\n\t\t},\n\t\t[ id ]\n\t);\n\n\tuseEffect(\n\t\t() => {\n\t\t\tsetCurrentPlaylist(props.release.playlist);\n\t\t\tconsole.log(currentPlaylist);\n\t\t},\n\t\t[ props.release.playlist ]\n\t);\n\treturn (\n\t\t<SingleMusicContainerStyled>\n\t\t\t<h3 onClick={() => setOpen(false)}>back</h3>\n\n\t\t\t{currentPlaylist ? (\n\t\t\t\t<Container>\n\t\t\t\t\t{/* <img src={currentPlaylist.artwork} /> */}\n\t\t\t\t\t{/* <Tracklist playlist={currentPlaylist} /> */}\n\t\t\t\t</Container>\n\t\t\t) : (\n\t\t\t\t<div>loading...</div>\n\t\t\t)}\n\t\t</SingleMusicContainerStyled>\n\t);\n};\n\nSingleMusicItemContainer.propTypes = {\n\tsetReleasePlaylist: PropTypes.func.isRequired,\n\tgetReleases: PropTypes.func.isRequired,\n\n\trelease: PropTypes.object\n};\n\nconst mapStateToProps = (state) => ({ release: state.release });\n\nexport default withRouter(connect(mapStateToProps, { getReleases, setReleasePlaylist })(SingleMusicItemContainer));\n"]},"metadata":{},"sourceType":"module"}