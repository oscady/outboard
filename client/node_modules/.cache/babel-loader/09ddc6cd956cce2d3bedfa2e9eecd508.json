{"ast":null,"code":"import { GET_TRACKS, ADD_TRACK, TRACKS_LOADING } from '../actions/types';\nconst initialState = {\n  tracks: [],\n  loading: false\n}; // export tracks in current state + changes\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_TRACKS:\n      return { ...state,\n        // return state of tracks\n        tracks: action.payload,\n        loading: false\n      };\n\n    case ADD_TRACK:\n      return { ...state,\n        tracks: [action.payload, ...state.tracks] // copy state and return with new image\n\n      };\n\n    case TRACKS_LOADING:\n      return { ...state,\n        loading: true\n      };\n\n    case TRACKS_LOADING:\n      return { ...state,\n        loading: false\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/oscady/Documents/projects/outboard/client/src/reducers/videoUploadReducer.js"],"names":["GET_TRACKS","ADD_TRACK","TRACKS_LOADING","initialState","tracks","loading","state","action","type","payload"],"mappings":"AAAA,SACEA,UADF,EACcC,SADd,EACyBC,cADzB,QAEO,kBAFP;AAIA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE,EADW;AAEnBC,EAAAA,OAAO,EAAE;AAFU,CAArB,C,CAIA;;AACA,eAAe,UAAUC,KAAK,GAAGH,YAAlB,EAAgCI,MAAhC,EAAwC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,UAAL;AACE,aAAO,EACL,GAAGM,KADE;AACK;AACVF,QAAAA,MAAM,EAAEG,MAAM,CAACE,OAFV;AAGLJ,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKA,SAAKJ,SAAL;AACA,aAAO,EACL,GAAGK,KADE;AAELF,QAAAA,MAAM,EAAE,CACNG,MAAM,CAACE,OADD,EACU,GAAGH,KAAK,CAACF,MADnB,CAFH,CAIH;;AAJG,OAAP;;AAMF,SAAKF,cAAL;AACE,aAAO,EACL,GAAGI,KADE;AAELD,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAIA,SAAKH,cAAL;AACA,aAAO,EACL,GAAGI,KADE;AAELD,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAIF;AACE,aAAOC,KAAP;AAzBJ;AA2BD","sourcesContent":["import {\n  GET_TRACKS, ADD_TRACK, TRACKS_LOADING\n} from '../actions/types';\n\nconst initialState = {\n  tracks: [],\n  loading: false\n}\n// export tracks in current state + changes\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_TRACKS:\n      return {\n        ...state, // return state of tracks\n        tracks: action.payload,\n        loading: false\n      };\n      case ADD_TRACK:\n      return {\n        ...state,\n        tracks: [\n          action.payload, ...state.tracks\n        ] // copy state and return with new image\n      };\n    case TRACKS_LOADING:\n      return {\n        ...state,\n        loading: true\n      };\n      case TRACKS_LOADING:\n      return {\n        ...state,\n        loading: false\n      }\n    default:\n      return state;\n  }\n}"]},"metadata":{},"sourceType":"module"}