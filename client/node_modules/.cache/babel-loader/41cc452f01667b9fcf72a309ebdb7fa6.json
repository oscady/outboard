{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/oscady/Documents/projects/outboard/client/src/pages/Music/SingleMusicItemContainer.js\",\n    _s2 = $RefreshSig$();\n\nimport { motion } from 'framer-motion';\nimport { Fragment, useState, lazy, Suspense, useEffect, useParams } from 'react';\nimport { SingleMusicContainerStyled } from './SingleMusicItem.styled';\nimport Tracklist from './TrackList';\nimport { Container } from './SingleMusicItem.styled';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { setReleasePlaylist } from '../../actions/releaseActions';\n\nconst renderLoader = () => /*#__PURE__*/_jsxDEV(\"p\", {\n  children: \"Loading\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 10,\n  columnNumber: 28\n}, this);\n\nconst variants = {\n  open: {\n    opacity: 1,\n    x: 0,\n    transition: {\n      type: 'tween',\n      stiffness: 0,\n      restDelta: 10,\n      mass: 0.5\n    }\n  },\n  closed: {\n    opacity: 0,\n    x: '100%',\n    transition: {\n      x: {\n        type: 'spring',\n        stiffness: 100\n      },\n      damping: 10,\n      mass: 0.1,\n      when: 'beforeChildren'\n    }\n  }\n};\n\nconst SingleMusicItemContainer = props => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [open, setOpen] = useState(false);\n  useEffect(_s(() => {\n    _s();\n\n    const id = useParams();\n    setReleasePlaylist(id);\n  }, \"+StTTESSSlSWBPwO6YZsFGRl1GQ=\", false, function () {\n    return [useParams];\n  }), []);\n  return /*#__PURE__*/_jsxDEV(SingleMusicContainerStyled, {\n    children: /*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: renderLoader(),\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        onClick: setOpen(false),\n        children: \"back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        animate: {\n          opacity: 1\n        },\n        children: [currentPlaylist ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: currentPlaylist.artwork\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this) : null, /*#__PURE__*/_jsxDEV(Tracklist, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 3\n  }, this);\n};\n\n_s2(SingleMusicItemContainer, \"RqlulxUcPXIIcjWCCrMR96E2LGU=\");\n\n_c = SingleMusicItemContainer;\nSingleMusicItemContainer.propTypes = {\n  getPlaylist: PropTypes.func.isRequired,\n  playlist: PropTypes.object\n};\n\nconst mapStateToProps = state => ({\n  release: state.release\n});\n\nexport default connect(mapStateToProps, {\n  getReleases,\n  setReleasePlaylist\n})(SingleMusicItemContainer);\n\nvar _c;\n\n$RefreshReg$(_c, \"SingleMusicItemContainer\");","map":{"version":3,"sources":["/home/oscady/Documents/projects/outboard/client/src/pages/Music/SingleMusicItemContainer.js"],"names":["motion","Fragment","useState","lazy","Suspense","useEffect","useParams","SingleMusicContainerStyled","Tracklist","Container","PropTypes","connect","setReleasePlaylist","renderLoader","variants","open","opacity","x","transition","type","stiffness","restDelta","mass","closed","damping","when","SingleMusicItemContainer","props","setOpen","id","currentPlaylist","artwork","propTypes","getPlaylist","func","isRequired","playlist","object","mapStateToProps","state","release","getReleases"],"mappings":";;;;;AAAA,SAASA,MAAT,QAAuB,eAAvB;AACA,SAASC,QAAT,EAAmBC,QAAnB,EAA6BC,IAA7B,EAAmCC,QAAnC,EAA6CC,SAA7C,EAAwDC,SAAxD,QAAyE,OAAzE;AACA,SAASC,0BAAT,QAA2C,0BAA3C;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,SAAT,QAA0B,0BAA1B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,8BAAnC;;AAEA,MAAMC,YAAY,GAAG,mBAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA3B;;AAEA,MAAMC,QAAQ,GAAG;AAChBC,EAAAA,IAAI,EAAE;AACLC,IAAAA,OAAO,EAAE,CADJ;AAELC,IAAAA,CAAC,EAAE,CAFE;AAGLC,IAAAA,UAAU,EAAE;AACXC,MAAAA,IAAI,EAAE,OADK;AAEXC,MAAAA,SAAS,EAAE,CAFA;AAGXC,MAAAA,SAAS,EAAE,EAHA;AAIXC,MAAAA,IAAI,EAAE;AAJK;AAHP,GADU;AAWhBC,EAAAA,MAAM,EAAE;AACPP,IAAAA,OAAO,EAAE,CADF;AAEPC,IAAAA,CAAC,EAAE,MAFI;AAGPC,IAAAA,UAAU,EAAE;AACXD,MAAAA,CAAC,EAAE;AAAEE,QAAAA,IAAI,EAAE,QAAR;AAAkBC,QAAAA,SAAS,EAAE;AAA7B,OADQ;AAEXI,MAAAA,OAAO,EAAE,EAFE;AAGXF,MAAAA,IAAI,EAAE,GAHK;AAIXG,MAAAA,IAAI,EAAE;AAJK;AAHL;AAXQ,CAAjB;;AAuBA,MAAMC,wBAAwB,GAAIC,KAAD,IAAW;AAAA;;AAAA;;AAC3C,QAAM,CAAEZ,IAAF,EAAQa,OAAR,IAAoB1B,QAAQ,CAAC,KAAD,CAAlC;AAEAG,EAAAA,SAAS,IAAC,MAAM;AAAA;;AACf,UAAMwB,EAAE,GAAGvB,SAAS,EAApB;AACAM,IAAAA,kBAAkB,CAACiB,EAAD,CAAlB;AACA,GAHQ;AAAA,YACGvB,SADH;AAAA,MAGN,EAHM,CAAT;AAIA,sBACC,QAAC,0BAAD;AAAA,2BACC,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAEO,YAAY,EAAhC;AAAA,8BACC;AAAI,QAAA,OAAO,EAAEe,OAAO,CAAC,KAAD,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAGC,QAAC,SAAD;AAAW,QAAA,OAAO,EAAE;AAAEZ,UAAAA,OAAO,EAAE;AAAX,SAApB;AAAA,mBACEc,eAAe,gBAAG;AAAK,UAAA,GAAG,EAAEA,eAAe,CAACC;AAA1B;AAAA;AAAA;AAAA;AAAA,gBAAH,GAA2C,IAD5D,eAEC,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,gBAFD;AAAA;AAAA;AAAA;AAAA;AAAA,cAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AAYA,CAnBD;;IAAML,wB;;KAAAA,wB;AAqBNA,wBAAwB,CAACM,SAAzB,GAAqC;AACpCC,EAAAA,WAAW,EAAEvB,SAAS,CAACwB,IAAV,CAAeC,UADQ;AAEpCC,EAAAA,QAAQ,EAAE1B,SAAS,CAAC2B;AAFgB,CAArC;;AAKA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAAEC,EAAAA,OAAO,EAAED,KAAK,CAACC;AAAjB,CAAZ,CAAxB;;AAEA,eAAe7B,OAAO,CAAC2B,eAAD,EAAkB;AAAEG,EAAAA,WAAF;AAAe7B,EAAAA;AAAf,CAAlB,CAAP,CAA8Dc,wBAA9D,CAAf","sourcesContent":["import { motion } from 'framer-motion';\nimport { Fragment, useState, lazy, Suspense, useEffect, useParams } from 'react';\nimport { SingleMusicContainerStyled } from './SingleMusicItem.styled';\nimport Tracklist from './TrackList';\nimport { Container } from './SingleMusicItem.styled';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { setReleasePlaylist } from '../../actions/releaseActions';\n\nconst renderLoader = () => <p>Loading</p>;\n\nconst variants = {\n\topen: {\n\t\topacity: 1,\n\t\tx: 0,\n\t\ttransition: {\n\t\t\ttype: 'tween',\n\t\t\tstiffness: 0,\n\t\t\trestDelta: 10,\n\t\t\tmass: 0.5\n\t\t}\n\t},\n\tclosed: {\n\t\topacity: 0,\n\t\tx: '100%',\n\t\ttransition: {\n\t\t\tx: { type: 'spring', stiffness: 100 },\n\t\t\tdamping: 10,\n\t\t\tmass: 0.1,\n\t\t\twhen: 'beforeChildren'\n\t\t}\n\t}\n};\n\nconst SingleMusicItemContainer = (props) => {\n\tconst [ open, setOpen ] = useState(false);\n\n\tuseEffect(() => {\n\t\tconst id = useParams();\n\t\tsetReleasePlaylist(id);\n\t}, []);\n\treturn (\n\t\t<SingleMusicContainerStyled>\n\t\t\t<Suspense fallback={renderLoader()}>\n\t\t\t\t<h3 onClick={setOpen(false)}>back</h3>\n\n\t\t\t\t<Container animate={{ opacity: 1 }}>\n\t\t\t\t\t{currentPlaylist ? <img src={currentPlaylist.artwork} /> : null}\n\t\t\t\t\t<Tracklist />\n\t\t\t\t</Container>\n\t\t\t</Suspense>\n\t\t</SingleMusicContainerStyled>\n\t);\n};\n\nSingleMusicItemContainer.propTypes = {\n\tgetPlaylist: PropTypes.func.isRequired,\n\tplaylist: PropTypes.object\n};\n\nconst mapStateToProps = (state) => ({ release: state.release });\n\nexport default connect(mapStateToProps, { getReleases, setReleasePlaylist })(SingleMusicItemContainer);\n"]},"metadata":{},"sourceType":"module"}