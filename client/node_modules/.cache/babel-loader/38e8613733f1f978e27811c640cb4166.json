{"ast":null,"code":"import { GET_ITEMS, GET_SINGLE_ITEM, ADD_ITEM, DELETE_ITEM, ITEMS_LOADING\n/*EDIT_ITEM*/\n} from '../actions/types';\nconst initialState = {\n  items: [],\n  singleItem: {},\n  loading: true\n}; // export items in current state + changes\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_ITEMS:\n      return { ...state,\n        // return state of items\n        items: action.payload,\n        loading: false\n      };\n\n    case GET_SINGLE_ITEM:\n      return { ...state,\n        // return state of items\n        singleItem: state.items.filter(item => item._id === action.payload),\n        loading: false\n      };\n\n    case DELETE_ITEM:\n      return { ...state,\n        items: state.items.filter(item => item._id !== action.payload) //return state without selected id\n\n      };\n\n    case ADD_ITEM:\n      return { ...state,\n        items: [action.payload, ...state.items] // copy state and return with new item\n\n      };\n\n    case ITEMS_LOADING:\n      return { ...state,\n        loading: true\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/oscady/Documents/projects/outboard/client/src/reducers/itemReducer.js"],"names":["GET_ITEMS","GET_SINGLE_ITEM","ADD_ITEM","DELETE_ITEM","ITEMS_LOADING","initialState","items","singleItem","loading","state","action","type","payload","filter","item","_id"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,eAApB,EAAqCC,QAArC,EAA+CC,WAA/C,EAA4DC;AAAc;AAA1E,OAA+F,kBAA/F;AAEA,MAAMC,YAAY,GAAG;AACpBC,EAAAA,KAAK,EAAE,EADa;AAEpBC,EAAAA,UAAU,EAAE,EAFQ;AAGpBC,EAAAA,OAAO,EAAE;AAHW,CAArB,C,CAKA;;AACA,eAAe,UAASC,KAAK,GAAGJ,YAAjB,EAA+BK,MAA/B,EAAuC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACC,SAAKX,SAAL;AACC,aAAO,EACN,GAAGS,KADG;AACI;AACVH,QAAAA,KAAK,EAAEI,MAAM,CAACE,OAFR;AAGNJ,QAAAA,OAAO,EAAE;AAHH,OAAP;;AAKD,SAAKP,eAAL;AACC,aAAO,EACN,GAAGQ,KADG;AACI;AACVF,QAAAA,UAAU,EAAEE,KAAK,CAACH,KAAN,CAAYO,MAAZ,CAAoBC,IAAD,IAAUA,IAAI,CAACC,GAAL,KAAaL,MAAM,CAACE,OAAjD,CAFN;AAGNJ,QAAAA,OAAO,EAAE;AAHH,OAAP;;AAKD,SAAKL,WAAL;AACC,aAAO,EACN,GAAGM,KADG;AAENH,QAAAA,KAAK,EAAEG,KAAK,CAACH,KAAN,CAAYO,MAAZ,CAAoBC,IAAD,IAAUA,IAAI,CAACC,GAAL,KAAaL,MAAM,CAACE,OAAjD,CAFD,CAE2D;;AAF3D,OAAP;;AAID,SAAKV,QAAL;AACC,aAAO,EACN,GAAGO,KADG;AAENH,QAAAA,KAAK,EAAE,CAAEI,MAAM,CAACE,OAAT,EAAkB,GAAGH,KAAK,CAACH,KAA3B,CAFD,CAEoC;;AAFpC,OAAP;;AAID,SAAKF,aAAL;AACC,aAAO,EACN,GAAGK,KADG;AAEND,QAAAA,OAAO,EAAE;AAFH,OAAP;;AAKD;AACC,aAAOC,KAAP;AA9BF;AAgCA","sourcesContent":["import { GET_ITEMS, GET_SINGLE_ITEM, ADD_ITEM, DELETE_ITEM, ITEMS_LOADING /*EDIT_ITEM*/ } from '../actions/types';\n\nconst initialState = {\n\titems: [],\n\tsingleItem: {},\n\tloading: true\n};\n// export items in current state + changes\nexport default function(state = initialState, action) {\n\tswitch (action.type) {\n\t\tcase GET_ITEMS:\n\t\t\treturn {\n\t\t\t\t...state, // return state of items\n\t\t\t\titems: action.payload,\n\t\t\t\tloading: false\n\t\t\t};\n\t\tcase GET_SINGLE_ITEM:\n\t\t\treturn {\n\t\t\t\t...state, // return state of items\n\t\t\t\tsingleItem: state.items.filter((item) => item._id === action.payload),\n\t\t\t\tloading: false\n\t\t\t};\n\t\tcase DELETE_ITEM:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\titems: state.items.filter((item) => item._id !== action.payload) //return state without selected id\n\t\t\t};\n\t\tcase ADD_ITEM:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\titems: [ action.payload, ...state.items ] // copy state and return with new item\n\t\t\t};\n\t\tcase ITEMS_LOADING:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloading: true\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}