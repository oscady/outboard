{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/oscady/Documents/projects/outboard/client/src/pages/Artists/Artists.js\",\n    _s = $RefreshSig$();\n\nimport { React, useEffect, useState, Fragment } from 'react';\nimport { artists as artistData } from '../../data/artists';\nimport { ArtistsStyled, ArtistItem, ArtistPage, Container, Header, ContentContainer, SingleArtist } from './Artists.styled';\nimport FullPageComponent from '../../components/FullPageComponent/FullPageComponent';\nimport FullPageRow from '../../components/FullPageComponent/FullPageRow';\nimport { loremIpsum, Avatar, name, surname, fullname, username } from 'react-lorem-ipsum';\nimport { PageContainer } from '../Basic/PageContainer.styled';\nimport { getTracks } from '../../actions/trackUploadActions';\nimport { getReleases } from '../../actions/releaseActions';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nconst Artists = props => {\n  _s();\n\n  const [artists, setArtists] = useState(artistData);\n  const [viewArtist, setViewArtist] = useState(false);\n  const [singleArtist, setSingleArtist] = useState();\n  useEffect(() => {}, []);\n\n  const toggle = object => {\n    setSingleArtist(object);\n    setViewArtist(!viewArtist);\n  };\n\n  return /*#__PURE__*/_jsxDEV(PageContainer, {\n    children: viewArtist ? /*#__PURE__*/_jsxDEV(ContentContainer, {\n      children: /*#__PURE__*/_jsxDEV(SingleArtist, {\n        animate: {\n          opacity: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            paddingLeft: '80px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            style: {\n              marginBottom: '60px'\n            },\n            children: \"otbd002\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: singleArtist.artistName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: singleArtist.artwork\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"biography\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 8\n          }, this), loremIpsum({\n            p: 3,\n            avgSentencesPerParagraph: 3\n          }).slice(0, 3).map((text, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text\",\n            children: text\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 9\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            onClick: toggle,\n            children: \"back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }, this) : /*#__PURE__*/_jsxDEV(ContentContainer, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"featured artists\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        children: props.release.releases ? props.release.releases.map(release => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: release.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 10\n          }, this), /*#__PURE__*/_jsxDEV(ArtistsStyled, {\n            animate: {\n              opacity: 1\n            },\n            children: release.tracks.map(artist => /*#__PURE__*/_jsxDEV(ArtistItem, {\n              onClick: toggle,\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: artist.artwork,\n                width: \"350\",\n                height: \"350\",\n                alt: \"Avatar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: artist.artistName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 13\n              }, this)]\n            }, artist._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 12\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 10\n          }, this)]\n        }, release._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }, this)) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Artists, \"OFl37V2NBBYFy2YOus257c2HMjY=\");\n\n_c = Artists;\nArtists.propTypes = {\n  setAudioPlaing: PropTypes.func,\n  setAudioPaused: PropTypes.func,\n  setCurrentTrack: PropTypes.func.isRequired,\n  track: PropTypes.object,\n  getReleases: PropTypes.func.isRequired,\n  release: PropTypes.object,\n  audio: PropTypes.object,\n  playing: PropTypes.bool,\n  currentTrack: PropTypes.array\n};\n\nconst mapStateToProps = state => ({\n  audio: state.audio,\n  playing: state.audio.playing,\n  track: state.track,\n  release: state.release,\n  currentTrack: state.audio.currentTrack\n});\n\nexport default connect(mapStateToProps, {\n  getReleases,\n  getTracks\n})(Artists);\n\nvar _c;\n\n$RefreshReg$(_c, \"Artists\");","map":{"version":3,"sources":["/home/oscady/Documents/projects/outboard/client/src/pages/Artists/Artists.js"],"names":["React","useEffect","useState","Fragment","artists","artistData","ArtistsStyled","ArtistItem","ArtistPage","Container","Header","ContentContainer","SingleArtist","FullPageComponent","FullPageRow","loremIpsum","Avatar","name","surname","fullname","username","PageContainer","getTracks","getReleases","PropTypes","connect","Artists","props","setArtists","viewArtist","setViewArtist","singleArtist","setSingleArtist","toggle","object","opacity","paddingLeft","marginBottom","artistName","artwork","p","avgSentencesPerParagraph","slice","map","text","index","release","releases","tracks","artist","_id","propTypes","setAudioPlaing","func","setAudioPaused","setCurrentTrack","isRequired","track","audio","playing","bool","currentTrack","array","mapStateToProps","state"],"mappings":"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","sourcesContent":["import { React, useEffect, useState, Fragment } from 'react';\nimport { artists as artistData } from '../../data/artists';\nimport {\n\tArtistsStyled,\n\tArtistItem,\n\tArtistPage,\n\tContainer,\n\tHeader,\n\tContentContainer,\n\tSingleArtist\n} from './Artists.styled';\nimport FullPageComponent from '../../components/FullPageComponent/FullPageComponent';\nimport FullPageRow from '../../components/FullPageComponent/FullPageRow';\nimport { loremIpsum, Avatar, name, surname, fullname, username } from 'react-lorem-ipsum';\nimport { PageContainer } from '../Basic/PageContainer.styled';\nimport { getTracks } from '../../actions/trackUploadActions';\nimport { getReleases } from '../../actions/releaseActions';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nconst Artists = (props) => {\n\tconst [ artists, setArtists ] = useState(artistData);\n\tconst [ viewArtist, setViewArtist ] = useState(false);\n\tconst [ singleArtist, setSingleArtist ] = useState();\n\n\tuseEffect(() => {}, []);\n\tconst toggle = (object) => {\n\t\tsetSingleArtist(object);\n\t\tsetViewArtist(!viewArtist);\n\t};\n\treturn (\n\t\t<PageContainer>\n\t\t\t{viewArtist ? (\n\t\t\t\t<ContentContainer>\n\t\t\t\t\t<SingleArtist animate={{ opacity: 1 }}>\n\t\t\t\t\t\t<div style={{ paddingLeft: '80px' }}>\n\t\t\t\t\t\t\t<h1 style={{ marginBottom: '60px' }}>otbd002</h1>\n\n\t\t\t\t\t\t\t<h1>{singleArtist.artistName}</h1>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<img src={singleArtist.artwork} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>biography</h1>\n\t\t\t\t\t\t\t{loremIpsum({ p: 3, avgSentencesPerParagraph: 3 }).slice(0, 3).map((text, index) => (\n\t\t\t\t\t\t\t\t<p className='text' key={index}>\n\t\t\t\t\t\t\t\t\t{text}\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h3 onClick={toggle}>back</h3>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</SingleArtist>\n\t\t\t\t</ContentContainer>\n\t\t\t) : (\n\t\t\t\t<ContentContainer>\n\t\t\t\t\t<Header>\n\t\t\t\t\t\t<h1>featured artists</h1>\n\t\t\t\t\t</Header>\n\t\t\t\t\t<Container>\n\t\t\t\t\t\t{props.release.releases ? (\n\t\t\t\t\t\t\tprops.release.releases.map((release) => (\n\t\t\t\t\t\t\t\t<div key={release._id}>\n\t\t\t\t\t\t\t\t\t<h2>{release.name}</h2>\n\t\t\t\t\t\t\t\t\t<ArtistsStyled animate={{ opacity: 1 }}>\n\t\t\t\t\t\t\t\t\t\t{release.tracks.map((artist) => (\n\t\t\t\t\t\t\t\t\t\t\t<ArtistItem key={artist._id} onClick={toggle}>\n\t\t\t\t\t\t\t\t\t\t\t\t<img src={artist.artwork} width='350' height='350' alt='Avatar' />\n\t\t\t\t\t\t\t\t\t\t\t\t<h3>{artist.artistName}</h3>\n\t\t\t\t\t\t\t\t\t\t\t</ArtistItem>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t</ArtistsStyled>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t))\n\t\t\t\t\t\t) : null}\n\t\t\t\t\t</Container>\n\t\t\t\t</ContentContainer>\n\t\t\t)}\n\t\t</PageContainer>\n\t);\n};\n\nArtists.propTypes = {\n\tsetAudioPlaing: PropTypes.func,\n\tsetAudioPaused: PropTypes.func,\n\tsetCurrentTrack: PropTypes.func.isRequired,\n\ttrack: PropTypes.object,\n\tgetReleases: PropTypes.func.isRequired,\n\trelease: PropTypes.object,\n\taudio: PropTypes.object,\n\tplaying: PropTypes.bool,\n\tcurrentTrack: PropTypes.array\n};\n\nconst mapStateToProps = (state) => ({\n\taudio: state.audio,\n\tplaying: state.audio.playing,\n\ttrack: state.track,\n\trelease: state.release,\n\tcurrentTrack: state.audio.currentTrack\n});\n\nexport default connect(mapStateToProps, { getReleases, getTracks })(Artists);\n"]},"metadata":{},"sourceType":"module"}