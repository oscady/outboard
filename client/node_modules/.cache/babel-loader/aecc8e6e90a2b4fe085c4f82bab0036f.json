{"ast":null,"code":"import { GET_TRACKS, ADD_TRACK, TRACKS_LOADING, TRACKS_LOADED } from '../actions/types';\nconst initialState = {\n  tracks: [],\n  loading: false\n}; // export tracks in current state + changes\n\nconst trackUploadReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_TRACKS:\n      return { ...state,\n        // return state of tracks\n        tracks: action.payload,\n        loading: false\n      };\n\n    case ADD_TRACK:\n      return { ...state,\n        tracks: [action.payload, ...state.tracks] // copy state and return with new image\n\n      };\n\n    case TRACKS_LOADING:\n      return { ...state,\n        loading: true\n      };\n\n    case TRACKS_LOADED:\n      return { ...state,\n        loading: false\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default trackUploadReducer;","map":{"version":3,"sources":["/home/oscady/Documents/projects/outboard/client/src/reducers/trackUploadReducer.js"],"names":["GET_TRACKS","ADD_TRACK","TRACKS_LOADING","TRACKS_LOADED","initialState","tracks","loading","trackUploadReducer","state","action","type","payload"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,SAArB,EAAgCC,cAAhC,EAAgDC,aAAhD,QAAqE,kBAArE;AAEA,MAAMC,YAAY,GAAG;AACpBC,EAAAA,MAAM,EAAE,EADY;AAEpBC,EAAAA,OAAO,EAAE;AAFW,CAArB,C,CAIA;;AACA,MAAMC,kBAAkB,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AAC5D,UAAQA,MAAM,CAACC,IAAf;AACC,SAAKV,UAAL;AACC,aAAO,EACN,GAAGQ,KADG;AACI;AACVH,QAAAA,MAAM,EAAEI,MAAM,CAACE,OAFT;AAGNL,QAAAA,OAAO,EAAE;AAHH,OAAP;;AAKD,SAAKL,SAAL;AACC,aAAO,EACN,GAAGO,KADG;AAENH,QAAAA,MAAM,EAAE,CAAEI,MAAM,CAACE,OAAT,EAAkB,GAAGH,KAAK,CAACH,MAA3B,CAFF,CAEsC;;AAFtC,OAAP;;AAID,SAAKH,cAAL;AACC,aAAO,EACN,GAAGM,KADG;AAENF,QAAAA,OAAO,EAAE;AAFH,OAAP;;AAID,SAAKH,aAAL;AACC,aAAO,EACN,GAAGK,KADG;AAENF,QAAAA,OAAO,EAAE;AAFH,OAAP;;AAID;AACC,aAAOE,KAAP;AAvBF;AAyBA,CA1BD;;AA4BA,eAAeD,kBAAf","sourcesContent":["import { GET_TRACKS, ADD_TRACK, TRACKS_LOADING, TRACKS_LOADED } from '../actions/types';\n\nconst initialState = {\n\ttracks: [],\n\tloading: false\n};\n// export tracks in current state + changes\nconst trackUploadReducer = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase GET_TRACKS:\n\t\t\treturn {\n\t\t\t\t...state, // return state of tracks\n\t\t\t\ttracks: action.payload,\n\t\t\t\tloading: false\n\t\t\t};\n\t\tcase ADD_TRACK:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttracks: [ action.payload, ...state.tracks ] // copy state and return with new image\n\t\t\t};\n\t\tcase TRACKS_LOADING:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloading: true\n\t\t\t};\n\t\tcase TRACKS_LOADED:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloading: false\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default trackUploadReducer;\n"]},"metadata":{},"sourceType":"module"}