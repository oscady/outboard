{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/oscady/Documents/projects/outboard/client/src/components/Player/Player.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { Playlist } from './Playlist';\nimport { Top } from './Top';\nimport { connect } from 'react-redux';\nimport { fetchPlaylist, PlaylistContext } from '../../data/playlist';\nconst Container = styled.div`\n\tposition: fixed;\n\tleft: 0;\n\tright: 0;\n\tbottom: 0;\n\twidth: 100vw;\n\theight: 60px;\n\tmargin: 0 auto;\n\tborder-radius: 5px;\n\tbox-shadow: 0px 0px 15px -5px rgba(0, 0, 0, 0.75);\n\tz-index: 10;\n`;\n_c = Container;\nconst Loading = styled.div`\n\tposition: absolute;\n\ttop: 50%;\n\tleft: 50%;\n\ttransform: translate(-50%, -50%);\n`;\n_c2 = Loading;\n\nconst Player = props => {\n  _s();\n\n  const [playlist, setPlaylist] = useState([]);\n  const [currentTrack, setCurrentTrack] = useState(1);\n\n  const handleChangeTrack = id => {\n    setCurrentTrack(id);\n  };\n\n  const handleNextTrack = () => {\n    if (currentTrack === playlist.length - 1) {\n      setCurrentTrack(0);\n      return;\n    }\n\n    setCurrentTrack(currentTrack + 1);\n  };\n\n  const handlePrevTrack = () => {\n    if (currentTrack === 0) {\n      setCurrentTrack(playlist.length - 1);\n      return;\n    }\n\n    setCurrentTrack(currentTrack - 1);\n  };\n\n  const handleFetchData = async () => {\n    const playlist = await fetchPlaylist();\n    setPlaylist(playlist);\n  };\n\n  useEffect(() => {\n    setCurrentTrack(props.currentTrack);\n  }, [props.currentTrack]);\n\n  if (playlist.length === 0) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Loading, {\n        children: \"loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 4\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(PlaylistContext.Provider, {\n      value: {\n        handleNextTrack,\n        handlePrevTrack\n      },\n      children: /*#__PURE__*/_jsxDEV(Top, {\n        track: currentTrack\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Player, \"wnTEiDZAR6K+XZNhtrDSAMHykzY=\");\n\n_c3 = Player;\n\nconst mapStateToProps = state => ({\n  audio: state.audio,\n  track: state.track,\n  release: state.release,\n  currentTrack: state.audio.currentTrack\n});\n\nexport default connect(mapStateToProps)(Player);\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Loading\");\n$RefreshReg$(_c3, \"Player\");","map":{"version":3,"sources":["/home/oscady/Documents/projects/outboard/client/src/components/Player/Player.js"],"names":["React","useState","useEffect","styled","Playlist","Top","connect","fetchPlaylist","PlaylistContext","Container","div","Loading","Player","props","playlist","setPlaylist","currentTrack","setCurrentTrack","handleChangeTrack","id","handleNextTrack","length","handlePrevTrack","handleFetchData","mapStateToProps","state","audio","track","release"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,SAASC,GAAT,QAAoB,OAApB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,aAAT,EAAwBC,eAAxB,QAA+C,qBAA/C;AAEA,MAAMC,SAAS,GAAGN,MAAM,CAACO,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAXA;KAAMD,S;AAaN,MAAME,OAAO,GAAGR,MAAM,CAACO,GAAI;AAC3B;AACA;AACA;AACA;AACA,CALA;MAAMC,O;;AAON,MAAMC,MAAM,GAAIC,KAAD,IAAW;AAAA;;AACzB,QAAM,CAAEC,QAAF,EAAYC,WAAZ,IAA4Bd,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAAEe,YAAF,EAAgBC,eAAhB,IAAoChB,QAAQ,CAAC,CAAD,CAAlD;;AAEA,QAAMiB,iBAAiB,GAAIC,EAAD,IAAQ;AACjCF,IAAAA,eAAe,CAACE,EAAD,CAAf;AACA,GAFD;;AAIA,QAAMC,eAAe,GAAG,MAAM;AAC7B,QAAIJ,YAAY,KAAKF,QAAQ,CAACO,MAAT,GAAkB,CAAvC,EAA0C;AACzCJ,MAAAA,eAAe,CAAC,CAAD,CAAf;AACA;AACA;;AACDA,IAAAA,eAAe,CAACD,YAAY,GAAG,CAAhB,CAAf;AACA,GAND;;AAQA,QAAMM,eAAe,GAAG,MAAM;AAC7B,QAAIN,YAAY,KAAK,CAArB,EAAwB;AACvBC,MAAAA,eAAe,CAACH,QAAQ,CAACO,MAAT,GAAkB,CAAnB,CAAf;AACA;AACA;;AACDJ,IAAAA,eAAe,CAACD,YAAY,GAAG,CAAhB,CAAf;AACA,GAND;;AAQA,QAAMO,eAAe,GAAG,YAAY;AACnC,UAAMT,QAAQ,GAAG,MAAMP,aAAa,EAApC;AACAQ,IAAAA,WAAW,CAACD,QAAD,CAAX;AACA,GAHD;;AAKAZ,EAAAA,SAAS,CACR,MAAM;AACLe,IAAAA,eAAe,CAACJ,KAAK,CAACG,YAAP,CAAf;AACA,GAHO,EAIR,CAAEH,KAAK,CAACG,YAAR,CAJQ,CAAT;;AAOA,MAAIF,QAAQ,CAACO,MAAT,KAAoB,CAAxB,EAA2B;AAC1B,wBACC,QAAC,SAAD;AAAA,6BACC,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YADD;AAKA;;AAED,sBACC,QAAC,SAAD;AAAA,2BACC,QAAC,eAAD,CAAiB,QAAjB;AAA0B,MAAA,KAAK,EAAE;AAAED,QAAAA,eAAF;AAAmBE,QAAAA;AAAnB,OAAjC;AAAA,6BACC,QAAC,GAAD;AAAK,QAAA,KAAK,EAAEN;AAAZ;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AAQA,CApDD;;GAAMJ,M;;MAAAA,M;;AAsDN,MAAMY,eAAe,GAAIC,KAAD,KAAY;AACnCC,EAAAA,KAAK,EAAED,KAAK,CAACC,KADsB;AAEnCC,EAAAA,KAAK,EAAEF,KAAK,CAACE,KAFsB;AAGnCC,EAAAA,OAAO,EAAEH,KAAK,CAACG,OAHoB;AAInCZ,EAAAA,YAAY,EAAES,KAAK,CAACC,KAAN,CAAYV;AAJS,CAAZ,CAAxB;;AAOA,eAAeV,OAAO,CAACkB,eAAD,CAAP,CAAyBZ,MAAzB,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { Playlist } from './Playlist';\nimport { Top } from './Top';\nimport { connect } from 'react-redux';\nimport { fetchPlaylist, PlaylistContext } from '../../data/playlist';\n\nconst Container = styled.div`\n\tposition: fixed;\n\tleft: 0;\n\tright: 0;\n\tbottom: 0;\n\twidth: 100vw;\n\theight: 60px;\n\tmargin: 0 auto;\n\tborder-radius: 5px;\n\tbox-shadow: 0px 0px 15px -5px rgba(0, 0, 0, 0.75);\n\tz-index: 10;\n`;\n\nconst Loading = styled.div`\n\tposition: absolute;\n\ttop: 50%;\n\tleft: 50%;\n\ttransform: translate(-50%, -50%);\n`;\n\nconst Player = (props) => {\n\tconst [ playlist, setPlaylist ] = useState([]);\n\tconst [ currentTrack, setCurrentTrack ] = useState(1);\n\n\tconst handleChangeTrack = (id) => {\n\t\tsetCurrentTrack(id);\n\t};\n\n\tconst handleNextTrack = () => {\n\t\tif (currentTrack === playlist.length - 1) {\n\t\t\tsetCurrentTrack(0);\n\t\t\treturn;\n\t\t}\n\t\tsetCurrentTrack(currentTrack + 1);\n\t};\n\n\tconst handlePrevTrack = () => {\n\t\tif (currentTrack === 0) {\n\t\t\tsetCurrentTrack(playlist.length - 1);\n\t\t\treturn;\n\t\t}\n\t\tsetCurrentTrack(currentTrack - 1);\n\t};\n\n\tconst handleFetchData = async () => {\n\t\tconst playlist = await fetchPlaylist();\n\t\tsetPlaylist(playlist);\n\t};\n\n\tuseEffect(\n\t\t() => {\n\t\t\tsetCurrentTrack(props.currentTrack);\n\t\t},\n\t\t[ props.currentTrack ]\n\t);\n\n\tif (playlist.length === 0) {\n\t\treturn (\n\t\t\t<Container>\n\t\t\t\t<Loading>loading...</Loading>\n\t\t\t</Container>\n\t\t);\n\t}\n\n\treturn (\n\t\t<Container>\n\t\t\t<PlaylistContext.Provider value={{ handleNextTrack, handlePrevTrack }}>\n\t\t\t\t<Top track={currentTrack} />\n\t\t\t\t{/* <Playlist onChangeTrack={handleChangeTrack} playlist={playlist} /> */}\n\t\t\t</PlaylistContext.Provider>\n\t\t</Container>\n\t);\n};\n\nconst mapStateToProps = (state) => ({\n\taudio: state.audio,\n\ttrack: state.track,\n\trelease: state.release,\n\tcurrentTrack: state.audio.currentTrack\n});\n\nexport default connect(mapStateToProps)(Player);\n"]},"metadata":{},"sourceType":"module"}