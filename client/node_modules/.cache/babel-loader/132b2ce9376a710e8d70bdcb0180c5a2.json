{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/oscady/Documents/projects/outboard/client/src/components-back/Releases/UploadRelease.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\nimport Styled from 'styled-components';\nimport { addRelease, getReleases } from '../../actions/releaseActions';\nimport { getTracks } from '../../actions/trackUploadActions';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { artists } from '../../data/artists';\nconst ButtonContainer = Styled.div`\n  height: 150px;\n  width: 100%;\n  position:absolute;\n  bottom: 0;\n  left:0;\n  right: 0;\n\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  align-items: center;\n`;\n_c = ButtonContainer;\nconst FormContainer = Styled.div`\nposition: relative;\n  height: 100%\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  align-items: flex-start;\n  justify-content: space-between;\n  flex-wrap: wrap;\n  padding: 100px;\n`;\n_c2 = FormContainer;\n\nconst UploadRelease = props => {\n  _s();\n\n  const [name, setName] = useState('');\n  const [artists, setArtists] = useState([]);\n  const [tracks, setTracks] = useState([]);\n  const [artwork, setArtwork] = useState('');\n  const [uploadedTracks, setUploadedTracks] = useState([]);\n  useEffect(() => {\n    clearForm();\n    setUploadedTracks(props.track.tracks);\n  }, []);\n  useEffect(() => {\n    console.log(uploadedTracks);\n  }, [name]);\n\n  const clearForm = () => {\n    setName('');\n    setArtists([]);\n    setTracks([]);\n    setArtwork('');\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    let formData = new FormData();\n    formData.append('name', name);\n    formData.append('artists', artists);\n    formData.append('tracks', tracks);\n    formData.append('artwork', artwork);\n    props.addRelease(formData);\n    clearForm();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: onSubmit,\n    action: \"/cms\",\n    style: {\n      height: '100%',\n      width: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(FormContainer, {\n      children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          style: {\n            padding: '5px',\n            fontSize: '2rem',\n            textAlign: 'left',\n            color: 'white'\n          },\n          htmlFor: \"name\",\n          children: \"Release Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          name: \"name\",\n          value: name,\n          onChange: e => setName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          style: {\n            padding: '5px',\n            fontSize: '2rem',\n            textAlign: 'left',\n            color: 'white'\n          },\n          htmlFor: \"artists\",\n          children: \"artists\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          name: \"artists\",\n          value: artists,\n          onChange: e => setArtists(...artists, e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          style: {\n            padding: '5px',\n            fontSize: '2rem',\n            textAlign: 'left',\n            color: 'white'\n          },\n          htmlFor: \"tracks\",\n          children: \"tracks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          name: \"tracks\",\n          value: tracks,\n          onChange: e => setTracks(...tracks, e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          style: {\n            padding: '5px',\n            fontSize: '2rem',\n            textAlign: 'left',\n            color: 'white'\n          },\n          htmlFor: \"artwork\",\n          children: \"Artwork\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          name: \"artwork\",\n          value: artwork,\n          onChange: e => setArtwork(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(ButtonContainer, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        className: \"btn-lg\",\n        style: {\n          margin: '20px'\n        },\n        type: \"submit\",\n        children: \"add item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"btn-lg\",\n        style: {\n          margin: '20px'\n        },\n        onClick: clearForm,\n        children: \"Clear Form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 3\n  }, this);\n};\n\n_s(UploadRelease, \"PxEKWr+nWN5sMTr3tNUju8N0yUo=\");\n\n_c3 = UploadRelease;\nUploadRelease.propTypes = {\n  setAudioPlaing: PropTypes.func,\n  setAudioPaused: PropTypes.func,\n  getReleases: PropTypes.func,\n  addRelease: PropTypes.func,\n  playing: PropTypes.bool,\n  tracks: PropTypes.object,\n  release: PropTypes.object,\n  getTracks: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  release: state.release,\n  track: state.track\n});\n\nexport default connect(mapStateToProps, {\n  addRelease,\n  getReleases,\n  getTracks\n})(UploadRelease);\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ButtonContainer\");\n$RefreshReg$(_c2, \"FormContainer\");\n$RefreshReg$(_c3, \"UploadRelease\");","map":{"version":3,"sources":["/home/oscady/Documents/projects/outboard/client/src/components-back/Releases/UploadRelease.js"],"names":["useEffect","useState","Button","Form","FormGroup","Label","Input","Styled","addRelease","getReleases","getTracks","PropTypes","connect","artists","ButtonContainer","div","FormContainer","UploadRelease","props","name","setName","setArtists","tracks","setTracks","artwork","setArtwork","uploadedTracks","setUploadedTracks","clearForm","track","console","log","onSubmit","e","preventDefault","formData","FormData","append","height","width","padding","fontSize","textAlign","color","target","value","margin","propTypes","setAudioPlaing","func","setAudioPaused","playing","bool","object","release","mapStateToProps","state"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\nimport Styled from 'styled-components';\nimport { addRelease, getReleases } from '../../actions/releaseActions';\nimport { getTracks } from '../../actions/trackUploadActions';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { artists } from '../../data/artists';\n\nconst ButtonContainer = Styled.div`\n  height: 150px;\n  width: 100%;\n  position:absolute;\n  bottom: 0;\n  left:0;\n  right: 0;\n\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  align-items: center;\n`;\n\nconst FormContainer = Styled.div`\nposition: relative;\n  height: 100%\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  align-items: flex-start;\n  justify-content: space-between;\n  flex-wrap: wrap;\n  padding: 100px;\n`;\n\nconst UploadRelease = (props) => {\n\tconst [ name, setName ] = useState('');\n\tconst [ artists, setArtists ] = useState([]);\n\tconst [ tracks, setTracks ] = useState([]);\n\tconst [ artwork, setArtwork ] = useState('');\n\tconst [ uploadedTracks, setUploadedTracks ] = useState([]);\n\n\tuseEffect(() => {\n\t\tclearForm();\n\t\tsetUploadedTracks(props.track.tracks);\n\t}, []);\n\n\tuseEffect(\n\t\t() => {\n\t\t\tconsole.log(uploadedTracks);\n\t\t},\n\t\t[ name ]\n\t);\n\n\tconst clearForm = () => {\n\t\tsetName('');\n\t\tsetArtists([]);\n\t\tsetTracks([]);\n\t\tsetArtwork('');\n\t};\n\n\tconst onSubmit = (e) => {\n\t\te.preventDefault();\n\n\t\tlet formData = new FormData();\n\n\t\tformData.append('name', name);\n\t\tformData.append('artists', artists);\n\t\tformData.append('tracks', tracks);\n\t\tformData.append('artwork', artwork);\n\n\t\tprops.addRelease(formData);\n\n\t\tclearForm();\n\t};\n\n\treturn (\n\t\t<Form onSubmit={onSubmit} action='/cms' style={{ height: '100%', width: '100%' }}>\n\t\t\t<FormContainer>\n\t\t\t\t<FormGroup>\n\t\t\t\t\t<Label\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tpadding: '5px',\n\t\t\t\t\t\t\tfontSize: '2rem',\n\t\t\t\t\t\t\ttextAlign: 'left',\n\t\t\t\t\t\t\tcolor: 'white'\n\t\t\t\t\t\t}}\n\t\t\t\t\t\thtmlFor='name'>\n\t\t\t\t\t\tRelease Title\n\t\t\t\t\t</Label>\n\t\t\t\t\t<Input type='text' name='name' value={name} onChange={(e) => setName(e.target.value)} />\n\t\t\t\t</FormGroup>\n\t\t\t\t<FormGroup>\n\t\t\t\t\t<Label\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tpadding: '5px',\n\t\t\t\t\t\t\tfontSize: '2rem',\n\t\t\t\t\t\t\ttextAlign: 'left',\n\t\t\t\t\t\t\tcolor: 'white'\n\t\t\t\t\t\t}}\n\t\t\t\t\t\thtmlFor='artists'>\n\t\t\t\t\t\tartists\n\t\t\t\t\t</Label>\n\t\t\t\t\t<Input\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tname='artists'\n\t\t\t\t\t\tvalue={artists}\n\t\t\t\t\t\tonChange={(e) => setArtists(...artists, e.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t</FormGroup>\n\t\t\t\t<FormGroup>\n\t\t\t\t\t<Label\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tpadding: '5px',\n\t\t\t\t\t\t\tfontSize: '2rem',\n\t\t\t\t\t\t\ttextAlign: 'left',\n\t\t\t\t\t\t\tcolor: 'white'\n\t\t\t\t\t\t}}\n\t\t\t\t\t\thtmlFor='tracks'>\n\t\t\t\t\t\ttracks\n\t\t\t\t\t</Label>\n\t\t\t\t\t<Input\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tname='tracks'\n\t\t\t\t\t\tvalue={tracks}\n\t\t\t\t\t\tonChange={(e) => setTracks(...tracks, e.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t</FormGroup>\n\t\t\t\t<FormGroup>\n\t\t\t\t\t<Label\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tpadding: '5px',\n\t\t\t\t\t\t\tfontSize: '2rem',\n\t\t\t\t\t\t\ttextAlign: 'left',\n\t\t\t\t\t\t\tcolor: 'white'\n\t\t\t\t\t\t}}\n\t\t\t\t\t\thtmlFor='artwork'>\n\t\t\t\t\t\tArtwork\n\t\t\t\t\t</Label>\n\t\t\t\t\t<Input type='text' name='artwork' value={artwork} onChange={(e) => setArtwork(e.target.value)} />\n\t\t\t\t</FormGroup>\n\t\t\t</FormContainer>\n\n\t\t\t<ButtonContainer>\n\t\t\t\t<Button className='btn-lg' style={{ margin: '20px' }} type='submit'>\n\t\t\t\t\tadd item\n\t\t\t\t</Button>\n\n\t\t\t\t<Button className='btn-lg' style={{ margin: '20px' }} onClick={clearForm}>\n\t\t\t\t\tClear Form\n\t\t\t\t</Button>\n\t\t\t</ButtonContainer>\n\t\t</Form>\n\t);\n};\n\nUploadRelease.propTypes = {\n\tsetAudioPlaing: PropTypes.func,\n\tsetAudioPaused: PropTypes.func,\n\tgetReleases: PropTypes.func,\n\taddRelease: PropTypes.func,\n\tplaying: PropTypes.bool,\n\ttracks: PropTypes.object,\n\trelease: PropTypes.object,\n\tgetTracks: PropTypes.func\n};\n\nconst mapStateToProps = (state) => ({ release: state.release, track: state.track });\n\nexport default connect(mapStateToProps, { addRelease, getReleases, getTracks })(UploadRelease);\n"]},"metadata":{},"sourceType":"module"}