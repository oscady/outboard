{"ast":null,"code":"import { SET_AUDIO_PLAYING, SET_AUDIO_PAUSED, AUDIO_PLAYING, AUDIO_PAUSED, GET_TRACKS } from '../actions/types';\nconst initialState = {\n  playlist: [],\n  currentTrack: {},\n  playing: false,\n  playingTime: '0: 00'\n}; // export items in current state + changes\n\nconst audioReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_TRACKS:\n      return { ...state,\n        // return state of items\n        playlist: action.payload,\n        loading: false\n      };\n\n    case SET_AUDIO_PLAYING:\n      return { ...state,\n        playing: true\n      };\n\n    case SET_AUDIO_PAUSED:\n      return { ...state,\n        playing: false\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default audioReducer;","map":{"version":3,"sources":["/home/oscady/Documents/projects/outboard/client/src/reducers/audioReducer.js"],"names":["SET_AUDIO_PLAYING","SET_AUDIO_PAUSED","AUDIO_PLAYING","AUDIO_PAUSED","GET_TRACKS","initialState","playlist","currentTrack","playing","playingTime","audioReducer","state","action","type","payload","loading"],"mappings":"AAAA,SAASA,iBAAT,EAA4BC,gBAA5B,EAA8CC,aAA9C,EAA6DC,YAA7D,EAA2EC,UAA3E,QAA6F,kBAA7F;AAEA,MAAMC,YAAY,GAAG;AACpBC,EAAAA,QAAQ,EAAE,EADU;AAEpBC,EAAAA,YAAY,EAAE,EAFM;AAGpBC,EAAAA,OAAO,EAAE,KAHW;AAIpBC,EAAAA,WAAW,EAAE;AAJO,CAArB,C,CAMA;;AACA,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAAkC;AACtD,UAAQA,MAAM,CAACC,IAAf;AACC,SAAKT,UAAL;AACC,aAAO,EACN,GAAGO,KADG;AACI;AACVL,QAAAA,QAAQ,EAAEM,MAAM,CAACE,OAFX;AAGNC,QAAAA,OAAO,EAAE;AAHH,OAAP;;AAKD,SAAKf,iBAAL;AACC,aAAO,EACN,GAAGW,KADG;AAENH,QAAAA,OAAO,EAAE;AAFH,OAAP;;AAID,SAAKP,gBAAL;AACC,aAAO,EACN,GAAGU,KADG;AAENH,QAAAA,OAAO,EAAE;AAFH,OAAP;;AAKD;AACC,aAAOG,KAAP;AAnBF;AAqBA,CAtBD;;AAwBA,eAAeD,YAAf","sourcesContent":["import { SET_AUDIO_PLAYING, SET_AUDIO_PAUSED, AUDIO_PLAYING, AUDIO_PAUSED, GET_TRACKS } from '../actions/types';\n\nconst initialState = {\n\tplaylist: [],\n\tcurrentTrack: {},\n\tplaying: false,\n\tplayingTime: '0: 00'\n};\n// export items in current state + changes\nconst audioReducer = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase GET_TRACKS:\n\t\t\treturn {\n\t\t\t\t...state, // return state of items\n\t\t\t\tplaylist: action.payload,\n\t\t\t\tloading: false\n\t\t\t};\n\t\tcase SET_AUDIO_PLAYING:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tplaying: true\n\t\t\t};\n\t\tcase SET_AUDIO_PAUSED:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tplaying: false\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default audioReducer;\n"]},"metadata":{},"sourceType":"module"}