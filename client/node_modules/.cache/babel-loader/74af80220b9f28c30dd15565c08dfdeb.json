{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/oscady/Documents/projects/outboard/client/src/components/Player/Player.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { Playlist } from './Playlist';\nimport { Top } from './Top';\nimport { fetchPlaylist, PlaylistContext } from '../../store/playlist';\nexport function Player() {\n  _s();\n\n  const [playlist, setPlaylist] = useState([]);\n  const [currentTrack, setCurrentTrack] = useState(0);\n  const Container = styled.div`\n    position: relative;\n    width: 500px;\n    height: 500px;\n    margin: 0 auto;\n    border-radius: 5px;\n    box-shadow: 0px 0px 15px -5px rgba(0, 0, 0, 0.75);\n  `;\n  const Loading = styled.div`\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n  `;\n\n  const handleChangeTrack = id => {\n    setCurrentTrack(id);\n  };\n\n  const handleNextTrack = () => {\n    if (currentTrack === playlist.length - 1) {\n      setCurrentTrack(0);\n      return;\n    }\n\n    setCurrentTrack(currentTrack + 1);\n  };\n\n  const handlePrevTrack = () => {\n    if (currentTrack === 0) {\n      setCurrentTrack(playlist.length - 1);\n      return;\n    }\n\n    setCurrentTrack(currentTrack - 1);\n  };\n\n  const handleFetchData = async () => {\n    const playlist = await fetchPlaylist();\n    setPlaylist(playlist);\n  };\n\n  useEffect(() => {\n    handleFetchData();\n  }, []);\n\n  if (playlist.length === 0) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Loading, {\n        children: \"loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(PlaylistContext.Provider, {\n      value: {\n        handleNextTrack,\n        handlePrevTrack\n      },\n      children: [/*#__PURE__*/_jsxDEV(Top, {\n        track: playlist[currentTrack]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Playlist, {\n        onChangeTrack: handleChangeTrack,\n        playlist: playlist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Player, \"sgpLZnuGS5xNgufq31wtquyUcIo=\");\n\n_c = Player;\n\nvar _c;\n\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"sources":["/home/oscady/Documents/projects/outboard/client/src/components/Player/Player.js"],"names":["React","useState","useEffect","styled","Playlist","Top","fetchPlaylist","PlaylistContext","Player","playlist","setPlaylist","currentTrack","setCurrentTrack","Container","div","Loading","handleChangeTrack","id","handleNextTrack","length","handlePrevTrack","handleFetchData"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,SAASC,GAAT,QAAoB,OAApB;AACA,SAASC,aAAT,EAAwBC,eAAxB,QAA+C,sBAA/C;AAEA,OAAO,SAASC,MAAT,GAAkB;AAAA;;AACvB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACU,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,CAAC,CAAD,CAAhD;AAEA,QAAMY,SAAS,GAAGV,MAAM,CAACW,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,GAPE;AASA,QAAMC,OAAO,GAAGZ,MAAM,CAACW,GAAI;AAC7B;AACA;AACA;AACA;AACA,GALE;;AAOA,QAAME,iBAAiB,GAAGC,EAAE,IAAI;AAC9BL,IAAAA,eAAe,CAACK,EAAD,CAAf;AACD,GAFD;;AAIA,QAAMC,eAAe,GAAG,MAAM;AAC5B,QAAIP,YAAY,KAAKF,QAAQ,CAACU,MAAT,GAAkB,CAAvC,EAA0C;AACxCP,MAAAA,eAAe,CAAC,CAAD,CAAf;AACA;AACD;;AACDA,IAAAA,eAAe,CAACD,YAAY,GAAG,CAAhB,CAAf;AACD,GAND;;AAQA,QAAMS,eAAe,GAAG,MAAM;AAC5B,QAAIT,YAAY,KAAK,CAArB,EAAwB;AACtBC,MAAAA,eAAe,CAACH,QAAQ,CAACU,MAAT,GAAkB,CAAnB,CAAf;AACA;AACD;;AACDP,IAAAA,eAAe,CAACD,YAAY,GAAG,CAAhB,CAAf;AACD,GAND;;AAQA,QAAMU,eAAe,GAAG,YAAY;AAClC,UAAMZ,QAAQ,GAAG,MAAMH,aAAa,EAApC;AACAI,IAAAA,WAAW,CAACD,QAAD,CAAX;AACD,GAHD;;AAKAP,EAAAA,SAAS,CAAC,MAAM;AACdmB,IAAAA,eAAe;AAChB,GAFQ,EAEN,EAFM,CAAT;;AAIA,MAAIZ,QAAQ,CAACU,MAAT,KAAoB,CAAxB,EAA2B;AACzB,wBACE,QAAC,SAAD;AAAA,6BACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAED,sBACE,QAAC,SAAD;AAAA,2BACE,QAAC,eAAD,CAAiB,QAAjB;AAA0B,MAAA,KAAK,EAAE;AAAED,QAAAA,eAAF;AAAmBE,QAAAA;AAAnB,OAAjC;AAAA,8BACE,QAAC,GAAD;AAAK,QAAA,KAAK,EAAEX,QAAQ,CAACE,YAAD;AAApB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,QAAD;AAAU,QAAA,aAAa,EAAEK,iBAAzB;AAA4C,QAAA,QAAQ,EAAEP;AAAtD;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GAjEeD,M;;KAAAA,M","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { Playlist } from './Playlist';\nimport { Top } from './Top';\nimport { fetchPlaylist, PlaylistContext } from '../../store/playlist';\n\nexport function Player() {\n  const [playlist, setPlaylist] = useState([]);\n  const [currentTrack, setCurrentTrack] = useState(0);\n\n  const Container = styled.div`\n    position: relative;\n    width: 500px;\n    height: 500px;\n    margin: 0 auto;\n    border-radius: 5px;\n    box-shadow: 0px 0px 15px -5px rgba(0, 0, 0, 0.75);\n  `;\n\n  const Loading = styled.div`\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n  `;\n\n  const handleChangeTrack = id => {\n    setCurrentTrack(id);\n  };\n\n  const handleNextTrack = () => {\n    if (currentTrack === playlist.length - 1) {\n      setCurrentTrack(0);\n      return;\n    }\n    setCurrentTrack(currentTrack + 1);\n  };\n\n  const handlePrevTrack = () => {\n    if (currentTrack === 0) {\n      setCurrentTrack(playlist.length - 1);\n      return;\n    }\n    setCurrentTrack(currentTrack - 1);\n  };\n\n  const handleFetchData = async () => {\n    const playlist = await fetchPlaylist();\n    setPlaylist(playlist);\n  };\n\n  useEffect(() => {\n    handleFetchData();\n  }, []);\n\n  if (playlist.length === 0) {\n    return (\n      <Container>\n        <Loading>loading...</Loading>\n      </Container>\n    );\n  }\n\n  return (\n    <Container>\n      <PlaylistContext.Provider value={{ handleNextTrack, handlePrevTrack }}>\n        <Top track={playlist[currentTrack]} />\n        <Playlist onChangeTrack={handleChangeTrack} playlist={playlist} />\n      </PlaylistContext.Provider>\n    </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}