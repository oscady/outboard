{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/oscady/Documents/projects/outboard/client/src/components-back/Releases/UploadRelease.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\nimport Styled from 'styled-components';\nimport { addRelease, getReleases } from '../../actions/releaseActions';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { artists } from '../../data/artists';\nconst ButtonContainer = Styled.div`\n  height: 150px;\n  width: 100%;\n  position:absolute;\n  bottom: 0;\n  left:0;\n  right: 0;\n\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  align-items: center;\n`;\n_c = ButtonContainer;\nconst FormContainer = Styled.div`\nposition: relative;\n  height: 100%\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  align-items: flex-start;\n  justify-content: space-between;\n  flex-wrap: wrap;\n  padding: 100px;\n`;\n_c2 = FormContainer;\n\nconst UploadRelease = props => {\n  _s();\n\n  const [name, setName] = useState('');\n  const [artists, setArtists] = useState([]);\n  const [tracks, setTracks] = useState([]);\n  const [artwork, setArtwork] = useState('');\n  const [uploadedTracks, setUploadedTracks] = useState([]);\n  useEffect(() => {\n    clearForm();\n    getReleases();\n    setUploadedTracks(props.release.releases);\n  }, []);\n  useEffect(() => {\n    console.log(uploadedTracks);\n  }, [name]);\n\n  const clearForm = () => {\n    setName('');\n    setArtists([]);\n    setTracks([]);\n    setArtwork('');\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    let formData = new FormData();\n    formData.append('name', name);\n    formData.append('artists', artists);\n    formData.append('tracks', tracks);\n    formData.append('artwork', artwork);\n    props.addRelease(formData);\n    clearForm();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: onSubmit,\n    action: \"/cms\",\n    style: {\n      height: '100%',\n      width: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(FormContainer, {\n      children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          style: {\n            padding: '5px',\n            fontSize: '2rem',\n            textAlign: 'left',\n            color: 'white'\n          },\n          htmlFor: \"name\",\n          children: \"Release Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          name: \"name\",\n          value: name,\n          onChange: e => setName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          style: {\n            padding: '5px',\n            fontSize: '2rem',\n            textAlign: 'left',\n            color: 'white'\n          },\n          htmlFor: \"artists\",\n          children: \"artists\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          name: \"artists\",\n          value: artists,\n          onChange: e => setArtists(...artists, e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          style: {\n            padding: '5px',\n            fontSize: '2rem',\n            textAlign: 'left',\n            color: 'white'\n          },\n          htmlFor: \"tracks\",\n          children: \"tracks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          name: \"tracks\",\n          value: tracks,\n          onChange: e => setTracks(...tracks, e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          style: {\n            padding: '5px',\n            fontSize: '2rem',\n            textAlign: 'left',\n            color: 'white'\n          },\n          htmlFor: \"artwork\",\n          children: \"Artwork\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          name: \"artwork\",\n          value: artwork,\n          onChange: e => setArtwork(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(ButtonContainer, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        className: \"btn-lg\",\n        style: {\n          margin: '20px'\n        },\n        type: \"submit\",\n        children: \"add item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"btn-lg\",\n        style: {\n          margin: '20px'\n        },\n        onClick: clearForm,\n        children: \"Clear Form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 3\n  }, this);\n};\n\n_s(UploadRelease, \"PxEKWr+nWN5sMTr3tNUju8N0yUo=\");\n\n_c3 = UploadRelease;\nUploadRelease.propTypes = {\n  setAudioPlaing: PropTypes.func,\n  setAudioPaused: PropTypes.func,\n  getReleases: PropTypes.func,\n  addRelease: PropTypes.func,\n  playing: PropTypes.bool,\n  tracks: PropTypes.object,\n  release: PropTypes.object,\n  getTracks: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  release: state.release\n});\n\nexport default connect(mapStateToProps, {\n  addRelease,\n  getReleases\n})(UploadRelease);\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ButtonContainer\");\n$RefreshReg$(_c2, \"FormContainer\");\n$RefreshReg$(_c3, \"UploadRelease\");","map":{"version":3,"sources":["/home/oscady/Documents/projects/outboard/client/src/components-back/Releases/UploadRelease.js"],"names":["useEffect","useState","Button","Form","FormGroup","Label","Input","Styled","addRelease","getReleases","PropTypes","connect","artists","ButtonContainer","div","FormContainer","UploadRelease","props","name","setName","setArtists","tracks","setTracks","artwork","setArtwork","uploadedTracks","setUploadedTracks","clearForm","release","releases","console","log","onSubmit","e","preventDefault","formData","FormData","append","height","width","padding","fontSize","textAlign","color","target","value","margin","propTypes","setAudioPlaing","func","setAudioPaused","playing","bool","object","getTracks","mapStateToProps","state"],"mappings":";;;;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,SAAvB,EAAkCC,KAAlC,EAAyCC,KAAzC,QAAsD,YAAtD;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,UAAT,EAAqBC,WAArB,QAAwC,8BAAxC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,oBAAxB;AAEA,MAAMC,eAAe,GAAGN,MAAM,CAACO,GAAI;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAZA;KAAMD,e;AAcN,MAAME,aAAa,GAAGR,MAAM,CAACO,GAAI;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAVA;MAAMC,a;;AAYN,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAAA;;AAChC,QAAM,CAAEC,IAAF,EAAQC,OAAR,IAAoBlB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAAEW,OAAF,EAAWQ,UAAX,IAA0BnB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAAEoB,MAAF,EAAUC,SAAV,IAAwBrB,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAAEsB,OAAF,EAAWC,UAAX,IAA0BvB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAAEwB,cAAF,EAAkBC,iBAAlB,IAAwCzB,QAAQ,CAAC,EAAD,CAAtD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACf2B,IAAAA,SAAS;AACTlB,IAAAA,WAAW;AACXiB,IAAAA,iBAAiB,CAACT,KAAK,CAACW,OAAN,CAAcC,QAAf,CAAjB;AACA,GAJQ,EAIN,EAJM,CAAT;AAMA7B,EAAAA,SAAS,CACR,MAAM;AACL8B,IAAAA,OAAO,CAACC,GAAR,CAAYN,cAAZ;AACA,GAHO,EAIR,CAAEP,IAAF,CAJQ,CAAT;;AAMA,QAAMS,SAAS,GAAG,MAAM;AACvBR,IAAAA,OAAO,CAAC,EAAD,CAAP;AACAC,IAAAA,UAAU,CAAC,EAAD,CAAV;AACAE,IAAAA,SAAS,CAAC,EAAD,CAAT;AACAE,IAAAA,UAAU,CAAC,EAAD,CAAV;AACA,GALD;;AAOA,QAAMQ,QAAQ,GAAIC,CAAD,IAAO;AACvBA,IAAAA,CAAC,CAACC,cAAF;AAEA,QAAIC,QAAQ,GAAG,IAAIC,QAAJ,EAAf;AAEAD,IAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBnB,IAAxB;AACAiB,IAAAA,QAAQ,CAACE,MAAT,CAAgB,SAAhB,EAA2BzB,OAA3B;AACAuB,IAAAA,QAAQ,CAACE,MAAT,CAAgB,QAAhB,EAA0BhB,MAA1B;AACAc,IAAAA,QAAQ,CAACE,MAAT,CAAgB,SAAhB,EAA2Bd,OAA3B;AAEAN,IAAAA,KAAK,CAACT,UAAN,CAAiB2B,QAAjB;AAEAR,IAAAA,SAAS;AACT,GAbD;;AAeA,sBACC,QAAC,IAAD;AAAM,IAAA,QAAQ,EAAEK,QAAhB;AAA0B,IAAA,MAAM,EAAC,MAAjC;AAAwC,IAAA,KAAK,EAAE;AAAEM,MAAAA,MAAM,EAAE,MAAV;AAAkBC,MAAAA,KAAK,EAAE;AAAzB,KAA/C;AAAA,4BACC,QAAC,aAAD;AAAA,8BACC,QAAC,SAAD;AAAA,gCACC,QAAC,KAAD;AACC,UAAA,KAAK,EAAE;AACNC,YAAAA,OAAO,EAAE,KADH;AAENC,YAAAA,QAAQ,EAAE,MAFJ;AAGNC,YAAAA,SAAS,EAAE,MAHL;AAINC,YAAAA,KAAK,EAAE;AAJD,WADR;AAOC,UAAA,OAAO,EAAC,MAPT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,eAWC,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,IAAI,EAAC,MAAxB;AAA+B,UAAA,KAAK,EAAEzB,IAAtC;AAA4C,UAAA,QAAQ,EAAGe,CAAD,IAAOd,OAAO,CAACc,CAAC,CAACW,MAAF,CAASC,KAAV;AAApE;AAAA;AAAA;AAAA;AAAA,gBAXD;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAcC,QAAC,SAAD;AAAA,gCACC,QAAC,KAAD;AACC,UAAA,KAAK,EAAE;AACNL,YAAAA,OAAO,EAAE,KADH;AAENC,YAAAA,QAAQ,EAAE,MAFJ;AAGNC,YAAAA,SAAS,EAAE,MAHL;AAINC,YAAAA,KAAK,EAAE;AAJD,WADR;AAOC,UAAA,OAAO,EAAC,SAPT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,eAWC,QAAC,KAAD;AACC,UAAA,IAAI,EAAC,MADN;AAEC,UAAA,IAAI,EAAC,SAFN;AAGC,UAAA,KAAK,EAAE/B,OAHR;AAIC,UAAA,QAAQ,EAAGqB,CAAD,IAAOb,UAAU,CAAC,GAAGR,OAAJ,EAAaqB,CAAC,CAACW,MAAF,CAASC,KAAtB;AAJ5B;AAAA;AAAA;AAAA;AAAA,gBAXD;AAAA;AAAA;AAAA;AAAA;AAAA,cAdD,eAgCC,QAAC,SAAD;AAAA,gCACC,QAAC,KAAD;AACC,UAAA,KAAK,EAAE;AACNL,YAAAA,OAAO,EAAE,KADH;AAENC,YAAAA,QAAQ,EAAE,MAFJ;AAGNC,YAAAA,SAAS,EAAE,MAHL;AAINC,YAAAA,KAAK,EAAE;AAJD,WADR;AAOC,UAAA,OAAO,EAAC,QAPT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,eAWC,QAAC,KAAD;AACC,UAAA,IAAI,EAAC,MADN;AAEC,UAAA,IAAI,EAAC,QAFN;AAGC,UAAA,KAAK,EAAEtB,MAHR;AAIC,UAAA,QAAQ,EAAGY,CAAD,IAAOX,SAAS,CAAC,GAAGD,MAAJ,EAAYY,CAAC,CAACW,MAAF,CAASC,KAArB;AAJ3B;AAAA;AAAA;AAAA;AAAA,gBAXD;AAAA;AAAA;AAAA;AAAA;AAAA,cAhCD,eAkDC,QAAC,SAAD;AAAA,gCACC,QAAC,KAAD;AACC,UAAA,KAAK,EAAE;AACNL,YAAAA,OAAO,EAAE,KADH;AAENC,YAAAA,QAAQ,EAAE,MAFJ;AAGNC,YAAAA,SAAS,EAAE,MAHL;AAINC,YAAAA,KAAK,EAAE;AAJD,WADR;AAOC,UAAA,OAAO,EAAC,SAPT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,eAWC,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,IAAI,EAAC,SAAxB;AAAkC,UAAA,KAAK,EAAEpB,OAAzC;AAAkD,UAAA,QAAQ,EAAGU,CAAD,IAAOT,UAAU,CAACS,CAAC,CAACW,MAAF,CAASC,KAAV;AAA7E;AAAA;AAAA;AAAA;AAAA,gBAXD;AAAA;AAAA;AAAA;AAAA;AAAA,cAlDD;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAkEC,QAAC,eAAD;AAAA,8BACC,QAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,QAAlB;AAA2B,QAAA,KAAK,EAAE;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAAlC;AAAsD,QAAA,IAAI,EAAC,QAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAKC,QAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,QAAlB;AAA2B,QAAA,KAAK,EAAE;AAAEA,UAAAA,MAAM,EAAE;AAAV,SAAlC;AAAsD,QAAA,OAAO,EAAEnB,SAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALD;AAAA;AAAA;AAAA;AAAA;AAAA,YAlED;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AA8EA,CAvHD;;GAAMX,a;;MAAAA,a;AAyHNA,aAAa,CAAC+B,SAAd,GAA0B;AACzBC,EAAAA,cAAc,EAAEtC,SAAS,CAACuC,IADD;AAEzBC,EAAAA,cAAc,EAAExC,SAAS,CAACuC,IAFD;AAGzBxC,EAAAA,WAAW,EAAEC,SAAS,CAACuC,IAHE;AAIzBzC,EAAAA,UAAU,EAAEE,SAAS,CAACuC,IAJG;AAKzBE,EAAAA,OAAO,EAAEzC,SAAS,CAAC0C,IALM;AAMzB/B,EAAAA,MAAM,EAAEX,SAAS,CAAC2C,MANO;AAOzBzB,EAAAA,OAAO,EAAElB,SAAS,CAAC2C,MAPM;AAQzBC,EAAAA,SAAS,EAAE5C,SAAS,CAACuC;AARI,CAA1B;;AAWA,MAAMM,eAAe,GAAIC,KAAD,KAAY;AAAE5B,EAAAA,OAAO,EAAE4B,KAAK,CAAC5B;AAAjB,CAAZ,CAAxB;;AAEA,eAAejB,OAAO,CAAC4C,eAAD,EAAkB;AAAE/C,EAAAA,UAAF;AAAcC,EAAAA;AAAd,CAAlB,CAAP,CAAsDO,aAAtD,CAAf","sourcesContent":["import { useEffect, useState } from 'react';\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\nimport Styled from 'styled-components';\nimport { addRelease, getReleases } from '../../actions/releaseActions';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { artists } from '../../data/artists';\n\nconst ButtonContainer = Styled.div`\n  height: 150px;\n  width: 100%;\n  position:absolute;\n  bottom: 0;\n  left:0;\n  right: 0;\n\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  align-items: center;\n`;\n\nconst FormContainer = Styled.div`\nposition: relative;\n  height: 100%\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  align-items: flex-start;\n  justify-content: space-between;\n  flex-wrap: wrap;\n  padding: 100px;\n`;\n\nconst UploadRelease = (props) => {\n\tconst [ name, setName ] = useState('');\n\tconst [ artists, setArtists ] = useState([]);\n\tconst [ tracks, setTracks ] = useState([]);\n\tconst [ artwork, setArtwork ] = useState('');\n\tconst [ uploadedTracks, setUploadedTracks ] = useState([]);\n\n\tuseEffect(() => {\n\t\tclearForm();\n\t\tgetReleases();\n\t\tsetUploadedTracks(props.release.releases);\n\t}, []);\n\n\tuseEffect(\n\t\t() => {\n\t\t\tconsole.log(uploadedTracks);\n\t\t},\n\t\t[ name ]\n\t);\n\tconst clearForm = () => {\n\t\tsetName('');\n\t\tsetArtists([]);\n\t\tsetTracks([]);\n\t\tsetArtwork('');\n\t};\n\n\tconst onSubmit = (e) => {\n\t\te.preventDefault();\n\n\t\tlet formData = new FormData();\n\n\t\tformData.append('name', name);\n\t\tformData.append('artists', artists);\n\t\tformData.append('tracks', tracks);\n\t\tformData.append('artwork', artwork);\n\n\t\tprops.addRelease(formData);\n\n\t\tclearForm();\n\t};\n\n\treturn (\n\t\t<Form onSubmit={onSubmit} action='/cms' style={{ height: '100%', width: '100%' }}>\n\t\t\t<FormContainer>\n\t\t\t\t<FormGroup>\n\t\t\t\t\t<Label\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tpadding: '5px',\n\t\t\t\t\t\t\tfontSize: '2rem',\n\t\t\t\t\t\t\ttextAlign: 'left',\n\t\t\t\t\t\t\tcolor: 'white'\n\t\t\t\t\t\t}}\n\t\t\t\t\t\thtmlFor='name'>\n\t\t\t\t\t\tRelease Title\n\t\t\t\t\t</Label>\n\t\t\t\t\t<Input type='text' name='name' value={name} onChange={(e) => setName(e.target.value)} />\n\t\t\t\t</FormGroup>\n\t\t\t\t<FormGroup>\n\t\t\t\t\t<Label\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tpadding: '5px',\n\t\t\t\t\t\t\tfontSize: '2rem',\n\t\t\t\t\t\t\ttextAlign: 'left',\n\t\t\t\t\t\t\tcolor: 'white'\n\t\t\t\t\t\t}}\n\t\t\t\t\t\thtmlFor='artists'>\n\t\t\t\t\t\tartists\n\t\t\t\t\t</Label>\n\t\t\t\t\t<Input\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tname='artists'\n\t\t\t\t\t\tvalue={artists}\n\t\t\t\t\t\tonChange={(e) => setArtists(...artists, e.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t</FormGroup>\n\t\t\t\t<FormGroup>\n\t\t\t\t\t<Label\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tpadding: '5px',\n\t\t\t\t\t\t\tfontSize: '2rem',\n\t\t\t\t\t\t\ttextAlign: 'left',\n\t\t\t\t\t\t\tcolor: 'white'\n\t\t\t\t\t\t}}\n\t\t\t\t\t\thtmlFor='tracks'>\n\t\t\t\t\t\ttracks\n\t\t\t\t\t</Label>\n\t\t\t\t\t<Input\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tname='tracks'\n\t\t\t\t\t\tvalue={tracks}\n\t\t\t\t\t\tonChange={(e) => setTracks(...tracks, e.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t</FormGroup>\n\t\t\t\t<FormGroup>\n\t\t\t\t\t<Label\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tpadding: '5px',\n\t\t\t\t\t\t\tfontSize: '2rem',\n\t\t\t\t\t\t\ttextAlign: 'left',\n\t\t\t\t\t\t\tcolor: 'white'\n\t\t\t\t\t\t}}\n\t\t\t\t\t\thtmlFor='artwork'>\n\t\t\t\t\t\tArtwork\n\t\t\t\t\t</Label>\n\t\t\t\t\t<Input type='text' name='artwork' value={artwork} onChange={(e) => setArtwork(e.target.value)} />\n\t\t\t\t</FormGroup>\n\t\t\t</FormContainer>\n\n\t\t\t<ButtonContainer>\n\t\t\t\t<Button className='btn-lg' style={{ margin: '20px' }} type='submit'>\n\t\t\t\t\tadd item\n\t\t\t\t</Button>\n\n\t\t\t\t<Button className='btn-lg' style={{ margin: '20px' }} onClick={clearForm}>\n\t\t\t\t\tClear Form\n\t\t\t\t</Button>\n\t\t\t</ButtonContainer>\n\t\t</Form>\n\t);\n};\n\nUploadRelease.propTypes = {\n\tsetAudioPlaing: PropTypes.func,\n\tsetAudioPaused: PropTypes.func,\n\tgetReleases: PropTypes.func,\n\taddRelease: PropTypes.func,\n\tplaying: PropTypes.bool,\n\ttracks: PropTypes.object,\n\trelease: PropTypes.object,\n\tgetTracks: PropTypes.func\n};\n\nconst mapStateToProps = (state) => ({ release: state.release });\n\nexport default connect(mapStateToProps, { addRelease, getReleases })(UploadRelease);\n"]},"metadata":{},"sourceType":"module"}